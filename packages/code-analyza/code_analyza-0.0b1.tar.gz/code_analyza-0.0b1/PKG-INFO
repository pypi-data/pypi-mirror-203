Metadata-Version: 2.1
Name: code_analyza
Version: 0.0b1
Summary: A Code Analyser package.
Project-URL: repository, https://github.com/cliftondavies/sca
Author: Clifton Davies
License: MIT License
        
        Copyright (c) 2023 Clifton Davies
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: code analyser,linter,pep8
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.7
Description-Content-Type: text/markdown

# Code Analyza

A code analyser package for Python.

## Getting Started

### Installation

Code Analyza is available via PyPi.

```bash
pip install code-analyza
```

### Usage

Run as a script:

```bash
code_analyza path/to/file/or/directory
```

Import as a module:

```python
from code_analyza.linter.checks import analyse

base_path = # set path/to/file/or/directory
issues = analyse(base_path)
```

## Style Conventions

Code Analyza currently implements 9 conventions as specified by the [PEP 8 ‚Äì Style Guide for Python Code](https://peps.python.org/pep-0008/). They include: 

- Code Lay-out
  - Indentation
  - Maximum Line Length
  - Blank Lines
- Comments
  - Inline Comments
- Naming Conventions
  - Class, Function and Variable Names
  - Function and Method Parameters
- Semicolons 
- Todos
- Default Arguments

## ü§ù Contributing

Contributions, issues and feature requests are welcome!

## Support

Give a ‚≠êÔ∏è if you like this project!

## Acknowledgements

- [PEP 8](https://peps.python.org/pep-0008/)
- [Ruff](https://github.com/charliermarsh/ruff)

## üìù Copyright & License

Copyright (c) 2023 Clifton Davies. This project is licensed under [MIT](https://opensource.org/licenses/MIT). See LICENSE file for details.