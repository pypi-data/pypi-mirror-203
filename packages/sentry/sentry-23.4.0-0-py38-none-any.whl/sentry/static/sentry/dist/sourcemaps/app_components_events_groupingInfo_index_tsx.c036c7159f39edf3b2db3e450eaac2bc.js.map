{"version":3,"file":"chunks/app_components_events_groupingInfo_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/groupingInfo/groupingConfigSelect.tsx","webpack:///./app/components/events/groupingInfo/utils.tsx","webpack:///./app/components/events/groupingInfo/groupingComponentChildren.tsx","webpack:///./app/components/events/groupingInfo/groupingComponentFrames.tsx","webpack:///./app/components/events/groupingInfo/groupingComponentStacktrace.tsx","webpack:///./app/components/events/groupingInfo/groupingComponent.tsx","webpack:///./app/components/events/groupingInfo/groupingVariant.tsx","webpack:///./app/components/events/groupingInfo/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport DropdownAutoComplete from 'sentry/components/dropdownAutoComplete';\nimport DropdownButton from 'sentry/components/dropdownButton';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport {EventGroupingConfig} from 'sentry/types';\n\nimport {GroupingConfigItem} from '.';\n\ntype Props = AsyncComponent['props'] & {\n  configId: string;\n  eventConfigId: string;\n  onSelect: (selection: any) => void;\n};\n\ntype State = AsyncComponent['state'] & {\n  configs: EventGroupingConfig[];\n};\n\nclass GroupingConfigSelect extends AsyncComponent<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      configs: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    return [['configs', '/grouping-configs/']];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    const {configId, eventConfigId, onSelect} = this.props;\n    const {configs} = this.state;\n\n    const options = configs.map(({id, hidden}) => ({\n      value: id,\n      label: (\n        <GroupingConfigItem isHidden={hidden} isActive={id === eventConfigId}>\n          {id}\n        </GroupingConfigItem>\n      ),\n    }));\n\n    return (\n      <DropdownAutoComplete onSelect={onSelect} items={options}>\n        {({isOpen}) => (\n          <Tooltip title={t('Click here to experiment with other grouping configs')}>\n            <StyledDropdownButton isOpen={isOpen} size=\"sm\">\n              <GroupingConfigItem isActive={eventConfigId === configId}>\n                {configId}\n              </GroupingConfigItem>\n            </StyledDropdownButton>\n          </Tooltip>\n        )}\n      </DropdownAutoComplete>\n    );\n  }\n}\n\nconst StyledDropdownButton = styled(DropdownButton)`\n  font-weight: inherit;\n`;\n\nexport default GroupingConfigSelect;\n","import isObject from 'lodash/isObject';\n\nimport {EventGroupComponent} from 'sentry/types';\n\nexport function hasNonContributingComponent(component: EventGroupComponent | undefined) {\n  if (component === undefined) {\n    return false;\n  }\n\n  if (!component.contributes) {\n    return true;\n  }\n\n  for (const value of component.values) {\n    if (isObject(value) && hasNonContributingComponent(value)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function shouldInlineComponentValue(component: EventGroupComponent) {\n  return (component.values as EventGroupComponent[]).every(value => !isObject(value));\n}\n\nexport function groupingComponentFilter(\n  value: EventGroupComponent | string,\n  showNonContributing: boolean\n) {\n  if (isObject(value)) {\n    // no point rendering such nodes at all, we never show them\n    if (!value.contributes && !value.hint && value.values.length === 0) {\n      return false;\n    }\n    // non contributing values are otherwise optional\n    if (!showNonContributing && !value.contributes) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import {Fragment} from 'react';\nimport isObject from 'lodash/isObject';\n\nimport {EventGroupComponent} from 'sentry/types';\n\nimport GroupingComponent, {\n  GroupingComponentListItem,\n  GroupingValue,\n} from './groupingComponent';\nimport {groupingComponentFilter} from './utils';\n\ntype Props = {\n  component: EventGroupComponent;\n  showNonContributing: boolean;\n};\n\nfunction GroupingComponentChildren({component, showNonContributing}: Props) {\n  return (\n    <Fragment>\n      {(component.values as EventGroupComponent[])\n        .filter(value => groupingComponentFilter(value, showNonContributing))\n        .map((value, idx) => (\n          <GroupingComponentListItem key={idx}>\n            {isObject(value) ? (\n              <GroupingComponent\n                component={value}\n                showNonContributing={showNonContributing}\n              />\n            ) : (\n              <GroupingValue valueType={component.name || component.id}>\n                {typeof value === 'string' || typeof value === 'number'\n                  ? value\n                  : JSON.stringify(value, null, 2)}\n              </GroupingValue>\n            )}\n          </GroupingComponentListItem>\n        ))}\n    </Fragment>\n  );\n}\n\nexport default GroupingComponentChildren;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {IconAdd, IconSubtract} from 'sentry/icons';\nimport {tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\nimport {GroupingComponentListItem} from './groupingComponent';\n\ntype DefaultProps = {\n  maxVisibleItems: number;\n};\n\ntype Props = DefaultProps & {\n  items: React.ReactNode[];\n};\n\ntype State = {\n  collapsed: boolean;\n};\n\nclass GroupingComponentFrames extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    maxVisibleItems: 2,\n  };\n\n  state: State = {\n    collapsed: true,\n  };\n\n  render() {\n    const {items, maxVisibleItems} = this.props;\n    const {collapsed} = this.state;\n    const isCollapsible = items.length > maxVisibleItems;\n\n    return (\n      <Fragment>\n        {items.map((item, index) => {\n          if (!collapsed || index < maxVisibleItems) {\n            return (\n              <GroupingComponentListItem isCollapsible={isCollapsible} key={index}>\n                {item}\n              </GroupingComponentListItem>\n            );\n          }\n\n          if (index === maxVisibleItems) {\n            return (\n              <GroupingComponentListItem key={index}>\n                <ToggleCollapse\n                  size=\"sm\"\n                  priority=\"link\"\n                  icon={<IconAdd legacySize=\"8px\" />}\n                  onClick={() => this.setState({collapsed: false})}\n                >\n                  {tct('show [numberOfFrames] similar', {\n                    numberOfFrames: items.length - maxVisibleItems,\n                  })}\n                </ToggleCollapse>\n              </GroupingComponentListItem>\n            );\n          }\n\n          return null;\n        })}\n\n        {!collapsed && items.length > maxVisibleItems && (\n          <GroupingComponentListItem>\n            <ToggleCollapse\n              size=\"sm\"\n              priority=\"link\"\n              icon={<IconSubtract legacySize=\"8px\" />}\n              onClick={() => this.setState({collapsed: true})}\n            >\n              {tct('collapse [numberOfFrames] similar', {\n                numberOfFrames: items.length - maxVisibleItems,\n              })}\n            </ToggleCollapse>\n          </GroupingComponentListItem>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst ToggleCollapse = styled(Button)`\n  margin: ${space(0.5)} 0;\n  color: ${p => p.theme.linkColor};\n`;\n\nexport default GroupingComponentFrames;\n","import {Fragment} from 'react';\n\nimport {EventGroupComponent} from 'sentry/types';\n\nimport GroupingComponent from './groupingComponent';\nimport GroupingComponentFrames from './groupingComponentFrames';\nimport {groupingComponentFilter} from './utils';\n\ntype FrameGroup = {\n  data: EventGroupComponent[];\n  key: string;\n};\n\ntype Props = {\n  component: EventGroupComponent;\n  showNonContributing: boolean;\n};\n\nfunction GroupingComponentStacktrace({component, showNonContributing}: Props) {\n  const getFrameGroups = () => {\n    const frameGroups: FrameGroup[] = [];\n\n    (component.values as EventGroupComponent[])\n      .filter(value => groupingComponentFilter(value, showNonContributing))\n      .forEach(value => {\n        const key = (value.values as EventGroupComponent[])\n          .filter(v => groupingComponentFilter(v, showNonContributing))\n          .map(v => v.id)\n          .sort((a, b) => a.localeCompare(b))\n          .join('');\n\n        const lastGroup = frameGroups[frameGroups.length - 1];\n\n        if (lastGroup?.key === key) {\n          lastGroup.data.push(value);\n        } else {\n          frameGroups.push({key, data: [value]});\n        }\n      });\n\n    return frameGroups;\n  };\n\n  return (\n    <Fragment>\n      {getFrameGroups().map((group, index) => (\n        <GroupingComponentFrames\n          key={index}\n          items={group.data.map((v, idx) => (\n            <GroupingComponent\n              key={idx}\n              component={v}\n              showNonContributing={showNonContributing}\n            />\n          ))}\n        />\n      ))}\n    </Fragment>\n  );\n}\n\nexport default GroupingComponentStacktrace;\n","import styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\nimport {EventGroupComponent} from 'sentry/types';\n\nimport GroupingComponentChildren from './groupingComponentChildren';\nimport GroupingComponentStacktrace from './groupingComponentStacktrace';\nimport {shouldInlineComponentValue} from './utils';\n\ntype Props = {\n  component: EventGroupComponent;\n  showNonContributing: boolean;\n};\n\nfunction GroupingComponent({component, showNonContributing}: Props) {\n  const shouldInlineValue = shouldInlineComponentValue(component);\n\n  const GroupingComponentListItems =\n    component.id === 'stacktrace'\n      ? GroupingComponentStacktrace\n      : GroupingComponentChildren;\n\n  return (\n    <GroupingComponentWrapper isContributing={component.contributes}>\n      <span>\n        {component.name || component.id}\n        {component.hint && <GroupingHint>{` (${component.hint})`}</GroupingHint>}\n      </span>\n\n      <GroupingComponentList isInline={shouldInlineValue}>\n        <GroupingComponentListItems\n          component={component}\n          showNonContributing={showNonContributing}\n        />\n      </GroupingComponentList>\n    </GroupingComponentWrapper>\n  );\n}\n\nconst GroupingComponentList = styled('ul')<{isInline: boolean}>`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  &,\n  & > li {\n    display: ${p => (p.isInline ? 'inline' : 'block')};\n  }\n`;\n\nexport const GroupingComponentListItem = styled('li')<{isCollapsible?: boolean}>`\n  padding: 0;\n  margin: ${space(0.25)} 0 ${space(0.25)} ${space(1.5)};\n\n  ${p =>\n    p.isCollapsible &&\n    `\n    border-left: 1px solid ${p.theme.innerBorder};\n    margin: 0 0 -${space(0.25)} ${space(1)};\n    padding-left: ${space(0.5)};\n  `}\n`;\n\nexport const GroupingValue = styled('code')<{valueType: string}>`\n  display: inline-block;\n  margin: ${space(0.25)} ${space(0.5)} ${space(0.25)} 0;\n  font-size: ${p => p.theme.fontSizeSmall};\n  padding: 0 ${space(0.25)};\n  background: rgba(112, 163, 214, 0.1);\n  color: ${p => p.theme.textColor};\n\n  ${({valueType}) =>\n    (valueType === 'function' || valueType === 'symbol') &&\n    `\n    font-weight: bold;\n    color: ${p => p.theme.textColor};\n  `}\n`;\n\nconst GroupingComponentWrapper = styled('div')<{isContributing: boolean}>`\n  color: ${p => (p.isContributing ? null : p.theme.textColor)};\n\n  ${GroupingValue}, button {\n    opacity: 1;\n  }\n`;\n\nconst GroupingHint = styled('small')`\n  font-size: 0.8em;\n`;\n\nexport default GroupingComponent;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport capitalize from 'lodash/capitalize';\n\nimport KeyValueList from 'sentry/components/events/interfaces/keyValueList';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {SegmentedControl} from 'sentry/components/segmentedControl';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconCheckmark, IconClose} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {\n  EventGroupComponent,\n  EventGroupVariant,\n  EventGroupVariantType,\n} from 'sentry/types';\n\nimport GroupingComponent from './groupingComponent';\nimport {hasNonContributingComponent} from './utils';\n\ntype Props = {\n  showGroupingConfig: boolean;\n  variant: EventGroupVariant;\n};\n\ntype State = {\n  showNonContributing: boolean;\n};\n\ntype VariantData = [string, React.ReactNode][];\n\nfunction addFingerprintInfo(data: VariantData, variant: EventGroupVariant) {\n  if ('matched_rule' in variant) {\n    data.push([\n      t('Fingerprint rule'),\n      <TextWithQuestionTooltip key=\"type\">\n        {variant.matched_rule}\n        <QuestionTooltip\n          size=\"xs\"\n          position=\"top\"\n          title={t('The server-side fingerprinting rule that produced the fingerprint.')}\n        />\n      </TextWithQuestionTooltip>,\n    ]);\n  }\n  if ('values' in variant) {\n    data.push([t('Fingerprint values'), variant.values]);\n  }\n  if ('client_values' in variant) {\n    data.push([\n      t('Client fingerprint values'),\n      <TextWithQuestionTooltip key=\"type\">\n        {variant.client_values}\n        <QuestionTooltip\n          size=\"xs\"\n          position=\"top\"\n          title={t(\n            'The client sent a fingerprint that was overridden by a server-side fingerprinting rule.'\n          )}\n        />\n      </TextWithQuestionTooltip>,\n    ]);\n  }\n}\n\nclass GroupVariant extends Component<Props, State> {\n  state: State = {\n    showNonContributing: false,\n  };\n\n  getVariantData(): [VariantData, EventGroupComponent | undefined] {\n    const {variant, showGroupingConfig} = this.props;\n    const data: VariantData = [];\n    let component: EventGroupComponent | undefined;\n\n    if (!this.state.showNonContributing && variant.hash === null) {\n      return [data, component];\n    }\n\n    if (variant.hash !== null) {\n      data.push([\n        t('Hash'),\n        <TextWithQuestionTooltip key=\"hash\">\n          <Hash>{variant.hash}</Hash>\n          <QuestionTooltip\n            size=\"xs\"\n            position=\"top\"\n            title={t('Events with the same hash are grouped together')}\n          />\n        </TextWithQuestionTooltip>,\n      ]);\n    }\n\n    if (variant.hashMismatch) {\n      data.push([\n        t('Hash mismatch'),\n        t('hashing algorithm produced a hash that does not match the event'),\n      ]);\n    }\n\n    switch (variant.type) {\n      case EventGroupVariantType.COMPONENT:\n        component = variant.component;\n        data.push([\n          t('Type'),\n          <TextWithQuestionTooltip key=\"type\">\n            {variant.type}\n            <QuestionTooltip\n              size=\"xs\"\n              position=\"top\"\n              title={t(\n                'Uses a complex grouping algorithm taking event data into account'\n              )}\n            />\n          </TextWithQuestionTooltip>,\n        ]);\n        if (showGroupingConfig && variant.config?.id) {\n          data.push([t('Grouping Config'), variant.config.id]);\n        }\n        break;\n      case EventGroupVariantType.CUSTOM_FINGERPRINT:\n        data.push([\n          t('Type'),\n          <TextWithQuestionTooltip key=\"type\">\n            {variant.type}\n            <QuestionTooltip\n              size=\"xs\"\n              position=\"top\"\n              title={t('Overrides the default grouping by a custom fingerprinting rule')}\n            />\n          </TextWithQuestionTooltip>,\n        ]);\n        addFingerprintInfo(data, variant);\n        break;\n      case EventGroupVariantType.SALTED_COMPONENT:\n        component = variant.component;\n        data.push([\n          t('Type'),\n          <TextWithQuestionTooltip key=\"type\">\n            {variant.type}\n            <QuestionTooltip\n              size=\"xs\"\n              position=\"top\"\n              title={t(\n                'Uses a complex grouping algorithm taking event data and a fingerprint into account'\n              )}\n            />\n          </TextWithQuestionTooltip>,\n        ]);\n        addFingerprintInfo(data, variant);\n        if (showGroupingConfig && variant.config?.id) {\n          data.push([t('Grouping Config'), variant.config.id]);\n        }\n        break;\n      case EventGroupVariantType.PERFORMANCE_PROBLEM:\n        data.push([\n          t('Type'),\n          <TextWithQuestionTooltip key=\"type\">\n            {variant.type}\n            <QuestionTooltip\n              size=\"xs\"\n              position=\"top\"\n              title={t(\n                'Uses the evidence from performance issue detection to generate a fingerprint.'\n              )}\n            />\n          </TextWithQuestionTooltip>,\n        ]);\n\n        data.push(['Performance Issue Type', variant.key]);\n        data.push(['Span Operation', variant.evidence.op]);\n        data.push(['Parent Span Hashes', variant.evidence.parent_span_hashes]);\n        data.push(['Source Span Hashes', variant.evidence.cause_span_hashes]);\n        data.push([\n          'Offender Span Hashes',\n          [...new Set(variant.evidence.offender_span_hashes)],\n        ]);\n        break;\n      default:\n        break;\n    }\n\n    if (component) {\n      data.push([\n        t('Grouping'),\n        <GroupingTree key={component.id}>\n          <GroupingComponent\n            component={component}\n            showNonContributing={this.state.showNonContributing}\n          />\n        </GroupingTree>,\n      ]);\n    }\n\n    return [data, component];\n  }\n\n  renderTitle() {\n    const {variant} = this.props;\n    const isContributing = variant.hash !== null;\n\n    let title: string;\n    if (isContributing) {\n      title = t('Contributing variant');\n    } else {\n      const hint = 'component' in variant ? variant.component?.hint : undefined;\n      if (hint) {\n        title = t('Non-contributing variant: %s', hint);\n      } else {\n        title = t('Non-contributing variant');\n      }\n    }\n\n    return (\n      <Tooltip title={title}>\n        <VariantTitle>\n          <ContributionIcon isContributing={isContributing} />\n          {t('By')}{' '}\n          {variant.description\n            ?.split(' ')\n            .map(i => capitalize(i))\n            .join(' ') ?? t('Nothing')}\n        </VariantTitle>\n      </Tooltip>\n    );\n  }\n\n  renderContributionToggle() {\n    const {showNonContributing} = this.state;\n\n    return (\n      <SegmentedControl\n        aria-label={t('Filter by contribution')}\n        size=\"xs\"\n        value={showNonContributing ? 'all' : 'relevant'}\n        onChange={key => this.setState({showNonContributing: key === 'all'})}\n      >\n        <SegmentedControl.Item key=\"relevant\">\n          {t('Contributing values')}\n        </SegmentedControl.Item>\n        <SegmentedControl.Item key=\"all\">{t('All values')}</SegmentedControl.Item>\n      </SegmentedControl>\n    );\n  }\n\n  render() {\n    const [data, component] = this.getVariantData();\n\n    return (\n      <VariantWrapper>\n        <Header>\n          {this.renderTitle()}\n          {hasNonContributingComponent(component) && this.renderContributionToggle()}\n        </Header>\n\n        <KeyValueList\n          data={data.map(d => ({\n            key: d[0],\n            subject: d[0],\n            value: d[1],\n          }))}\n          isContextData\n          shouldSort={false}\n        />\n      </VariantWrapper>\n    );\n  }\n}\n\nconst VariantWrapper = styled('div')`\n  margin-bottom: ${space(4)};\n`;\n\nconst Header = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(2)};\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    display: block;\n  }\n`;\n\nconst VariantTitle = styled('h5')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: 0;\n  display: flex;\n  align-items: center;\n`;\n\nconst ContributionIcon = styled(({isContributing, ...p}) =>\n  isContributing ? (\n    <IconCheckmark size=\"sm\" isCircled color=\"successText\" {...p} />\n  ) : (\n    <IconClose size=\"sm\" isCircled color=\"dangerText\" {...p} />\n  )\n)`\n  margin-right: ${space(1)};\n`;\n\nconst GroupingTree = styled('div')`\n  color: ${p => p.theme.textColor};\n`;\n\nconst TextWithQuestionTooltip = styled('div')`\n  display: grid;\n  align-items: center;\n  grid-template-columns: auto 1fr;\n  gap: ${space(0.5)};\n`;\n\nconst Hash = styled('span')`\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    ${p => p.theme.overflowEllipsis};\n    width: 210px;\n  }\n`;\n\nexport default GroupVariant;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {Button} from 'sentry/components/button';\nimport {EventDataSection} from 'sentry/components/events/eventDataSection';\nimport {FeatureFeedback} from 'sentry/components/featureFeedback';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {EventGroupInfo, Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport {groupingFeedbackTypes} from 'sentry/views/issueDetails/grouping/grouping';\n\nimport GroupingConfigSelect from './groupingConfigSelect';\nimport GroupVariant from './groupingVariant';\n\ntype Props = AsyncComponent['props'] & {\n  event: Event;\n  organization: Organization;\n  projectSlug: string;\n  showGroupingConfig: boolean;\n};\n\ntype State = AsyncComponent['state'] & {\n  configOverride: string | null;\n  groupInfo: EventGroupInfo;\n  isOpen: boolean;\n};\n\nclass GroupingInfo extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, event, projectSlug} = this.props;\n\n    let path = `/projects/${organization.slug}/${projectSlug}/events/${event.id}/grouping-info/`;\n    if (this.state?.configOverride) {\n      path = `${path}?config=${this.state.configOverride}`;\n    }\n\n    return [['groupInfo', path]];\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      isOpen: false,\n      configOverride: null,\n    };\n  }\n\n  toggle = () => {\n    this.setState(state => ({\n      isOpen: !state.isOpen,\n      configOverride: state.isOpen ? null : state.configOverride,\n    }));\n  };\n\n  handleConfigSelect = selection => {\n    this.setState({configOverride: selection.value}, () => this.reloadData());\n  };\n\n  renderGroupInfoSummary() {\n    const {groupInfo} = this.state;\n\n    if (!groupInfo) {\n      return null;\n    }\n\n    const groupedBy = Object.values(groupInfo)\n      .filter(variant => variant.hash !== null && variant.description !== null)\n      .map(variant => variant.description)\n      .sort((a, b) => a!.toLowerCase().localeCompare(b!.toLowerCase()))\n      .join(', ');\n\n    return (\n      <p data-test-id=\"loaded-grouping-info\">\n        <strong>{t('Grouped by:')}</strong> {groupedBy || t('nothing')}\n      </p>\n    );\n  }\n\n  renderGroupConfigSelect() {\n    const {configOverride} = this.state;\n    const {event} = this.props;\n\n    if (!event.groupingConfig) {\n      return null;\n    }\n\n    const configId = configOverride ?? event.groupingConfig?.id;\n\n    return (\n      <GroupingConfigSelect\n        eventConfigId={event.groupingConfig.id}\n        configId={configId}\n        onSelect={this.handleConfigSelect}\n      />\n    );\n  }\n\n  renderGroupInfo() {\n    const {groupInfo, loading} = this.state;\n    const {showGroupingConfig} = this.props;\n\n    const variants = groupInfo\n      ? Object.values(groupInfo).sort((a, b) =>\n          a.hash && !b.hash\n            ? -1\n            : a.description\n                ?.toLowerCase()\n                .localeCompare(b.description?.toLowerCase() ?? '') ?? 1\n        )\n      : [];\n\n    return (\n      <Fragment>\n        <ConfigHeader>\n          <div>{showGroupingConfig && this.renderGroupConfigSelect()}</div>\n          <FeatureFeedback\n            featureName=\"grouping\"\n            feedbackTypes={groupingFeedbackTypes}\n            buttonProps={{size: 'sm'}}\n          />\n        </ConfigHeader>\n\n        {loading ? (\n          <LoadingIndicator />\n        ) : (\n          variants.map((variant, index) => (\n            <Fragment key={variant.key}>\n              <GroupVariant variant={variant} showGroupingConfig={showGroupingConfig} />\n              {index < variants.length - 1 && <VariantDivider />}\n            </Fragment>\n          ))\n        )}\n      </Fragment>\n    );\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    const {isOpen} = this.state;\n\n    return (\n      <EventDataSection\n        type=\"grouping-info\"\n        title={t('Event Grouping Information')}\n        actions={\n          <ToggleButton onClick={this.toggle} priority=\"link\">\n            {isOpen ? t('Hide Details') : t('Show Details')}\n          </ToggleButton>\n        }\n      >\n        {isOpen ? this.renderGroupInfo() : this.renderGroupInfoSummary()}\n      </EventDataSection>\n    );\n  }\n}\n\nconst ConfigHeader = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: ${space(1)};\n  margin-bottom: ${space(2)};\n`;\n\nconst ToggleButton = styled(Button)`\n  font-weight: 700;\n  color: ${p => p.theme.subText};\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport const GroupingConfigItem = styled('span')<{\n  isActive?: boolean;\n  isHidden?: boolean;\n}>`\n  font-family: ${p => p.theme.text.familyMono};\n  opacity: ${p => (p.isHidden ? 0.5 : null)};\n  font-weight: ${p => (p.isActive ? 'bold' : null)};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst VariantDivider = styled('hr')`\n  padding-top: ${space(1)};\n  border-top: 1px solid ${p => p.theme.border};\n`;\n\nexport const EventGroupingInfo = withOrganization(GroupingInfo);\n"],"names":["GroupingConfigSelect","AsyncComponent","getDefaultState","super","configs","getEndpoints","renderLoading","this","renderBody","configId","eventConfigId","onSelect","props","state","options","map","_ref","id","hidden","value","label","_jsx","GroupingConfigItem","isHidden","isActive","children","DropdownAutoComplete","items","_ref2","isOpen","Tooltip","title","t","StyledDropdownButton","size","_styled","DropdownButton","target","name","styles","hasNonContributingComponent","component","undefined","contributes","values","isObject","groupingComponentFilter","showNonContributing","hint","length","GroupingComponentChildren","Fragment","filter","idx","GroupingComponentListItem","GroupingComponent","GroupingValue","valueType","JSON","stringify","displayName","GroupingComponentFrames","Component","constructor","arguments","_defineProperty","collapsed","render","maxVisibleItems","isCollapsible","_jsxs","item","index","ToggleCollapse","priority","icon","IconAdd","legacySize","onClick","setState","tct","numberOfFrames","IconSubtract","Button","space","p","theme","linkColor","GroupingComponentStacktrace","getFrameGroups","frameGroups","forEach","key","v","sort","a","b","localeCompare","join","lastGroup","data","push","group","shouldInlineValue","every","shouldInlineComponentValue","GroupingComponentListItems","GroupingComponentWrapper","isContributing","GroupingHint","GroupingComponentList","isInline","innerBorder","fontSizeSmall","textColor","addFingerprintInfo","variant","TextWithQuestionTooltip","matched_rule","QuestionTooltip","position","client_values","GroupVariant","getVariantData","showGroupingConfig","hash","Hash","hashMismatch","type","EventGroupVariantType","config","evidence","op","parent_span_hashes","cause_span_hashes","Set","offender_span_hashes","GroupingTree","renderTitle","VariantTitle","ContributionIcon","description","split","i","capitalize","renderContributionToggle","SegmentedControl","onChange","VariantWrapper","Header","KeyValueList","d","subject","isContextData","shouldSort","breakpoints","small","fontSizeMedium","IconCheckmark","isCircled","color","IconClose","overflowEllipsis","GroupingInfo","configOverride","selection","reloadData","organization","event","projectSlug","path","slug","renderGroupInfoSummary","groupInfo","groupedBy","Object","toLowerCase","renderGroupConfigSelect","groupingConfig","handleConfigSelect","renderGroupInfo","loading","variants","ConfigHeader","FeatureFeedback","featureName","feedbackTypes","groupingFeedbackTypes","buttonProps","LoadingIndicator","VariantDivider","EventDataSection","actions","ToggleButton","toggle","subText","text","familyMono","border","EventGroupingInfo","withOrganization"],"sourceRoot":""}