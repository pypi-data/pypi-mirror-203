{"version":3,"file":"chunks/app_views_settings_projectTags_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectTags/index.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport {Alert} from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nfunction PermissionAlert({access = ['project:write'], ...props}: Props) {\n  return (\n    <Access access={access}>\n      {({hasAccess}) =>\n        !hasAccess && (\n          <Alert data-test-id=\"project-permission-alert\" type=\"warning\" {...props}>\n            {t(\n              'These settings can only be edited by users with the organization owner, manager, or admin role.'\n            )}\n          </Alert>\n        )\n      }\n    </Access>\n  );\n}\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport {IconDelete} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, TagWithTopValues} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\n\ntype Props = RouteComponentProps<{projectId: string}, {}> & {\n  organization: Organization;\n} & AsyncView['props'];\n\ntype State = {\n  tags: Array<TagWithTopValues>;\n} & AsyncView['state'];\n\nclass ProjectTags extends AsyncView<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      tags: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n    return [['tags', `/projects/${organization.slug}/${projectId}/tags/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Tags'), projectId, false);\n  }\n\n  handleDelete = (key: TagWithTopValues['key'], idx: number) => async () => {\n    const {organization, params} = this.props;\n    const {projectId} = params;\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/tags/${key}/`,\n        {\n          method: 'DELETE',\n        }\n      );\n\n      const tags = [...this.state.tags];\n      tags.splice(idx, 1);\n      this.setState({tags});\n    } catch (error) {\n      this.setState({error: true, loading: false});\n    }\n  };\n\n  renderBody() {\n    const {tags} = this.state;\n    const isEmpty = !tags || !tags.length;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader title={t('Tags')} />\n        <PermissionAlert />\n\n        <TextBlock>\n          {tct(\n            `Each event in Sentry may be annotated with various tags (key and value pairs).\n                 Learn how to [link:add custom tags].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platform-redirect/?next=/enriching-events/tags/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <Panel>\n          <PanelHeader>{t('Tags')}</PanelHeader>\n          <PanelBody>\n            {isEmpty ? (\n              <EmptyMessage>\n                {tct('There are no tags, [link:learn how to add tags]', {\n                  link: (\n                    <ExternalLink href=\"https://docs.sentry.io/product/sentry-basics/enrich-data/\" />\n                  ),\n                })}\n              </EmptyMessage>\n            ) : (\n              <Access access={['project:write']}>\n                {({hasAccess}) =>\n                  tags.map(({key, canDelete}, idx) => {\n                    const enabled = canDelete && hasAccess;\n                    return (\n                      <TagPanelItem key={key} data-test-id=\"tag-row\">\n                        <TagName>{key}</TagName>\n                        <Actions>\n                          <Confirm\n                            message={t('Are you sure you want to remove this tag?')}\n                            onConfirm={this.handleDelete(key, idx)}\n                            disabled={!enabled}\n                          >\n                            <Button\n                              size=\"xs\"\n                              title={\n                                enabled\n                                  ? t('Remove tag')\n                                  : hasAccess\n                                  ? t('This tag cannot be deleted.')\n                                  : t('You do not have permission to remove tags.')\n                              }\n                              aria-label={t('Remove tag')}\n                              icon={<IconDelete size=\"xs\" />}\n                              data-test-id=\"delete\"\n                            />\n                          </Confirm>\n                        </Actions>\n                      </TagPanelItem>\n                    );\n                  })\n                }\n              </Access>\n            )}\n          </PanelBody>\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n\nexport default ProjectTags;\n\nconst TagPanelItem = styled(PanelItem)`\n  padding: 0;\n  align-items: center;\n`;\n\nconst TagName = styled('div')`\n  flex: 1;\n  padding: ${space(2)};\n`;\n\nconst Actions = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(2)};\n`;\n"],"names":["routeName","orgSlug","projectSlug","arguments","length","undefined","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","PermissionAlert","_ref","access","props","Access","_ref2","hasAccess","Alert","type","t","ProjectTags","constructor","_defineProperty","key","idx","async","organization","params","projectId","api","requestPromise","slug","method","tags","state","splice","setState","error","loading","getDefaultState","super","getEndpoints","routeTitleGen","renderBody","isEmpty","_jsxs","Fragment","SettingsPageHeader","TextBlock","tct","link","ExternalLink","href","Panel","PanelHeader","PanelBody","EmptyMessage","map","canDelete","enabled","TagPanelItem","TagName","Actions","Confirm","message","onConfirm","handleDelete","disabled","Button","size","icon","IconDelete","_styled","PanelItem","target","name","styles","space"],"sourceRoot":""}