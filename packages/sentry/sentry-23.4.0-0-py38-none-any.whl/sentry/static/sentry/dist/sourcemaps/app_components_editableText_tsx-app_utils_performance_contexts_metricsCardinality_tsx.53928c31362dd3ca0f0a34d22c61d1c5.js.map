{"version":3,"file":"chunks/app_components_editableText_tsx-app_utils_performance_contexts_metricsCardinality_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/useKeyPress.tsx","webpack:///./app/components/editableText.tsx","webpack:///./app/utils/performance/metricsEnhanced/metricsCompatibilityQuery.tsx","webpack:///./app/utils/performance/metricsEnhanced/metricsCompatibilityQuerySums.tsx","webpack:///./app/utils/performance/contexts/metricsCardinality.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\n\n/**\n * Hook to detect when a specific key is being pressed\n */\nconst useKeyPress = (targetKey: string, target?: HTMLElement) => {\n  const [keyPressed, setKeyPressed] = useState(false);\n  const current = target ?? document.body;\n\n  useEffect(() => {\n    const downHandler = ({key}: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    };\n\n    const upHandler = ({key}: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    current.addEventListener('keydown', downHandler);\n    current.addEventListener('keyup', upHandler);\n\n    return () => {\n      current.removeEventListener('keydown', downHandler);\n      current.removeEventListener('keyup', upHandler);\n    };\n  }, [targetKey, current]);\n\n  return keyPressed;\n};\n\nexport default useKeyPress;\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport Input from 'sentry/components/input';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {IconEdit} from 'sentry/icons/iconEdit';\nimport {space} from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport useKeypress from 'sentry/utils/useKeyPress';\nimport useOnClickOutside from 'sentry/utils/useOnClickOutside';\n\ntype Props = {\n  onChange: (value: string) => void;\n  value: string;\n  'aria-label'?: string;\n  autoSelect?: boolean;\n  className?: string;\n  errorMessage?: React.ReactNode;\n  isDisabled?: boolean;\n  maxLength?: number;\n  name?: string;\n  successMessage?: React.ReactNode;\n};\n\nfunction EditableText({\n  value,\n  onChange,\n  name,\n  errorMessage,\n  successMessage,\n  maxLength,\n  isDisabled = false,\n  autoSelect = false,\n  className,\n  'aria-label': ariaLabel,\n}: Props) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [inputValue, setInputValue] = useState(value);\n\n  const isEmpty = !inputValue.trim();\n\n  const innerWrapperRef = useRef<HTMLDivElement>(null);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const enter = useKeypress('Enter');\n  const esc = useKeypress('Escape');\n\n  function revertValueAndCloseEditor() {\n    if (value !== inputValue) {\n      setInputValue(value);\n    }\n\n    if (isEditing) {\n      setIsEditing(false);\n    }\n  }\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(innerWrapperRef, () => {\n    if (!isEditing) {\n      return;\n    }\n\n    if (isEmpty) {\n      displayStatusMessage('error');\n      return;\n    }\n\n    if (inputValue !== value) {\n      onChange(inputValue);\n      displayStatusMessage('success');\n    }\n\n    setIsEditing(false);\n  });\n\n  const onEnter = useCallback(() => {\n    if (enter) {\n      if (isEmpty) {\n        displayStatusMessage('error');\n        return;\n      }\n\n      if (inputValue !== value) {\n        onChange(inputValue);\n        displayStatusMessage('success');\n      }\n\n      setIsEditing(false);\n    }\n  }, [enter, inputValue, onChange]);\n\n  const onEsc = useCallback(() => {\n    if (esc) {\n      revertValueAndCloseEditor();\n    }\n  }, [esc]);\n\n  useEffect(() => {\n    revertValueAndCloseEditor();\n  }, [isDisabled, value]);\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isEditing) {\n      const inputElement = inputRef.current;\n      if (defined(inputElement)) {\n        inputElement.focus();\n      }\n    }\n  }, [isEditing]);\n\n  useEffect(() => {\n    if (isEditing) {\n      // if Enter is pressed, save the value and close the editor\n      onEnter();\n      // if Escape is pressed, revert the value and close the editor\n      onEsc();\n    }\n  }, [onEnter, onEsc, isEditing]); // watch the Enter and Escape key presses\n\n  function displayStatusMessage(status: 'error' | 'success') {\n    if (status === 'error') {\n      if (errorMessage) {\n        addErrorMessage(errorMessage);\n      }\n      return;\n    }\n\n    if (successMessage) {\n      addSuccessMessage(successMessage);\n    }\n  }\n\n  function handleInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setInputValue(event.target.value);\n  }\n\n  function handleEditClick() {\n    setIsEditing(true);\n  }\n\n  return (\n    <Wrapper isDisabled={isDisabled} isEditing={isEditing} className={className}>\n      {isEditing ? (\n        <InputWrapper\n          ref={innerWrapperRef}\n          isEmpty={isEmpty}\n          data-test-id=\"editable-text-input\"\n        >\n          <StyledInput\n            aria-label={ariaLabel}\n            name={name}\n            ref={inputRef}\n            value={inputValue}\n            onChange={handleInputChange}\n            onFocus={event => autoSelect && event.target.select()}\n            maxLength={maxLength}\n          />\n          <InputLabel>{inputValue}</InputLabel>\n        </InputWrapper>\n      ) : (\n        <Label\n          onClick={isDisabled ? undefined : handleEditClick}\n          ref={labelRef}\n          isDisabled={isDisabled}\n          data-test-id=\"editable-text-label\"\n        >\n          <InnerLabel>{inputValue}</InnerLabel>\n          {!isDisabled && <IconEdit />}\n        </Label>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default EditableText;\n\nexport const Label = styled('div')<{isDisabled: boolean}>`\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  gap: ${space(1)};\n  cursor: ${p => (p.isDisabled ? 'default' : 'pointer')};\n`;\n\nconst InnerLabel = styled(TextOverflow)`\n  border-top: 1px solid transparent;\n  border-bottom: 1px dotted ${p => p.theme.gray200};\n  line-height: 38px;\n`;\n\nconst InputWrapper = styled('div')<{isEmpty: boolean}>`\n  display: inline-block;\n  background: ${p => p.theme.gray100};\n  border-radius: ${p => p.theme.borderRadius};\n  margin: -${space(0.5)} -${space(1)};\n  padding: ${space(0.5)} ${space(1)};\n  max-width: calc(100% + ${space(2)});\n`;\n\nconst StyledInput = styled(Input)`\n  border: none !important;\n  background: transparent;\n  height: auto;\n  min-height: 40px;\n  padding: 0;\n  font-size: inherit;\n  &,\n  &:focus,\n  &:active,\n  &:hover {\n    box-shadow: none;\n  }\n`;\n\nconst InputLabel = styled('div')`\n  height: 0;\n  opacity: 0;\n  white-space: pre;\n  padding: 0 ${space(1)};\n`;\n\nconst Wrapper = styled('div')<{isDisabled: boolean; isEditing: boolean}>`\n  display: flex;\n\n  ${p =>\n    p.isDisabled &&\n    `\n      ${InnerLabel} {\n        border-bottom-color: transparent;\n      }\n    `}\n`;\n","import omit from 'lodash/omit';\n\nimport EventView from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\n\nexport interface MetricsCompatibilityData {\n  compatible_projects?: number[];\n}\n\ntype QueryProps = Omit<DiscoverQueryProps, 'eventView' | 'api'> & {\n  children: (props: GenericChildrenProps<MetricsCompatibilityData>) => React.ReactNode;\n  eventView: EventView;\n};\n\nfunction getRequestPayload({\n  eventView,\n  location,\n}: Pick<DiscoverQueryProps, 'eventView' | 'location'>) {\n  return omit(eventView.getEventsAPIPayload(location), [\n    'field',\n    'sort',\n    'per_page',\n    'query',\n  ]);\n}\n\nexport default function MetricsCompatibilityQuery({children, ...props}: QueryProps) {\n  return (\n    <GenericDiscoverQuery<MetricsCompatibilityData, {}>\n      route=\"metrics-compatibility-sums\"\n      getRequestPayload={getRequestPayload}\n      {...props}\n    >\n      {({tableData, ...rest}) => {\n        return children({\n          tableData,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n","import omit from 'lodash/omit';\n\nimport EventView from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\n\nexport interface MetricsCompatibilitySumData {\n  sum: {\n    metrics?: number;\n    metrics_null?: number;\n    metrics_unparam?: number;\n  };\n}\n\ntype QueryProps = Omit<DiscoverQueryProps, 'eventView' | 'api'> & {\n  children: (props: GenericChildrenProps<MetricsCompatibilitySumData>) => React.ReactNode;\n  eventView: EventView;\n};\n\nfunction getRequestPayload({\n  eventView,\n  location,\n}: Pick<DiscoverQueryProps, 'eventView' | 'location'>) {\n  return omit(eventView.getEventsAPIPayload(location), [\n    'field',\n    'sort',\n    'per_page',\n    'query',\n  ]);\n}\n\nexport default function MetricsCompatibilitySumsQuery({children, ...props}: QueryProps) {\n  return (\n    <GenericDiscoverQuery<MetricsCompatibilitySumData, {}>\n      route=\"metrics-compatibility\"\n      getRequestPayload={getRequestPayload}\n      {...props}\n    >\n      {({tableData, ...rest}) => {\n        return children({\n          tableData,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n","import {ComponentProps, Fragment, ReactNode, useEffect} from 'react';\nimport {Location} from 'history';\n\nimport {Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {parsePeriodToHours} from 'sentry/utils/dates';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {canUseMetricsData} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport MetricsCompatibilityQuery, {\n  MetricsCompatibilityData,\n} from 'sentry/utils/performance/metricsEnhanced/metricsCompatibilityQuery';\nimport MetricsCompatibilitySumsQuery, {\n  MetricsCompatibilitySumData,\n} from 'sentry/utils/performance/metricsEnhanced/metricsCompatibilityQuerySums';\n\nimport {createDefinedContext} from './utils';\n\nconst UNPARAM_THRESHOLD = 0.01;\nconst NULL_THRESHOLD = 0.01;\n\nexport interface MetricDataSwitcherOutcome {\n  forceTransactionsOnly: boolean;\n  compatibleProjects?: number[];\n  shouldNotifyUnnamedTransactions?: boolean;\n  shouldWarnIncompatibleSDK?: boolean;\n}\nexport interface MetricsCardinalityContext {\n  isLoading: boolean;\n  outcome?: MetricDataSwitcherOutcome;\n}\n\ntype MergedMetricsData = MetricsCompatibilityData & MetricsCompatibilitySumData;\n\nconst [_Provider, _useContext, _Context] =\n  createDefinedContext<MetricsCardinalityContext>({\n    name: 'MetricsCardinalityContext',\n    strict: false,\n  });\n\n/**\n * This provider determines whether the metrics data is storing performance information correctly before we\n * make dozens of requests on pages such as performance landing and dashboards.\n */\nexport function MetricsCardinalityProvider(props: {\n  children: ReactNode;\n  location: Location;\n  organization: Organization;\n  sendOutcomeAnalytics?: boolean;\n}) {\n  const isUsingMetrics = canUseMetricsData(props.organization);\n\n  if (!isUsingMetrics) {\n    return (\n      <_Provider\n        value={{\n          isLoading: false,\n          outcome: {\n            forceTransactionsOnly: true,\n          },\n        }}\n      >\n        {props.children}\n      </_Provider>\n    );\n  }\n\n  const baseDiscoverProps = {\n    location: props.location,\n    orgSlug: props.organization.slug,\n    cursor: '0:0:0',\n  };\n  const eventView = EventView.fromLocation(props.location);\n  eventView.fields = [{field: 'tpm()'}];\n  const _eventView = adjustEventViewTime(eventView);\n\n  return (\n    <Fragment>\n      <MetricsCompatibilityQuery eventView={_eventView} {...baseDiscoverProps}>\n        {compatabilityResult => (\n          <MetricsCompatibilitySumsQuery eventView={_eventView} {...baseDiscoverProps}>\n            {sumsResult => {\n              const isLoading = compatabilityResult.isLoading || sumsResult.isLoading;\n              const outcome =\n                compatabilityResult.isLoading || sumsResult.isLoading\n                  ? undefined\n                  : getMetricsOutcome(\n                      compatabilityResult.tableData && sumsResult.tableData\n                        ? {\n                            ...compatabilityResult.tableData,\n                            ...sumsResult.tableData,\n                          }\n                        : null,\n                      !!compatabilityResult.error && !!sumsResult.error,\n                      props.organization\n                    );\n\n              return (\n                <Provider\n                  sendOutcomeAnalytics={props.sendOutcomeAnalytics}\n                  organization={props.organization}\n                  value={{\n                    isLoading,\n                    outcome,\n                  }}\n                >\n                  {props.children}\n                </Provider>\n              );\n            }}\n          </MetricsCompatibilitySumsQuery>\n        )}\n      </MetricsCompatibilityQuery>\n    </Fragment>\n  );\n}\n\nfunction Provider(\n  props: ComponentProps<typeof _Provider> & {\n    organization: Organization;\n    sendOutcomeAnalytics?: boolean;\n  }\n) {\n  const fallbackFromNull = props.value.outcome?.shouldWarnIncompatibleSDK ?? false;\n  const fallbackFromUnparam =\n    props.value.outcome?.shouldNotifyUnnamedTransactions ?? false;\n  const isOnMetrics = !props.value.outcome?.forceTransactionsOnly;\n  useEffect(() => {\n    if (!props.value.isLoading && props.sendOutcomeAnalytics) {\n      trackAdvancedAnalyticsEvent('performance_views.mep.metrics_outcome', {\n        organization: props.organization,\n        is_on_metrics: isOnMetrics,\n        fallback_from_null: fallbackFromNull,\n        fallback_from_unparam: fallbackFromUnparam,\n      });\n    }\n  }, [\n    props.organization,\n    props.value.isLoading,\n    isOnMetrics,\n    fallbackFromUnparam,\n    fallbackFromNull,\n    props.sendOutcomeAnalytics,\n  ]);\n  return <_Provider {...props}>{props.children}</_Provider>;\n}\n\nexport const MetricsCardinalityConsumer = _Context.Consumer;\n\nexport const useMetricsCardinalityContext = _useContext;\n\n/**\n * Logic for picking sides of metrics vs. transactions along with the associated warnings.\n */\nfunction getMetricsOutcome(\n  dataCounts: MergedMetricsData | null,\n  hasOtherFallbackCondition: boolean,\n  organization: Organization\n) {\n  const fallbackOutcome: MetricDataSwitcherOutcome = {\n    forceTransactionsOnly: true,\n  };\n  const successOutcome: MetricDataSwitcherOutcome = {\n    forceTransactionsOnly: false,\n  };\n  const isOnFallbackThresolds = organization.features.includes(\n    'performance-mep-bannerless-ui'\n  );\n\n  if (!dataCounts) {\n    return fallbackOutcome;\n  }\n  const compatibleProjects = dataCounts.compatible_projects;\n\n  if (hasOtherFallbackCondition) {\n    return fallbackOutcome;\n  }\n\n  if (!dataCounts) {\n    return fallbackOutcome;\n  }\n\n  if (checkNoDataFallback(dataCounts)) {\n    return fallbackOutcome;\n  }\n\n  if (checkIncompatibleData(dataCounts, isOnFallbackThresolds)) {\n    return {\n      shouldWarnIncompatibleSDK: true,\n      forceTransactionsOnly: true,\n      compatibleProjects,\n    };\n  }\n\n  if (checkIfAllOtherData(dataCounts)) {\n    return {\n      shouldNotifyUnnamedTransactions: true,\n      forceTransactionsOnly: true,\n      compatibleProjects,\n    };\n  }\n\n  if (checkIfPartialOtherData(dataCounts, isOnFallbackThresolds)) {\n    return {\n      shouldNotifyUnnamedTransactions: true,\n      compatibleProjects,\n      forceTransactionsOnly: false,\n    };\n  }\n\n  return successOutcome;\n}\n\n/**\n * Fallback if no metrics found.\n */\nfunction checkNoDataFallback(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return !counts.metricsCount;\n}\n\n/**\n * Fallback and warn if incompatible data found (old specific SDKs).\n */\nfunction checkIncompatibleData(\n  dataCounts: MergedMetricsData,\n  isOnFallbackThresolds: boolean\n) {\n  const counts = normalizeCounts(dataCounts);\n  if (isOnFallbackThresolds) {\n    const ratio = counts.nullCount / counts.metricsCount;\n    return ratio > NULL_THRESHOLD;\n  }\n  return counts.nullCount > 0;\n}\n\n/**\n * Fallback and warn about unnamed transactions (specific SDKs).\n */\nfunction checkIfAllOtherData(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return counts.unparamCount >= counts.metricsCount;\n}\n\n/**\n * Show metrics but warn about unnamed transactions.\n */\nfunction checkIfPartialOtherData(\n  dataCounts: MergedMetricsData,\n  isOnFallbackThresolds: boolean\n) {\n  const counts = normalizeCounts(dataCounts);\n  if (isOnFallbackThresolds) {\n    const ratio = counts.unparamCount / counts.metricsCount;\n    return ratio > UNPARAM_THRESHOLD;\n  }\n  return counts.unparamCount > 0;\n}\n\n/**\n * Temporary function, can be removed after API changes.\n */\nfunction normalizeCounts({sum}: MergedMetricsData) {\n  try {\n    const metricsCount = Number(sum.metrics);\n    const unparamCount = Number(sum.metrics_unparam);\n    const nullCount = Number(sum.metrics_null);\n    return {\n      metricsCount,\n      unparamCount,\n      nullCount,\n    };\n  } catch (_) {\n    return {\n      metricsCount: 0,\n      unparamCount: 0,\n      nullCount: 0,\n    };\n  }\n}\n\n/**\n * Performance optimization to limit the amount of rows scanned before showing the landing page.\n */\nfunction adjustEventViewTime(eventView: EventView) {\n  const _eventView = eventView.clone();\n\n  if (!_eventView.start && !_eventView.end) {\n    if (!_eventView.statsPeriod) {\n      _eventView.statsPeriod = '1h';\n      _eventView.start = undefined;\n      _eventView.end = undefined;\n    } else {\n      const periodHours = parsePeriodToHours(_eventView.statsPeriod);\n      if (periodHours > 1) {\n        _eventView.statsPeriod = '1h';\n        _eventView.start = undefined;\n        _eventView.end = undefined;\n      }\n    }\n  }\n  return _eventView;\n}\n"],"names":["useKeyPress","targetKey","target","keyPressed","setKeyPressed","useState","current","document","body","useEffect","downHandler","_ref","key","upHandler","_ref2","addEventListener","removeEventListener","EditableText","value","onChange","name","errorMessage","successMessage","maxLength","isDisabled","autoSelect","className","ariaLabel","isEditing","setIsEditing","inputValue","setInputValue","isEmpty","trim","innerWrapperRef","useRef","labelRef","inputRef","enter","useKeypress","esc","revertValueAndCloseEditor","useOnClickOutside","displayStatusMessage","onEnter","useCallback","onEsc","status","addSuccessMessage","addErrorMessage","inputElement","defined","focus","_jsx","Wrapper","children","_jsxs","InputWrapper","ref","StyledInput","event","onFocus","select","InputLabel","Label","onClick","undefined","InnerLabel","IconEdit","displayName","_styled","space","p","TextOverflow","theme","gray200","gray100","borderRadius","Input","styles","getRequestPayload","eventView","location","omit","getEventsAPIPayload","MetricsCompatibilityQuery","props","GenericDiscoverQuery","route","_ref3","tableData","rest","MetricsCompatibilitySumsQuery","UNPARAM_THRESHOLD","NULL_THRESHOLD","_Provider","_useContext","_Context","createDefinedContext","strict","MetricsCardinalityProvider","canUseMetricsData","organization","isLoading","outcome","forceTransactionsOnly","baseDiscoverProps","orgSlug","slug","cursor","EventView","fields","field","_eventView","clone","start","end","statsPeriod","parsePeriodToHours","adjustEventViewTime","Fragment","compatabilityResult","sumsResult","dataCounts","hasOtherFallbackCondition","fallbackOutcome","isOnFallbackThresolds","features","includes","compatibleProjects","compatible_projects","normalizeCounts","metricsCount","checkNoDataFallback","counts","nullCount","checkIncompatibleData","shouldWarnIncompatibleSDK","unparamCount","checkIfAllOtherData","shouldNotifyUnnamedTransactions","checkIfPartialOtherData","getMetricsOutcome","error","Provider","sendOutcomeAnalytics","fallbackFromNull","fallbackFromUnparam","isOnMetrics","trackAdvancedAnalyticsEvent","is_on_metrics","fallback_from_null","fallback_from_unparam","Consumer","useMetricsCardinalityContext","sum","Number","metrics","metrics_unparam","metrics_null","_"],"sourceRoot":""}