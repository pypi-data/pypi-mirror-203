{"version":3,"file":"chunks/app_views_settings_project_projectKeys_details_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectKeys/details/keyStats.tsx","webpack:///./app/views/settings/project/projectKeys/details/index.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport {Alert} from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nfunction PermissionAlert({access = ['project:write'], ...props}: Props) {\n  return (\n    <Access access={access}>\n      {({hasAccess}) =>\n        !hasAccess && (\n          <Alert data-test-id=\"project-permission-alert\" type=\"warning\" {...props}>\n            {t(\n              'These settings can only be edited by users with the organization owner, manager, or admin role.'\n            )}\n          </Alert>\n        )\n      }\n    </Access>\n  );\n}\n\nexport default PermissionAlert;\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {Client} from 'sentry/api';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport LoadingError from 'sentry/components/loadingError';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport theme from 'sentry/utils/theme';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\ntype State = {\n  emptyStats: boolean;\n  error: boolean;\n  loading: boolean;\n  series: Series[];\n  since: number;\n  until: number;\n};\n\nconst getInitialState = (): State => {\n  const until = Math.floor(new Date().getTime() / 1000);\n  return {\n    since: until - 3600 * 24 * 30,\n    until,\n    loading: true,\n    error: false,\n    series: [],\n    emptyStats: false,\n  };\n};\n\nclass KeyStats extends Component<Props, State> {\n  state = getInitialState();\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    const {organization} = this.props;\n    const {keyId, projectId} = this.props.params;\n    this.props.api.request(\n      `/projects/${organization.slug}/${projectId}/keys/${keyId}/stats/`,\n      {\n        query: {\n          since: this.state.since,\n          until: this.state.until,\n          resolution: '1d',\n        },\n        success: data => {\n          let emptyStats = true;\n          const dropped: Series['data'] = [];\n          const accepted: Series['data'] = [];\n          data.forEach(p => {\n            if (p.total) {\n              emptyStats = false;\n            }\n            dropped.push({name: p.ts * 1000, value: p.dropped});\n            accepted.push({name: p.ts * 1000, value: p.accepted});\n          });\n          const series = [\n            {\n              seriesName: t('Accepted'),\n              data: accepted,\n            },\n            {\n              seriesName: t('Rate Limited'),\n              data: dropped,\n            },\n          ];\n          this.setState({\n            series,\n            emptyStats,\n            error: false,\n            loading: false,\n          });\n        },\n        error: () => {\n          this.setState({error: true, loading: false});\n        },\n      }\n    );\n  };\n\n  render() {\n    if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Key usage in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {this.state.loading ? (\n            <Placeholder height=\"150px\" />\n          ) : !this.state.emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              series={this.state.series}\n              height={150}\n              colors={[theme.gray200, theme.red300]}\n              stacked\n              labelYAxisExtents\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('Total events captured using these credentials.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default KeyStats;\n","import {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\nimport {KeySettings} from 'sentry/views/settings/project/projectKeys/details/keySettings';\nimport KeyStats from 'sentry/views/settings/project/projectKeys/details/keyStats';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<\n  {\n    keyId: string;\n    projectId: string;\n  },\n  {}\n>;\n\ntype State = {\n  data: ProjectKey;\n} & AsyncView['state'];\n\nexport default class ProjectKeyDetails extends AsyncView<Props, State> {\n  getTitle() {\n    return t('Key Details');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    const {keyId, projectId} = this.props.params;\n    return [['data', `/projects/${organization.slug}/${projectId}/keys/${keyId}/`]];\n  }\n\n  handleRemove = () => {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n    browserHistory.push(\n      normalizeUrl(`/settings/${organization.slug}/projects/${projectId}/keys/`)\n    );\n  };\n\n  renderBody() {\n    const {organization, params} = this.props;\n    const {data} = this.state;\n\n    return (\n      <div data-test-id=\"key-details\">\n        <SettingsPageHeader title={t('Key Details')} />\n        <PermissionAlert />\n\n        <KeyStats api={this.api} organization={organization} params={params} />\n\n        <KeySettings\n          data={data}\n          onRemove={this.handleRemove}\n          organization={organization}\n          params={params}\n        />\n      </div>\n    );\n  }\n}\n"],"names":["AsyncView","AsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","PermissionAlert","_ref","access","props","Access","_ref2","hasAccess","Alert","type","t","KeyStats","Component","constructor","arguments","_defineProperty","getInitialState","until","Math","floor","Date","getTime","since","loading","error","series","emptyStats","organization","keyId","projectId","params","api","request","slug","query","state","resolution","success","data","dropped","accepted","forEach","p","total","push","name","ts","value","seriesName","setState","componentDidMount","fetchData","LoadingError","onRetry","_jsxs","Panel","PanelHeader","PanelBody","withPadding","Placeholder","height","EmptyMessage","description","MiniBarChart","isGroupedByDate","colors","theme","stacked","labelYAxisExtents","ProjectKeyDetails","browserHistory","normalizeUrl","getEndpoints","renderBody","SettingsPageHeader","KeySettings","onRemove","handleRemove"],"sourceRoot":""}