{"version":3,"file":"chunks/app_components_searchBar_tsx-app_utils_discover_genericDiscoverQuery_tsx-app_views_performanc-f9eca7.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/searchBar.tsx","webpack:///./app/utils/discover/charts.tsx","webpack:///./app/utils/discover/genericDiscoverQuery.tsx","webpack:///./app/utils/performance/contexts/performanceEventViewContext.tsx","webpack:///./app/utils/performance/contexts/utils.tsx","webpack:///./app/views/performance/vitalDetail/utils.tsx"],"sourcesContent":["import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {InputGroup, InputProps} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputGroup.LeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputGroup.LeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputGroup.TrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputGroup.TrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(InputGroup.Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n","import {LegendComponentOption} from 'echarts';\n\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {defined, formatBytesBase2} from 'sentry/utils';\nimport {AggregationOutputType} from 'sentry/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'sentry/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover and metrics result values.\n * If the result is metric values, the value can be of type number or null\n */\nexport function tooltipFormatter(\n  value: number | null,\n  outputType: AggregationOutputType = 'number'\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  return tooltipFormatterUsingAggregateOutputType(value, outputType);\n}\n\n/**\n * Formatter for chart tooltips that takes the aggregate output type directly\n */\nexport function tooltipFormatterUsingAggregateOutputType(\n  value: number | null,\n  type: string\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    case 'size':\n      return formatBytesBase2(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  outputType: AggregationOutputType,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  return axisLabelFormatterUsingAggregateOutputType(\n    value,\n    outputType,\n    abbreviation,\n    durationUnit\n  );\n}\n\n/**\n * Formatter for chart axis labels that takes the aggregate output type directly\n */\nexport function axisLabelFormatterUsingAggregateOutputType(\n  value: number,\n  type: string,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value, durationUnit);\n    case 'size':\n      return formatBytesBase2(value, 0);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number, durationUnit?: number): string {\n  durationUnit ??= categorizeDuration(value);\n  if (value === 0) {\n    return '0';\n  }\n  switch (durationUnit) {\n    case WEEK: {\n      const label = (value / WEEK).toFixed(0);\n      return t('%swk', label);\n    }\n    case DAY: {\n      const label = (value / DAY).toFixed(0);\n      return t('%sd', label);\n    }\n    case HOUR: {\n      const label = (value / HOUR).toFixed(0);\n      return t('%shr', label);\n    }\n    case MINUTE: {\n      const label = (value / MINUTE).toFixed(0);\n      return t('%smin', label);\n    }\n    case SECOND: {\n      const label = (value / SECOND).toFixed(0);\n      return t('%ss', label);\n    }\n    default:\n      const label = value.toFixed(0);\n      return t('%sms', label);\n  }\n}\n\n/**\n * Given an array of series and an eCharts legend object,\n * finds the range of y values (min and max) based on which series is selected in the legend\n * Assumes series[0] > series[1] > ...\n * @param series Array of eCharts series\n * @param legend eCharts legend object\n * @returns\n */\nexport function findRangeOfMultiSeries(series: Series[], legend?: LegendComponentOption) {\n  let range: {max: number; min: number} | undefined;\n  if (series[0]?.data) {\n    let minSeries = series[0];\n    let maxSeries;\n    series.forEach(({seriesName, data}, idx) => {\n      if (legend?.selected?.[seriesName] !== false && data.length) {\n        minSeries = series[idx];\n        maxSeries ??= series[idx];\n      }\n    });\n    if (maxSeries?.data) {\n      const max = Math.max(\n        ...maxSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      const min = Math.min(\n        ...minSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      range = {max, min};\n    }\n  }\n  return range;\n}\n\n/**\n * Given a eCharts series and legend, returns the unit to be used on the yAxis for a duration chart\n * @param series eCharts series array\n * @param legend eCharts legend object\n * @returns\n */\nexport function getDurationUnit(\n  series: Series[],\n  legend?: LegendComponentOption\n): number {\n  let durationUnit = 0;\n  const range = findRangeOfMultiSeries(series, legend);\n  if (range) {\n    const avg = (range.max + range.min) / 2;\n    durationUnit = categorizeDuration((range.max - range.min) / 5); // avg of 5 yAxis ticks per chart\n\n    const numOfDigits = (avg / durationUnit).toFixed(0).length;\n    if (numOfDigits > 6) {\n      durationUnit = categorizeDuration(avg);\n    }\n  }\n  return durationUnit;\n}\n\n/**\n * Categorizes the duration by Second, Minute, Hour, etc\n * Ex) categorizeDuration(1200) = MINUTE\n * @param value Duration in ms\n */\nexport function categorizeDuration(value): number {\n  if (value >= WEEK) {\n    return WEEK;\n  }\n  if (value >= DAY) {\n    return DAY;\n  }\n  if (value >= HOUR) {\n    return HOUR;\n  }\n  if (value >= MINUTE) {\n    return MINUTE;\n  }\n  if (value >= SECOND) {\n    return SECOND;\n  }\n  return 1;\n}\n","import {Component, useContext} from 'react';\nimport {useQuery} from '@tanstack/react-query';\nimport {Location} from 'history';\n\nimport {EventQuery} from 'sentry/actionCreators/events';\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport EventView, {\n  ImmutableEventView,\n  isAPIPayloadSimilar,\n  LocationQuery,\n} from 'sentry/utils/discover/eventView';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\nimport {PerformanceEventViewContext} from 'sentry/utils/performance/contexts/performanceEventViewContext';\nimport {OrganizationContext} from 'sentry/views/organizationContext';\n\nimport useApi from '../useApi';\n\nexport class QueryError {\n  message: string;\n  private originalError: any; // For debugging in case parseError picks a value that doesn't make sense.\n  constructor(errorMessage: string, originalError?: any) {\n    this.message = errorMessage;\n    this.originalError = originalError;\n  }\n\n  getOriginalError() {\n    return this.originalError;\n  }\n}\n\nexport type GenericChildrenProps<T> = {\n  /**\n   * Error, if not null.\n   */\n  error: null | QueryError;\n  /**\n   * Loading state of this query.\n   */\n  isLoading: boolean;\n  /**\n   * Pagelinks, if applicable. Can be provided to the Pagination component.\n   */\n  pageLinks: null | string;\n  /**\n   * Data / result.\n   */\n  tableData: T | null;\n};\n\ntype OptionalContextProps = {\n  eventView?: EventView | ImmutableEventView;\n  orgSlug?: string;\n};\n\ntype BaseDiscoverQueryProps = {\n  /**\n   * Used as the default source for cursor values.\n   */\n  location: Location;\n  /**\n   * Explicit cursor value if you aren't using `location.query.cursor` because there are\n   * multiple paginated results on the page.\n   */\n  cursor?: string;\n  /**\n   * Appends a raw string to query to be able to sidestep the tokenizer.\n   * @deprecated\n   */\n  forceAppendRawQueryString?: string;\n  /**\n   * Record limit to get.\n   */\n  limit?: number;\n  /**\n   * Include this whenever pagination won't be used. Limit can still be used when this is\n   * passed, but cursor will be ignored.\n   */\n  noPagination?: boolean;\n  /**\n   * A container for query batching data and functions.\n   */\n  queryBatching?: QueryBatching;\n  /**\n   * Extra query parameters to be added.\n   */\n  queryExtras?: Record<string, string>;\n  /**\n   * Sets referrer parameter in the API Payload. Set of allowed referrers are defined\n   * on the OrganizationDiscoverEndpoint view.\n   */\n  referrer?: string;\n  /**\n   * A callback to set an error so that the error can be rendered in parent components\n   */\n  setError?: (errObject: QueryError | undefined) => void;\n};\n\nexport type DiscoverQueryPropsWithContext = BaseDiscoverQueryProps & OptionalContextProps;\nexport type DiscoverQueryProps = BaseDiscoverQueryProps & {\n  eventView: EventView | ImmutableEventView;\n  orgSlug: string;\n};\n\ntype InnerRequestProps<P> = DiscoverQueryProps & P;\ntype OuterRequestProps<P> = DiscoverQueryPropsWithContext & P;\n\nexport type ReactProps<T> = {\n  children?: (props: GenericChildrenProps<T>) => React.ReactNode;\n};\n\ntype ComponentProps<T, P> = {\n  /**\n   * Route to the endpoint\n   */\n  route: string;\n  /**\n   * A hook to modify data into the correct output after data has been received\n   */\n  afterFetch?: (data: any, props?: Props<T, P>) => T;\n  /**\n   * A hook before fetch that can be used to do things like clearing the api\n   */\n  beforeFetch?: (api: Client) => void;\n  /**\n   * A hook for parent orchestrators to pass down data based on query results, unlike afterFetch it is not meant for specializations as it will not modify data.\n   */\n  didFetch?: (data: T) => void;\n  /**\n   * Allows components to modify the payload before it is set.\n   */\n  getRequestPayload?: (props: Props<T, P>) => any;\n  /**\n   * An external hook to parse errors in case there are differences for a specific api.\n   */\n  parseError?: (error: any) => QueryError | null;\n  /**\n   * An external hook in addition to the event view check to check if data should be refetched\n   */\n  shouldRefetchData?: (prevProps: Props<T, P>, props: Props<T, P>) => boolean;\n};\n\ntype Props<T, P> = InnerRequestProps<P> & ReactProps<T> & ComponentProps<T, P>;\ntype OuterProps<T, P> = OuterRequestProps<P> & ReactProps<T> & ComponentProps<T, P>;\n\ntype State<T> = {\n  api: Client;\n  tableFetchID: symbol | undefined;\n} & GenericChildrenProps<T>;\n\n/**\n * Generic component for discover queries\n */\nclass _GenericDiscoverQuery<T, P> extends Component<Props<T, P>, State<T>> {\n  state: State<T> = {\n    isLoading: true,\n    tableFetchID: undefined,\n    error: null,\n\n    tableData: null,\n    pageLinks: null,\n    api: new Client(),\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props<T, P>) {\n    // Reload data if the payload changes\n    const refetchCondition = this._shouldRefetchData(prevProps);\n\n    // or if we've moved from an invalid view state to a valid one,\n    const eventViewValidation =\n      prevProps.eventView.isValid() === false && this.props.eventView.isValid();\n\n    const shouldRefetchExternal = this.props.shouldRefetchData\n      ? this.props.shouldRefetchData(prevProps, this.props)\n      : false;\n\n    if (refetchCondition || eventViewValidation || shouldRefetchExternal) {\n      this.fetchData();\n    }\n  }\n\n  _shouldRefetchData = (prevProps: Props<T, P>): boolean => {\n    const thisAPIPayload = getPayload(this.props);\n    const otherAPIPayload = getPayload(prevProps);\n\n    return (\n      !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload) ||\n      prevProps.limit !== this.props.limit ||\n      prevProps.route !== this.props.route ||\n      prevProps.cursor !== this.props.cursor\n    );\n  };\n\n  /**\n   * The error type isn't consistent across APIs. We see detail as just string some times, other times as an object.\n   */\n  _parseError = (error: any): QueryError | null => {\n    if (this.props.parseError) {\n      return this.props.parseError(error);\n    }\n\n    if (!error) {\n      return null;\n    }\n\n    const detail = error.responseJSON?.detail;\n    if (typeof detail === 'string') {\n      return new QueryError(detail, error);\n    }\n\n    const message = detail?.message;\n    if (typeof message === 'string') {\n      return new QueryError(message, error);\n    }\n\n    const unknownError = new QueryError(t('An unknown error occurred.'), error);\n    return unknownError;\n  };\n\n  fetchData = async () => {\n    const {\n      queryBatching,\n      beforeFetch,\n      afterFetch,\n      didFetch,\n      eventView,\n      orgSlug,\n      route,\n      setError,\n    } = this.props;\n    const {api} = this.state;\n\n    if (!eventView.isValid()) {\n      return;\n    }\n\n    const url = `/organizations/${orgSlug}/${route}/`;\n    const tableFetchID = Symbol(`tableFetchID`);\n    const apiPayload: Partial<EventQuery & LocationQuery> = getPayload(this.props);\n\n    this.setState({isLoading: true, tableFetchID});\n\n    setError?.(undefined);\n\n    beforeFetch?.(api);\n\n    // clear any inflight requests since they are now stale\n    api.clear();\n\n    try {\n      const [data, , resp] = await doDiscoverQuery<T>(api, url, apiPayload, {\n        queryBatching,\n      });\n\n      if (this.state.tableFetchID !== tableFetchID) {\n        // invariant: a different request was initiated after this request\n        return;\n      }\n\n      const tableData = afterFetch ? afterFetch(data, this.props) : data;\n      didFetch?.(tableData);\n      this.setState(prevState => ({\n        isLoading: false,\n        tableFetchID: undefined,\n        error: null,\n        pageLinks: resp?.getResponseHeader('Link') ?? prevState.pageLinks,\n        tableData,\n      }));\n    } catch (err) {\n      const error = this._parseError(err);\n      this.setState({\n        isLoading: false,\n        tableFetchID: undefined,\n        error,\n        tableData: null,\n      });\n      if (setError) {\n        setError(error ?? undefined);\n      }\n    }\n  };\n\n  render() {\n    const {isLoading, error, tableData, pageLinks} = this.state;\n\n    const childrenProps: GenericChildrenProps<T> = {\n      isLoading,\n      error,\n      tableData,\n      pageLinks,\n    };\n    const children: ReactProps<T>['children'] = this.props.children; // Explicitly setting type due to issues with generics and React's children\n    return children?.(childrenProps);\n  }\n}\n\n// Shim to allow us to use generic discover query or any specialization with or without passing org slug or eventview, which are now contexts.\n// This will help keep tests working and we can remove extra uses of context-provided props and update tests as we go.\nexport function GenericDiscoverQuery<T, P>(props: OuterProps<T, P>) {\n  const organizationSlug = useContext(OrganizationContext)?.slug;\n  const performanceEventView = useContext(PerformanceEventViewContext)?.eventView;\n\n  const orgSlug = props.orgSlug ?? organizationSlug;\n  const eventView = props.eventView ?? performanceEventView;\n\n  if (orgSlug === undefined || eventView === undefined) {\n    throw new Error('GenericDiscoverQuery requires both an orgSlug and eventView');\n  }\n\n  const _props: Props<T, P> = {\n    ...props,\n    orgSlug,\n    eventView,\n  };\n  return <_GenericDiscoverQuery<T, P> {..._props} />;\n}\n\nexport type DiscoverQueryRequestParams = Partial<EventQuery & LocationQuery>;\n\ntype RetryOptions = {\n  statusCodes: number[];\n  tries: number;\n  baseTimeout?: number;\n  timeoutMultiplier?: number;\n};\n\nconst BASE_TIMEOUT = 200;\nconst TIMEOUT_MULTIPLIER = 2;\nconst wait = duration => new Promise(resolve => setTimeout(resolve, duration));\n\nexport async function doDiscoverQuery<T>(\n  api: Client,\n  url: string,\n  params: DiscoverQueryRequestParams,\n  options: {\n    queryBatching?: QueryBatching;\n    retry?: RetryOptions;\n  } = {}\n): Promise<[T, string | undefined, ResponseMeta<T> | undefined]> {\n  const {queryBatching, retry} = options;\n  if (queryBatching?.batchRequest) {\n    return queryBatching.batchRequest(api, url, {\n      query: params,\n      includeAllArgs: true,\n    });\n  }\n\n  const baseTimeout = retry?.baseTimeout ?? BASE_TIMEOUT;\n  const timeoutMultiplier = retry?.timeoutMultiplier ?? TIMEOUT_MULTIPLIER;\n  const statusCodes = retry?.statusCodes ?? [];\n  const maxTries = retry?.tries ?? 1;\n  let tries = 0;\n  let timeout = 0;\n  let error;\n\n  while (tries < maxTries && (!error || statusCodes.includes(error.status))) {\n    if (timeout > 0) {\n      await wait(timeout);\n    }\n    try {\n      tries++;\n      return await api.requestPromise(url, {\n        method: 'GET',\n        includeAllArgs: true,\n        query: {\n          // marking params as any so as to not cause typescript errors\n          ...(params as any),\n        },\n      });\n    } catch (err) {\n      error = err;\n      timeout = baseTimeout * timeoutMultiplier ** (tries - 1);\n    }\n  }\n  throw error;\n}\n\nfunction getPayload<T, P>(props: Props<T, P>) {\n  const {\n    cursor,\n    limit,\n    noPagination,\n    referrer,\n    getRequestPayload,\n    eventView,\n    location,\n    forceAppendRawQueryString,\n  } = props;\n  const payload = getRequestPayload\n    ? getRequestPayload(props)\n    : eventView.getEventsAPIPayload(location, forceAppendRawQueryString);\n\n  if (cursor) {\n    payload.cursor = cursor;\n  }\n  if (limit) {\n    payload.per_page = limit;\n  }\n  if (noPagination) {\n    payload.noPagination = noPagination;\n  }\n  if (referrer) {\n    payload.referrer = referrer;\n  }\n\n  Object.assign(payload, props.queryExtras ?? {});\n\n  return payload;\n}\n\nexport function useGenericDiscoverQuery<T, P>(props: Props<T, P>) {\n  const api = useApi();\n  const {orgSlug, route} = props;\n  const url = `/organizations/${orgSlug}/${route}/`;\n  const apiPayload = getPayload<T, P>(props);\n\n  return useQuery<T, QueryError>([route, apiPayload], async () => {\n    const [resp] = await doDiscoverQuery<T>(api, url, apiPayload, {\n      queryBatching: props.queryBatching,\n    });\n    return resp;\n  });\n}\n\nexport default GenericDiscoverQuery;\n","import EventView, {ImmutableEventView} from 'sentry/utils/discover/eventView';\n\nimport {createDefinedContext} from './utils';\n\ntype usePerformanceEventViewContext = {\n  eventView: EventView;\n};\n\nconst [\n  PerformanceEventViewProvider,\n  _usePerformanceEventView,\n  PerformanceEventViewContext,\n] = createDefinedContext<usePerformanceEventViewContext>({\n  name: 'PerformanceEventViewContext',\n});\n\nexport {PerformanceEventViewProvider, PerformanceEventViewContext};\n\n// Provides a readonly event view. Also omits anything that isn't currently read-only, although in the future we should switch the code in EventView instead.\n// If you need mutability, use the mutable version.\nexport function usePerformanceEventView(): ImmutableEventView {\n  return _usePerformanceEventView().eventView;\n}\n\nexport function useMutablePerformanceEventView() {\n  return usePerformanceEventView().clone();\n}\n","import {createContext, useContext} from 'react';\n\ntype CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>];\n/*\n * Creates provider, context and useContext hook, guarding against calling useContext without a provider.\n * [0]: https://github.com/chakra-ui/chakra-ui/blob/c0f9c287df0397e2aa9bd90eb3d5c2f2c08aa0b1/packages/utils/src/react-helpers.ts#L27\n *\n * Renamed to createDefinedContext to not conflate with React context.\n */\nexport function createDefinedContext<ContextType>(options: {\n  name: string;\n  errorMessage?: string;\n  strict?: boolean;\n}) {\n  const {\n    strict = true,\n    errorMessage = `useContext for \"${options.name}\" must be inside a Provider with a value`,\n    name,\n  } = options;\n\n  const Context = createContext<ContextType | undefined>(undefined);\n\n  Context.displayName = name;\n\n  function useDefinedContext() {\n    const context = useContext(Context);\n    if (!context && strict) {\n      throw new Error(errorMessage);\n    }\n    return context;\n  }\n\n  return [\n    Context.Provider,\n    useDefinedContext,\n    Context,\n  ] as CreateContextReturn<ContextType>;\n}\n","import {Theme} from '@emotion/react';\nimport {Location, Query} from 'history';\n\nimport MarkLine from 'sentry/components/charts/components/markLine';\nimport {LineChartProps} from 'sentry/components/charts/lineChart';\nimport {getSeriesSelection} from 'sentry/components/charts/utils';\nimport {IconHappy, IconMeh, IconSad} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\nimport {aggregateOutputType, getAggregateAlias} from 'sentry/utils/discover/fields';\nimport {WebVital} from 'sentry/utils/fields';\nimport {Browser} from 'sentry/utils/performance/vitals/constants';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {Color} from 'sentry/utils/theme';\nimport {AlertType} from 'sentry/views/alerts/wizard/options';\n\nexport function generateVitalDetailRoute({orgSlug}: {orgSlug: string}): string {\n  return `/organizations/${orgSlug}/performance/vitaldetail/`;\n}\n\nexport const webVitalPoor = {\n  [WebVital.FP]: 3000,\n  [WebVital.FCP]: 3000,\n  [WebVital.LCP]: 4000,\n  [WebVital.FID]: 300,\n  [WebVital.CLS]: 0.25,\n};\n\nexport const webVitalMeh = {\n  [WebVital.FP]: 1000,\n  [WebVital.FCP]: 1000,\n  [WebVital.LCP]: 2500,\n  [WebVital.FID]: 100,\n  [WebVital.CLS]: 0.1,\n};\n\nexport enum VitalState {\n  POOR = 'Poor',\n  MEH = 'Meh',\n  GOOD = 'Good',\n}\n\nexport const vitalStateColors: Record<VitalState, Color> = {\n  [VitalState.POOR]: 'red300',\n  [VitalState.MEH]: 'yellow300',\n  [VitalState.GOOD]: 'green300',\n};\n\nexport const vitalStateIcons: Record<VitalState, React.ReactNode> = {\n  [VitalState.POOR]: <IconSad color={vitalStateColors[VitalState.POOR]} />,\n  [VitalState.MEH]: <IconMeh color={vitalStateColors[VitalState.MEH]} />,\n  [VitalState.GOOD]: <IconHappy color={vitalStateColors[VitalState.GOOD]} />,\n};\n\nexport function vitalDetailRouteWithQuery({\n  orgSlug,\n  vitalName,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  query: Query;\n  vitalName: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateVitalDetailRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      vitalName,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nexport function vitalNameFromLocation(location: Location): WebVital {\n  const _vitalName = decodeScalar(location.query.vitalName);\n\n  const vitalName = Object.values(WebVital).find(v => v === _vitalName);\n\n  if (vitalName) {\n    return vitalName;\n  }\n  return WebVital.LCP;\n}\n\nexport function getVitalChartTitle(webVital: WebVital): string {\n  if (webVital === WebVital.CLS) {\n    return t('CLS p75');\n  }\n  return t('Duration p75');\n}\n\nexport function getVitalDetailTablePoorStatusFunction(vitalName: WebVital): string {\n  const vitalThreshold = webVitalPoor[vitalName];\n  const statusFunction = `compare_numeric_aggregate(${getAggregateAlias(\n    `p75(${vitalName})`\n  )},greater,${vitalThreshold})`;\n  return statusFunction;\n}\n\nexport function getVitalDetailTableMehStatusFunction(vitalName: WebVital): string {\n  const vitalThreshold = webVitalMeh[vitalName];\n  const statusFunction = `compare_numeric_aggregate(${getAggregateAlias(\n    `p75(${vitalName})`\n  )},greater,${vitalThreshold})`;\n  return statusFunction;\n}\n\nexport const vitalMap: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]: t('First Contentful Paint'),\n  [WebVital.CLS]: t('Cumulative Layout Shift'),\n  [WebVital.FID]: t('First Input Delay'),\n  [WebVital.LCP]: t('Largest Contentful Paint'),\n};\n\nexport const vitalChartTitleMap = vitalMap;\n\nexport const vitalDescription: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]: t(\n    'First Contentful Paint (FCP) measures the amount of time the first content takes to render in the viewport. Like FP, this could also show up in any form from the document object model (DOM), such as images, SVGs, or text blocks. At the moment, there is support for FCP in the following browsers:'\n  ),\n  [WebVital.CLS]: t(\n    'Cumulative Layout Shift (CLS) is the sum of individual layout shift scores for every unexpected element shift during the rendering process. Imagine navigating to an article and trying to click a link before the page finishes loading. Before your cursor even gets there, the link may have shifted down due to an image rendering. Rather than using duration for this Web Vital, the CLS score represents the degree of disruptive and visually unstable shifts. At the moment, there is support for CLS in the following browsers:'\n  ),\n  [WebVital.FID]: t(\n    'First Input Delay (FID) measures the response time when the user tries to interact with the viewport. Actions maybe include clicking a button, link or other custom Javascript controller. It is key in helping the user determine if a page is usable or not. At the moment, there is support for FID in the following browsers:'\n  ),\n  [WebVital.LCP]: t(\n    'Largest Contentful Paint (LCP) measures the render time for the largest content to appear in the viewport. This may be in any form from the document object model (DOM), such as images, SVGs, or text blocks. It’s the largest pixel area in the viewport, thus most visually defining. LCP helps developers understand how long it takes to see the main content on the page. At the moment, there is support for LCP in the following browsers:'\n  ),\n};\n\nexport const vitalAbbreviations: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]: 'FCP',\n  [WebVital.CLS]: 'CLS',\n  [WebVital.FID]: 'FID',\n  [WebVital.LCP]: 'LCP',\n};\n\nexport const vitalAlertTypes: Partial<Record<WebVital, AlertType>> = {\n  [WebVital.FCP]: 'custom',\n  [WebVital.CLS]: 'cls',\n  [WebVital.FID]: 'fid',\n  [WebVital.LCP]: 'lcp',\n};\n\nexport function getMaxOfSeries(series: Series[]) {\n  let max = -Infinity;\n  for (const {data} of series) {\n    for (const point of data) {\n      max = Math.max(max, point.value);\n    }\n  }\n  return max;\n}\n\nexport const vitalSupportedBrowsers: Partial<Record<WebVital, Browser[]>> = {\n  [WebVital.LCP]: [Browser.CHROME, Browser.EDGE, Browser.OPERA],\n  [WebVital.FID]: [\n    Browser.CHROME,\n    Browser.EDGE,\n    Browser.OPERA,\n    Browser.FIREFOX,\n    Browser.SAFARI,\n    Browser.IE,\n  ],\n  [WebVital.CLS]: [Browser.CHROME, Browser.EDGE, Browser.OPERA],\n  [WebVital.FP]: [Browser.CHROME, Browser.EDGE, Browser.OPERA],\n  [WebVital.FCP]: [\n    Browser.CHROME,\n    Browser.EDGE,\n    Browser.OPERA,\n    Browser.FIREFOX,\n    Browser.SAFARI,\n  ],\n  [WebVital.TTFB]: [\n    Browser.CHROME,\n    Browser.EDGE,\n    Browser.OPERA,\n    Browser.FIREFOX,\n    Browser.SAFARI,\n    Browser.IE,\n  ],\n};\n\nexport function getVitalChartDefinitions({\n  theme,\n  location,\n  vital,\n  yAxis,\n}: {\n  location: Location;\n  theme: Theme;\n  vital: string;\n  yAxis: string;\n}) {\n  const utc = decodeScalar(location.query.utc) !== 'false';\n\n  const vitalPoor = webVitalPoor[vital];\n  const vitalMeh = webVitalMeh[vital];\n\n  const legend = {\n    right: 10,\n    top: 0,\n    selected: getSeriesSelection(location),\n  };\n\n  const chartOptions: Omit<LineChartProps, 'series'> = {\n    grid: {\n      left: '5px',\n      right: '10px',\n      top: '35px',\n      bottom: '0px',\n    },\n    seriesOptions: {\n      showSymbol: false,\n    },\n    tooltip: {\n      trigger: 'axis',\n      valueFormatter: (value: number, seriesName?: string) =>\n        tooltipFormatter(\n          value,\n          aggregateOutputType(vital === WebVital.CLS ? seriesName : yAxis)\n        ),\n    },\n    yAxis: {\n      min: 0,\n      max: vitalPoor,\n      axisLabel: {\n        color: theme.chartLabel,\n        showMaxLabel: false,\n        // coerces the axis to be time based\n        formatter: (value: number) =>\n          axisLabelFormatter(value, aggregateOutputType(yAxis)),\n      },\n    },\n  };\n\n  const markLines = [\n    {\n      seriesName: 'Thresholds',\n      type: 'line' as const,\n      data: [],\n      markLine: MarkLine({\n        silent: true,\n        lineStyle: {\n          color: theme.red300,\n          type: 'dashed',\n          width: 1.5,\n        },\n        label: {\n          show: true,\n          position: 'insideEndTop',\n          formatter: t('Poor'),\n        },\n        data: [\n          {\n            yAxis: vitalPoor,\n          } as any, // TODO(ts): date on this type is likely incomplete (needs @types/echarts@4.6.2)\n        ],\n      }),\n    },\n    {\n      seriesName: 'Thresholds',\n      type: 'line' as const,\n      data: [],\n      markLine: MarkLine({\n        silent: true,\n        lineStyle: {\n          color: theme.yellow300,\n          type: 'dashed',\n          width: 1.5,\n        },\n        label: {\n          show: true,\n          position: 'insideEndTop',\n          formatter: t('Meh'),\n        },\n        data: [\n          {\n            yAxis: vitalMeh,\n          } as any, // TODO(ts): date on this type is likely incomplete (needs @types/echarts@4.6.2)\n        ],\n      }),\n    },\n  ];\n\n  return {\n    vitalPoor,\n    vitalMeh,\n    legend,\n    chartOptions,\n    markLines,\n    utc,\n  };\n}\n"],"names":["SearchBar","_ref","query","queryProp","defaultQuery","onChange","onSearch","width","size","className","trailing","inputProps","inputRef","useRef","setQuery","useState","useEffect","onQueryChange","useCallback","e","value","target","onSubmit","preventDefault","current","blur","clearSearch","_jsx","FormWrap","children","_jsxs","InputGroup","disablePointerEvents","IconSearch","color","StyledInput","ref","type","name","autoComplete","SearchBarTrailingButton","borderless","onClick","icon","IconClose","t","displayName","_styled","styles","p","Button","theme","subText","space","tooltipFormatter","outputType","arguments","length","undefined","defined","toLocaleString","formatPercentage","getDuration","formatBytesBase2","toString","tooltipFormatterUsingAggregateOutputType","axisLabelFormatter","axisLabelFormatterUsingAggregateOutputType","abbreviation","durationUnit","formatAbbreviatedNumber","categorizeDuration","WEEK","label","toFixed","DAY","HOUR","MINUTE","SECOND","axisDuration","getDurationUnit","series","legend","range","data","maxSeries","minSeries","forEach","idx","seriesName","selected","max","Math","map","_ref2","filter","min","_ref3","findRangeOfMultiSeries","avg","QueryError","constructor","errorMessage","originalError","_defineProperty","this","message","getOriginalError","_GenericDiscoverQuery","Component","isLoading","tableFetchID","error","tableData","pageLinks","api","Client","prevProps","thisAPIPayload","getPayload","props","otherAPIPayload","isAPIPayloadSimilar","limit","route","cursor","parseError","detail","responseJSON","async","queryBatching","beforeFetch","afterFetch","didFetch","eventView","orgSlug","setError","state","isValid","url","Symbol","apiPayload","setState","clear","resp","doDiscoverQuery","prevState","getResponseHeader","err","_parseError","componentDidMount","fetchData","componentDidUpdate","refetchCondition","_shouldRefetchData","eventViewValidation","shouldRefetchExternal","shouldRefetchData","render","childrenProps","GenericDiscoverQuery","organizationSlug","useContext","OrganizationContext","slug","performanceEventView","PerformanceEventViewContext","Error","_props","BASE_TIMEOUT","TIMEOUT_MULTIPLIER","wait","duration","Promise","resolve","setTimeout","params","options","retry","batchRequest","includeAllArgs","baseTimeout","timeoutMultiplier","statusCodes","maxTries","tries","timeout","includes","status","requestPromise","method","noPagination","referrer","getRequestPayload","location","forceAppendRawQueryString","payload","getEventsAPIPayload","per_page","Object","assign","queryExtras","useGenericDiscoverQuery","useApi","useQuery","PerformanceEventViewProvider","_usePerformanceEventView","createDefinedContext","strict","Context","createContext","Provider","context","webVitalPoor","WebVital","webVitalMeh","VitalState","vitalStateColors","POOR","MEH","GOOD","vitalStateIcons","IconSad","IconMeh","IconHappy","vitalDetailRouteWithQuery","vitalName","projectID","pathname","generateVitalDetailRoute","project","environment","statsPeriod","start","end","vitalNameFromLocation","_vitalName","decodeScalar","values","find","v","getVitalChartTitle","webVital","getVitalDetailTablePoorStatusFunction","vitalThreshold","getAggregateAlias","getVitalDetailTableMehStatusFunction","vitalMap","vitalDescription","vitalAbbreviations","vitalAlertTypes","getMaxOfSeries","point","vitalSupportedBrowsers","Browser","getVitalChartDefinitions","vital","yAxis","utc","vitalPoor","vitalMeh","right","top","getSeriesSelection","chartOptions","grid","left","bottom","seriesOptions","showSymbol","tooltip","trigger","valueFormatter","aggregateOutputType","axisLabel","chartLabel","showMaxLabel","formatter","markLines","markLine","MarkLine","silent","lineStyle","red300","show","position","yellow300"],"sourceRoot":""}