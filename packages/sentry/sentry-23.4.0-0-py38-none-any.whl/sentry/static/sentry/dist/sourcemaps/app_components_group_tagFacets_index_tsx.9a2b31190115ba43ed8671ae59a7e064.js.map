{"version":3,"file":"chunks/app_components_group_tagFacets_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/group/tagFacets/index.tsx","webpack:///./app/components/group/tagFacets/tagFacetsDistributionMeter.tsx"],"sourcesContent":["import {Fragment, ReactNode, useEffect, useState} from 'react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\nimport keyBy from 'lodash/keyBy';\n\nimport Placeholder from 'sentry/components/placeholder';\nimport * as SidebarSection from 'sentry/components/sidebarSection';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Environment, Event, Organization, Project, TagWithTopValues} from 'sentry/types';\nimport {formatVersion} from 'sentry/utils/formatters';\nimport {appendTagCondition} from 'sentry/utils/queryString';\nimport useApi from 'sentry/utils/useApi';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport TagFacetsDistributionMeter from './tagFacetsDistributionMeter';\n\nexport const MOBILE_TAGS = [\n  'device',\n  'device.class',\n  'os',\n  'release',\n  'environment',\n  'transaction',\n];\n\nexport const FRONTEND_TAGS = ['browser', 'transaction', 'release', 'url', 'environment'];\n\nexport const BACKEND_TAGS = [\n  'transaction',\n  'url',\n  'user',\n  'release',\n  'organization.slug',\n];\n\nexport const DEFAULT_TAGS = ['transaction', 'environment', 'release'];\n\nexport function TAGS_FORMATTER(tagsData: Record<string, TagWithTopValues>) {\n  // For \"release\" tag keys, format the release tag value to be more readable (ie removing version prefix)\n  const transformedTagsData = {};\n  Object.keys(tagsData).forEach(tagKey => {\n    if (tagKey === 'release') {\n      transformedTagsData[tagKey] = {\n        ...tagsData[tagKey],\n        topValues: tagsData[tagKey].topValues.map(topValue => {\n          return {\n            ...topValue,\n            name: formatVersion(topValue.name),\n          };\n        }),\n      };\n    } else if (tagKey === 'device') {\n      transformedTagsData[tagKey] = {\n        ...tagsData[tagKey],\n        topValues: tagsData[tagKey].topValues.map(topValue => {\n          return {\n            ...topValue,\n            name: topValue.readable ?? topValue.name,\n          };\n        }),\n      };\n    } else {\n      transformedTagsData[tagKey] = tagsData[tagKey];\n    }\n  });\n  return transformedTagsData;\n}\n\ntype Props = {\n  environments: Environment[];\n  groupId: string;\n  project: Project;\n  tagKeys: string[];\n  event?: Event;\n  tagFormatter?: (\n    tagsData: Record<string, TagWithTopValues>\n  ) => Record<string, TagWithTopValues>;\n  title?: ReactNode;\n};\n\ntype State = {\n  loading: boolean;\n  tagsData: Record<string, TagWithTopValues>;\n};\n\nconst LIMIT = 4;\n\nexport default function TagFacets({\n  tagKeys,\n  environments,\n  groupId,\n  title,\n  tagFormatter,\n  project,\n}: Props) {\n  const [state, setState] = useState<State>({\n    tagsData: {},\n    loading: true,\n  });\n  const organization = useOrganization();\n  const api = useApi();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // Fetch the top values for the current group's top tags.\n      const data = await api.requestPromise(`/issues/${groupId}/tags/`, {\n        query: {\n          environment: environments.map(env => env.name),\n          readable: true,\n          limit: LIMIT,\n        },\n      });\n      const tagsData = keyBy(data, 'key');\n      setState({\n        ...state,\n        tagsData,\n        loading: false,\n      });\n    };\n    setState({...state, loading: true});\n    fetchData().catch(() => {\n      setState({...state, tagsData: {}, loading: false});\n    });\n    // Don't want to requery everytime state changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [api, JSON.stringify(environments), groupId, tagKeys]);\n\n  const tagsData = tagFormatter?.(state.tagsData) ?? state.tagsData;\n  if (!organization.features.includes('device-classification')) {\n    delete tagsData['device.class'];\n  }\n\n  const topTagKeys = tagKeys.filter(tagKey => Object.keys(tagsData).includes(tagKey));\n  const remainingTagKeys = Object.keys(tagsData)\n    .filter(tagKey => !tagKeys.includes(tagKey))\n    .sort();\n\n  return (\n    <SidebarSection.Wrap>\n      {state.loading || !tagsData ? (\n        <TagPlaceholders>\n          <Placeholder height=\"40px\" />\n          <Placeholder height=\"40px\" />\n          <Placeholder height=\"40px\" />\n          <Placeholder height=\"40px\" />\n        </TagPlaceholders>\n      ) : (\n        <Fragment>\n          <SidebarSection.Title>{title || t('All Tags')}</SidebarSection.Title>\n          {Object.keys(tagsData).length === 0 ? (\n            <NoTagsFoundContainer data-test-id=\"no-tags\">\n              {environments.length\n                ? t('No tags found in the selected environments')\n                : t('No tags found')}\n            </NoTagsFoundContainer>\n          ) : (\n            <Content>\n              <span data-test-id=\"top-distribution-wrapper\">\n                <TagFacetsDistributionMeterWrapper\n                  groupId={groupId}\n                  organization={organization}\n                  project={project}\n                  tagKeys={topTagKeys}\n                  tagsData={tagsData}\n                  expandFirstTag\n                />\n              </span>\n              <TagFacetsDistributionMeterWrapper\n                groupId={groupId}\n                organization={organization}\n                project={project}\n                tagKeys={remainingTagKeys}\n                tagsData={tagsData}\n              />\n            </Content>\n          )}\n        </Fragment>\n      )}\n    </SidebarSection.Wrap>\n  );\n}\n\nfunction TagFacetsDistributionMeterWrapper({\n  groupId,\n  organization,\n  project,\n  tagKeys,\n  tagsData,\n  expandFirstTag,\n}: {\n  groupId: string;\n  organization: Organization;\n  project: Project;\n  tagKeys: string[];\n  tagsData: Record<string, TagWithTopValues>;\n  expandFirstTag?: boolean;\n}) {\n  const location = useLocation();\n  const query = {...location.query};\n  return (\n    <TagFacetsList>\n      {tagKeys.map((tagKey, index) => {\n        const tagWithTopValues = tagsData[tagKey];\n        const topValues = tagWithTopValues ? tagWithTopValues.topValues : [];\n        const topValuesTotal = tagWithTopValues ? tagWithTopValues.totalValues : 0;\n\n        const otherTagValuesUrl = `/organizations/${organization.slug}/issues/${groupId}/tags/${tagKey}/?referrer=tag-distribution-meter`;\n        const eventsPath = `/organizations/${organization.slug}/issues/${groupId}/events/`;\n\n        const segments = topValues\n          ? topValues.map(value => {\n              // Create a link to the events page with a tag condition on the selected value\n              const url: LocationDescriptor = {\n                ...location,\n                query: {\n                  ...query,\n                  query: appendTagCondition(null, tagKey, value.value),\n                },\n                pathname: eventsPath,\n              };\n\n              return {\n                ...value,\n                url,\n              };\n            })\n          : [];\n\n        return (\n          <li key={tagKey} aria-label={tagKey}>\n            <TagFacetsDistributionMeter\n              title={tagKey}\n              totalValues={topValuesTotal}\n              segments={segments}\n              onTagClick={() => undefined}\n              project={project}\n              expandByDefault={expandFirstTag && index === 0}\n              otherUrl={otherTagValuesUrl}\n            />\n          </li>\n        );\n      })}\n    </TagFacetsList>\n  );\n}\n\nconst TagPlaceholders = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-auto-flow: row;\n`;\n\nconst Content = styled('div')`\n  margin-top: ${space(2)};\n`;\n\nconst NoTagsFoundContainer = styled('p')`\n  margin-top: ${space(0.5)};\n`;\n\nexport const TagFacetsList = styled('ol')`\n  list-style: none;\n  padding: 0;\n  margin: 0 0 ${space(2)};\n`;\n","import {useState} from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\nimport {motion} from 'framer-motion';\nimport {LocationDescriptor} from 'history';\nimport debounce from 'lodash/debounce';\n\nimport {TagSegment} from 'sentry/actionCreators/events';\nimport {Button} from 'sentry/components/button';\nimport Link from 'sentry/components/links/link';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconChevron} from 'sentry/icons/iconChevron';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {percent} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {isMobilePlatform} from 'sentry/utils/platform';\nimport {appendExcludeTagValuesCondition} from 'sentry/utils/queryString';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nconst COLORS = ['#402A65', '#694D99', '#9A81C4', '#BBA6DF', '#EAE2F8'];\nconst MAX_SEGMENTS = 4;\nconst TOOLTIP_DELAY = 800;\n\ntype Props = {\n  segments: TagSegment[];\n  title: string;\n  totalValues: number;\n  colors?: string[];\n  expandByDefault?: boolean;\n  onTagClick?: (title: string, value: TagSegment) => void;\n  otherUrl?: LocationDescriptor;\n  project?: Project;\n};\n\nconst _debounceTrackHover = debounce(\n  ({\n    tag,\n    value,\n    platform,\n    is_mobile,\n    organization,\n  }: {\n    is_mobile: boolean;\n    organization: Organization;\n    tag: string;\n    value: string;\n    platform?: string;\n  }) => {\n    trackAdvancedAnalyticsEvent('issue_group_details.tags.bar.hovered', {\n      tag,\n      value,\n      platform,\n      is_mobile,\n      organization,\n    });\n  },\n  300\n);\n\nfunction TagFacetsDistributionMeter({\n  colors = COLORS,\n  segments,\n  title,\n  totalValues,\n  onTagClick,\n  project,\n  expandByDefault,\n  otherUrl,\n}: Props) {\n  const location = useLocation();\n  const organization = useOrganization();\n  const [expanded, setExpanded] = useState<boolean>(!!expandByDefault);\n  const [hoveredValue, setHoveredValue] = useState<TagSegment | null>(null);\n  const topSegments = segments.slice(0, MAX_SEGMENTS);\n\n  function renderTitle() {\n    if (!Array.isArray(segments) || segments.length <= 0) {\n      return (\n        <Title>\n          <TitleType>{title}</TitleType>\n        </Title>\n      );\n    }\n\n    return (\n      <Title>\n        <TitleType>{title}</TitleType>\n        <Tooltip\n          skipWrapper\n          delay={TOOLTIP_DELAY}\n          title={topSegments[0].name || t('n/a')}\n        >\n          <TitleDescription>{topSegments[0].name || t('n/a')}</TitleDescription>\n        </Tooltip>\n        <ExpandToggleButton\n          borderless\n          size=\"zero\"\n          icon={<IconChevron direction={expanded ? 'up' : 'down'} size=\"xs\" />}\n          aria-label={t(\n            '%s %s tag distribution',\n            expanded ? 'Collapse' : 'Expand',\n            title\n          )}\n        />\n      </Title>\n    );\n  }\n\n  function renderSegments() {\n    if (totalValues === 0) {\n      return (\n        <SegmentBar>\n          <p>{t('No recent data.')}</p>\n        </SegmentBar>\n      );\n    }\n\n    return (\n      <SegmentBar>\n        {topSegments.map((value, index) => {\n          const pct = percent(value.count, totalValues);\n          const pctLabel = Math.floor(pct);\n          const segmentProps = {\n            index,\n            onClick: () => {\n              trackAdvancedAnalyticsEvent('issue_group_details.tags.bar.clicked', {\n                tag: title,\n                value: value.value,\n                platform: project?.platform,\n                is_mobile: isMobilePlatform(project?.platform),\n                organization,\n              });\n              return onTagClick?.(title, value);\n            },\n          };\n          return (\n            <div\n              key={value.isOther ? 'other' : `segment-${value.value}`}\n              style={{width: pct + '%'}}\n              onMouseOver={() => {\n                setHoveredValue(value);\n                _debounceTrackHover({\n                  tag: title,\n                  value: value.value,\n                  platform: project?.platform,\n                  is_mobile: isMobilePlatform(project?.platform),\n                  organization,\n                });\n              }}\n              onMouseLeave={() => setHoveredValue(null)}\n            >\n              {value.isOther ? (\n                <OtherSegment\n                  aria-label={t('Other segment')}\n                  color={colors[colors.length - 1]}\n                />\n              ) : (\n                <Segment\n                  aria-label={`${value.value} ${t('segment')}`}\n                  color={colors[index]}\n                  {...segmentProps}\n                >\n                  {/* if the first segment is 6% or less, the label won't fit cleanly into the segment, so don't show the label */}\n                  {index === 0 && pctLabel > 6 ? `${pctLabel}%` : null}\n                </Segment>\n              )}\n            </div>\n          );\n        })}\n      </SegmentBar>\n    );\n  }\n\n  function renderLegend() {\n    return (\n      <LegendAnimateContainer\n        expanded={expanded}\n        animate={expanded ? {height: '100%', opacity: 1} : {height: '0', opacity: 0}}\n      >\n        <LegendContainer>\n          {topSegments.map((segment, index) => {\n            const pctLabel = Math.floor(percent(segment.count, totalValues));\n            const unfocus = !!hoveredValue && hoveredValue.value !== segment.value;\n            const focus = hoveredValue?.value === segment.value;\n            const linkLabel = segment.isOther\n              ? t(\n                  'Other %s tag values, %s of all events. View other tags.',\n                  title,\n                  `${pctLabel}%`\n                )\n              : t(\n                  '%s, %s, %s of all events. View events with this tag value.',\n                  title,\n                  segment.value,\n                  `${pctLabel}%`\n                );\n            return (\n              <li key={`segment-${segment.name}-${index}`}>\n                <Link to={segment.url} aria-label={linkLabel}>\n                  <LegendRow\n                    onMouseOver={() => setHoveredValue(segment)}\n                    onMouseLeave={() => setHoveredValue(null)}\n                  >\n                    <LegendDot\n                      color={colors[segment.isOther ? colors.length - 1 : index]}\n                      focus={focus}\n                    />\n                    <Tooltip skipWrapper delay={TOOLTIP_DELAY} title={segment.name}>\n                      <LegendText unfocus={unfocus}>\n                        {segment.name ?? (\n                          <NotApplicableLabel>{t('n/a')}</NotApplicableLabel>\n                        )}\n                      </LegendText>\n                    </Tooltip>\n                    {<LegendPercent>{`${pctLabel}%`}</LegendPercent>}\n                  </LegendRow>\n                </Link>\n              </li>\n            );\n          })}\n        </LegendContainer>\n      </LegendAnimateContainer>\n    );\n  }\n\n  const totalVisible = topSegments.reduce((sum, value) => sum + value.count, 0);\n  const hasOther = totalVisible < totalValues;\n\n  const query = appendExcludeTagValuesCondition(\n    location.query.query,\n    title,\n    topSegments.map(({value}) => value)\n  );\n  const excludeTopSegmentsUrl: LocationDescriptor = {\n    ...location,\n    query: {...location.query, query},\n  };\n\n  if (hasOther) {\n    topSegments.push({\n      isOther: true,\n      name: t('Other'),\n      value: 'other',\n      count: totalValues - totalVisible,\n      url: otherUrl ?? excludeTopSegmentsUrl ?? '',\n    });\n  }\n\n  return (\n    <TagSummary>\n      <details open aria-expanded={expanded} onClick={e => e.preventDefault()}>\n        <StyledSummary>\n          <TagHeader clickable onClick={() => setExpanded(!expanded)}>\n            {renderTitle()}\n            {renderSegments()}\n          </TagHeader>\n        </StyledSummary>\n        {renderLegend()}\n      </details>\n    </TagSummary>\n  );\n}\n\nexport default TagFacetsDistributionMeter;\n\nconst TagSummary = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nconst TagHeader = styled('span')<{clickable?: boolean}>`\n  ${p => (p.clickable ? 'cursor: pointer' : null)};\n`;\n\nconst SegmentBar = styled('div')`\n  display: flex;\n  overflow: hidden;\n`;\n\nconst Title = styled('div')`\n  display: flex;\n  font-size: ${p => p.theme.fontSizeMedium};\n  justify-content: space-between;\n  margin-bottom: ${space(0.25)};\n  line-height: 1.1;\n`;\n\nconst TitleType = styled('div')`\n  flex: none;\n  color: ${p => p.theme.textColor};\n  font-weight: bold;\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(1)};\n  align-self: center;\n`;\n\nconst TitleDescription = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n  display: flex;\n  color: ${p => p.theme.gray300};\n  text-align: right;\n  font-size: ${p => p.theme.fontSizeMedium};\n  ${p => p.theme.overflowEllipsis};\n  align-self: center;\n`;\n\nconst OtherSegment = styled('span')<{color: string}>`\n  display: block;\n  width: 100%;\n  height: ${space(2)};\n  color: inherit;\n  outline: none;\n  background-color: ${p => p.color};\n`;\n\nconst Segment = styled('span', {shouldForwardProp: isPropValid})<{color: string}>`\n  &:hover {\n    color: ${p => p.theme.white};\n  }\n  display: block;\n  width: 100%;\n  height: ${space(2)};\n  color: ${p => p.theme.white};\n  outline: none;\n  background-color: ${p => p.color};\n  text-align: right;\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  padding: 1px ${space(0.5)} 0 0;\n`;\n\nconst LegendAnimateContainer = styled(motion.div, {\n  shouldForwardProp: prop =>\n    prop === 'animate' || (prop !== 'expanded' && isPropValid(prop)),\n})<{expanded: boolean}>`\n  height: 0;\n  opacity: 0;\n  ${p => (!p.expanded ? 'overflow: hidden;' : '')}\n`;\n\nconst LegendContainer = styled('ol')`\n  list-style: none;\n  padding: 0;\n  margin: ${space(1)} 0;\n`;\n\nconst LegendRow = styled('div')`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding: ${space(0.5)} 0;\n`;\n\nconst LegendDot = styled('span')<{color: string; focus: boolean}>`\n  padding: 0;\n  position: relative;\n  width: 11px;\n  height: 11px;\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => p.color};\n  &:after {\n    content: '';\n    border-radius: 50%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    outline: ${p => p.theme.gray100} ${space(0.5)} solid;\n    opacity: ${p => (p.focus ? '1' : '0')};\n    transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nconst LegendText = styled('span')<{unfocus: boolean}>`\n  font-size: ${p => p.theme.fontSizeSmall};\n  margin-left: ${space(1)};\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  transition: color 0.3s;\n  color: ${p => (p.unfocus ? p.theme.gray300 : p.theme.gray400)};\n`;\n\nconst LegendPercent = styled('span')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  margin-left: ${space(1)};\n  color: ${p => p.theme.gray300};\n  text-align: right;\n  flex-grow: 1;\n`;\n\nconst ExpandToggleButton = styled(Button)`\n  color: ${p => p.theme.gray300};\n  margin-left: ${space(0.5)};\n`;\n\nconst NotApplicableLabel = styled('span')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst StyledSummary = styled('summary')`\n  &::-webkit-details-marker {\n    display: none;\n  }\n`;\n"],"names":["MOBILE_TAGS","FRONTEND_TAGS","BACKEND_TAGS","DEFAULT_TAGS","TAGS_FORMATTER","tagsData","transformedTagsData","Object","keys","forEach","tagKey","topValues","map","topValue","name","formatVersion","readable","LIMIT","TagFacets","_ref","tagKeys","environments","groupId","title","tagFormatter","project","state","setState","useState","loading","organization","useOrganization","api","useApi","useEffect","async","data","requestPromise","query","environment","env","limit","keyBy","fetchData","catch","JSON","stringify","features","includes","topTagKeys","filter","remainingTagKeys","sort","_jsx","SidebarSection","children","_jsxs","TagPlaceholders","Placeholder","height","Fragment","t","length","NoTagsFoundContainer","Content","TagFacetsDistributionMeterWrapper","expandFirstTag","_ref2","location","useLocation","TagFacetsList","index","tagWithTopValues","topValuesTotal","totalValues","otherTagValuesUrl","slug","eventsPath","segments","value","url","appendTagCondition","pathname","TagFacetsDistributionMeter","onTagClick","expandByDefault","otherUrl","displayName","_styled","target","space","COLORS","_debounceTrackHover","debounce","tag","platform","is_mobile","trackAdvancedAnalyticsEvent","colors","expanded","setExpanded","hoveredValue","setHoveredValue","topSegments","slice","totalVisible","reduce","sum","count","hasOther","appendExcludeTagValuesCondition","_ref3","excludeTopSegmentsUrl","push","isOther","TagSummary","open","onClick","e","preventDefault","StyledSummary","TagHeader","clickable","Array","isArray","Title","TitleType","Tooltip","skipWrapper","delay","TitleDescription","ExpandToggleButton","borderless","size","icon","IconChevron","direction","SegmentBar","pct","percent","pctLabel","Math","floor","segmentProps","isMobilePlatform","style","width","onMouseOver","onMouseLeave","OtherSegment","color","Segment","LegendAnimateContainer","animate","opacity","LegendContainer","segment","unfocus","focus","linkLabel","Link","to","LegendRow","LegendDot","LegendText","NotApplicableLabel","LegendPercent","p","styles","theme","fontSizeMedium","textColor","overflowEllipsis","gray300","shouldForwardProp","isPropValid","white","fontSizeExtraSmall","motion","prop","gray100","fontSizeSmall","gray400","Button"],"sourceRoot":""}