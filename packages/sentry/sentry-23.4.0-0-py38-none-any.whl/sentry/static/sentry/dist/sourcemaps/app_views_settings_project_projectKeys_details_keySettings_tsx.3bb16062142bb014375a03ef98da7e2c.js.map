{"version":3,"file":"chunks/app_views_settings_project_projectKeys_details_keySettings_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/settings/project/projectKeys/details/keyRateLimitsForm.tsx","webpack:///./app/views/settings/project/projectKeys/details/keySettings.tsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx"],"sourcesContent":["import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport sortBy from 'lodash/sortBy';\n\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport RangeSlider from 'sentry/components/forms/controls/rangeSlider';\nimport Form from 'sentry/components/forms/form';\nimport FormField from 'sentry/components/forms/formField';\nimport InputControl from 'sentry/components/input';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tct, tn} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getExactDuration} from 'sentry/utils/formatters';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\nconst PREDEFINED_RATE_LIMIT_VALUES = [\n  0, 60, 300, 900, 3600, 7200, 14400, 21600, 43200, 86400,\n];\n\ntype RateLimitValue = {\n  count: number;\n  window: number;\n};\n\ntype Props = {\n  data: ProjectKey;\n  disabled: boolean;\n  organization: Organization;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\nfunction KeyRateLimitsForm({data, disabled, organization, params}: Props) {\n  function handleChangeWindow(\n    onChange: (value: RateLimitValue, event: React.ChangeEvent<HTMLInputElement>) => void,\n    onBlur: (value: RateLimitValue, event: React.ChangeEvent<HTMLInputElement>) => void,\n    currentValueObj: RateLimitValue,\n    value: number,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) {\n    const valueObj = {...currentValueObj, window: value};\n\n    onChange(valueObj, event);\n    onBlur(valueObj, event);\n  }\n\n  function handleChangeCount(\n    callback: (value: RateLimitValue, event: React.ChangeEvent<HTMLInputElement>) => void,\n    value: RateLimitValue,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) {\n    const valueObj = {\n      ...value,\n      count: Number(event.target.value),\n    };\n\n    callback(valueObj, event);\n  }\n\n  function getAllowedRateLimitValues(currentRateLimit?: number) {\n    const {rateLimit} = data;\n    const {window} = rateLimit ?? {};\n\n    // The slider should display other values if they are set via the API, but still offer to select only the predefined values\n    if (defined(window)) {\n      // If the API returns a value not found in the predefined values and the user selects another value through the UI,\n      // he will no longer be able to reselect the \"custom\" value in the slider\n      if (currentRateLimit !== window) {\n        return PREDEFINED_RATE_LIMIT_VALUES;\n      }\n\n      // If the API returns a value not found in the predefined values, that value will be added to the slider\n      if (!PREDEFINED_RATE_LIMIT_VALUES.includes(window)) {\n        return sortBy([...PREDEFINED_RATE_LIMIT_VALUES, window]);\n      }\n    }\n\n    return PREDEFINED_RATE_LIMIT_VALUES;\n  }\n\n  const {keyId, projectId} = params;\n  const apiEndpoint = `/projects/${organization.slug}/${projectId}/keys/${keyId}/`;\n\n  const disabledAlert = ({features}) => (\n    <FeatureDisabled\n      alert={PanelAlert}\n      features={features}\n      featureName={t('Key Rate Limits')}\n    />\n  );\n\n  return (\n    <Form saveOnBlur apiEndpoint={apiEndpoint} apiMethod=\"PUT\" initialData={data}>\n      <Feature\n        features={['projects:rate-limits']}\n        hookName=\"feature-disabled:rate-limits\"\n        renderDisabled={({children, ...props}) =>\n          typeof children === 'function' &&\n          children({...props, renderDisabled: disabledAlert})\n        }\n      >\n        {({hasFeature, features, project, renderDisabled}) => (\n          <Panel>\n            <PanelHeader>{t('Rate Limits')}</PanelHeader>\n\n            <PanelBody>\n              <PanelAlert type=\"info\" showIcon>\n                {t(\n                  `Rate limits provide a flexible way to manage your error\n                    volume. If you have a noisy project or environment you\n                    can configure a rate limit for this key to reduce the\n                    number of errors processed. To manage your transaction\n                    volume, we recommend adjusting your sample rate in your\n                    SDK configuration.`\n                )}\n              </PanelAlert>\n              {!hasFeature &&\n                typeof renderDisabled === 'function' &&\n                renderDisabled({\n                  organization,\n                  project,\n                  features,\n                  hasFeature,\n                  children: null,\n                })}\n              <FormField\n                name=\"rateLimit\"\n                label={t('Rate Limit')}\n                disabled={disabled || !hasFeature}\n                validate={({form}) => {\n                  // TODO(TS): is validate actually doing anything because it's an unexpected prop\n                  const isValid =\n                    form &&\n                    form.rateLimit &&\n                    typeof form.rateLimit.count !== 'undefined' &&\n                    typeof form.rateLimit.window !== 'undefined';\n\n                  if (isValid) {\n                    return [];\n                  }\n\n                  return [['rateLimit', t('Fill in both fields first')]];\n                }}\n                formatMessageValue={({count, window}: RateLimitValue) =>\n                  tct('[errors] in [timeWindow]', {\n                    errors: tn('%s error ', '%s errors ', count),\n                    timeWindow:\n                      window === 0 ? t('no time window') : getExactDuration(window),\n                  })\n                }\n                help={t(\n                  'Apply a rate limit to this credential to cap the amount of errors accepted during a time window.'\n                )}\n                inline={false}\n              >\n                {({onChange, onBlur, value}) => {\n                  const window = typeof value === 'object' ? value.window : undefined;\n                  return (\n                    <RateLimitRow>\n                      <InputControl\n                        type=\"number\"\n                        name=\"rateLimit.count\"\n                        min={0}\n                        value={typeof value === 'object' ? value.count : undefined}\n                        placeholder={t('Count')}\n                        disabled={disabled || !hasFeature}\n                        onChange={event => handleChangeCount(onChange, value, event)}\n                        onBlur={event => handleChangeCount(onBlur, value, event)}\n                      />\n                      <EventsIn>{t('event(s) in')}</EventsIn>\n                      <RangeSlider\n                        name=\"rateLimit.window\"\n                        allowedValues={getAllowedRateLimitValues(window)}\n                        value={window}\n                        placeholder={t('Window')}\n                        formatLabel={rangeValue => {\n                          if (typeof rangeValue === 'number') {\n                            if (rangeValue === 0) {\n                              return t('None');\n                            }\n                            return getExactDuration(rangeValue);\n                          }\n                          return undefined;\n                        }}\n                        disabled={disabled || !hasFeature}\n                        onChange={(rangeValue, event) =>\n                          handleChangeWindow(\n                            onChange,\n                            onBlur,\n                            value,\n                            Number(rangeValue),\n                            event\n                          )\n                        }\n                      />\n                    </RateLimitRow>\n                  );\n                }}\n              </FormField>\n            </PanelBody>\n          </Panel>\n        )}\n      </Feature>\n    </Form>\n  );\n}\n\nexport default KeyRateLimitsForm;\n\nconst RateLimitRow = styled('div')`\n  display: grid;\n  grid-template-columns: 2fr 1fr 2fr;\n  align-items: center;\n  gap: ${space(1)};\n`;\n\nconst EventsIn = styled('small')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  text-align: center;\n  white-space: nowrap;\n`;\n","import {Fragment, useCallback, useEffect, useState} from 'react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport Access from 'sentry/components/acl/access';\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport DateTime from 'sentry/components/dateTime';\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport BooleanField from 'sentry/components/forms/fields/booleanField';\nimport SelectField from 'sentry/components/forms/fields/selectField';\nimport TextField from 'sentry/components/forms/fields/textField';\nimport Form from 'sentry/components/forms/form';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelFooter,\n  PanelHeader,\n} from 'sentry/components/panels';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport handleXhrErrorResponse from 'sentry/utils/handleXhrErrorResponse';\nimport useApi from 'sentry/utils/useApi';\nimport KeyRateLimitsForm from 'sentry/views/settings/project/projectKeys/details/keyRateLimitsForm';\nimport ProjectKeyCredentials from 'sentry/views/settings/project/projectKeys/projectKeyCredentials';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  data: ProjectKey;\n  onRemove: () => void;\n  organization: Organization;\n  params: {\n    keyId: string;\n    projectId: string;\n  };\n};\n\nexport enum DynamicSDKLoaderOption {\n  HAS_DEBUG = 'hasDebug',\n  HAS_PERFORMANCE = 'hasPerformance',\n  HAS_REPLAY = 'hasReplay',\n}\n\nexport const sdkLoaderOptions = {\n  [DynamicSDKLoaderOption.HAS_PERFORMANCE]: {\n    label: t('Enable Performance Monitoring'),\n    requiresV7: true,\n  },\n  [DynamicSDKLoaderOption.HAS_REPLAY]: {\n    label: t('Enable Session Replay'),\n    requiresV7: true,\n  },\n  [DynamicSDKLoaderOption.HAS_DEBUG]: {\n    label: t('Enable Debug Bundles'),\n    requiresV7: false,\n  },\n};\n\nexport function KeySettings({onRemove, organization, params, data}: Props) {\n  const api = useApi();\n  const [browserSdkVersion, setBrowserSdkVersion] = useState(data.browserSdkVersion);\n  const [dynamicSDKLoaderOptions, setDynamicSDKLoaderOptions] = useState(\n    data.dynamicSdkLoaderOptions\n  );\n\n  useEffect(() => {\n    setBrowserSdkVersion(data.browserSdkVersion);\n  }, [data.browserSdkVersion]);\n\n  useEffect(() => {\n    setDynamicSDKLoaderOptions(data.dynamicSdkLoaderOptions);\n  }, [data.dynamicSdkLoaderOptions]);\n\n  const {keyId, projectId} = params;\n  const apiEndpoint = `/projects/${organization.slug}/${projectId}/keys/${keyId}/`;\n  const loaderLink = getDynamicText({\n    value: data.dsn.cdn,\n    fixed: '__JS_SDK_LOADER_URL__',\n  });\n\n  const handleRemove = useCallback(async () => {\n    addLoadingMessage(t('Revoking key\\u2026'));\n\n    try {\n      await api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/keys/${keyId}/`,\n        {\n          method: 'DELETE',\n        }\n      );\n\n      onRemove();\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  }, [organization, api, onRemove, keyId, projectId]);\n\n  const handleToggleDynamicSDKLoaderOption = useCallback(\n    async <T extends typeof dynamicSDKLoaderOptions, K extends keyof T>(\n      dynamicSdkLoaderOption: K,\n      value: T[K]\n    ) => {\n      const newDynamicSdkLoaderOptions = Object.keys(dynamicSDKLoaderOptions).reduce(\n        (acc, key) => {\n          if (key === dynamicSdkLoaderOption) {\n            return {...acc, [key]: value};\n          }\n          return {...acc, [key]: dynamicSDKLoaderOptions[key]};\n        },\n        {}\n      );\n\n      addLoadingMessage();\n\n      try {\n        const response = await api.requestPromise(apiEndpoint, {\n          method: 'PUT',\n          data: {\n            dynamicSdkLoaderOptions: newDynamicSdkLoaderOptions,\n          },\n        });\n\n        setDynamicSDKLoaderOptions(response.dynamicSdkLoaderOptions);\n\n        addSuccessMessage(t('Successfully updated dynamic SDK loader configuration'));\n      } catch (error) {\n        const message = t('Unable to updated dynamic SDK loader configuration');\n        handleXhrErrorResponse(message)(error);\n        addErrorMessage(message);\n      }\n    },\n    [api, apiEndpoint, dynamicSDKLoaderOptions, setDynamicSDKLoaderOptions]\n  );\n\n  const handleUpdateBrowserSDKVersion = useCallback(\n    async (newBrowserSDKVersion: typeof browserSdkVersion) => {\n      addLoadingMessage();\n\n      const apiData: {\n        browserSdkVersion: typeof browserSdkVersion;\n        dynamicSdkLoaderOptions?: Partial<Record<DynamicSDKLoaderOption, boolean>>;\n      } = {\n        browserSdkVersion: newBrowserSDKVersion,\n      };\n\n      const shouldRestrictDynamicSdkLoaderOptions =\n        !sdkVersionSupportsPerformanceAndReplay(newBrowserSDKVersion);\n\n      if (shouldRestrictDynamicSdkLoaderOptions) {\n        // Performance & Replay are not supported before 7.x\n        const newDynamicSdkLoaderOptions = {\n          ...dynamicSDKLoaderOptions,\n          hasPerformance: false,\n          hasReplay: false,\n        };\n\n        apiData.dynamicSdkLoaderOptions = newDynamicSdkLoaderOptions;\n      }\n\n      try {\n        const response = await api.requestPromise(apiEndpoint, {\n          method: 'PUT',\n          data: apiData,\n        });\n\n        setBrowserSdkVersion(response.browserSdkVersion);\n\n        if (shouldRestrictDynamicSdkLoaderOptions) {\n          setDynamicSDKLoaderOptions(response.dynamicSdkLoaderOptions);\n        }\n\n        addSuccessMessage(t('Successfully updated SDK version'));\n      } catch (error) {\n        const message = t('Unable to updated SDK version');\n        handleXhrErrorResponse(message)(error);\n        addErrorMessage(message);\n      }\n    },\n    [\n      api,\n      apiEndpoint,\n      setBrowserSdkVersion,\n      setDynamicSDKLoaderOptions,\n      dynamicSDKLoaderOptions,\n    ]\n  );\n\n  return (\n    <Access access={['project:write']}>\n      {({hasAccess}) => (\n        <Fragment>\n          <Form\n            saveOnBlur\n            allowUndo\n            apiEndpoint={apiEndpoint}\n            apiMethod=\"PUT\"\n            initialData={data}\n          >\n            <Panel>\n              <PanelHeader>{t('Details')}</PanelHeader>\n\n              <PanelBody>\n                <TextField\n                  name=\"name\"\n                  label={t('Name')}\n                  disabled={!hasAccess}\n                  required={false}\n                  maxLength={64}\n                />\n                <BooleanField\n                  name=\"isActive\"\n                  label={t('Enabled')}\n                  required={false}\n                  disabled={!hasAccess}\n                  help=\"Accept events from this key? This may be used to temporarily suspend a key.\"\n                />\n                <FieldGroup label={t('Created')}>\n                  <div className=\"controls\">\n                    <DateTime date={data.dateCreated} />\n                  </div>\n                </FieldGroup>\n              </PanelBody>\n            </Panel>\n          </Form>\n\n          <KeyRateLimitsForm\n            organization={organization}\n            params={params}\n            data={data}\n            disabled={!hasAccess}\n          />\n\n          <Panel>\n            <PanelHeader>{t('JavaScript Loader')}</PanelHeader>\n            <PanelBody>\n              <FieldGroup\n                help={tct(\n                  'Copy this script into your website to setup your JavaScript SDK without any additional configuration. [link]',\n                  {\n                    link: (\n                      <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/install/lazy-load-sentry/\">\n                        What does the script provide?\n                      </ExternalLink>\n                    ),\n                  }\n                )}\n                inline={false}\n                flexibleControlStateSize\n              >\n                <TextCopyInput>\n                  {`<script src='${loaderLink}' crossorigin=\"anonymous\"></script>`}\n                </TextCopyInput>\n              </FieldGroup>\n              <SelectField\n                name=\"browserSdkVersion\"\n                options={\n                  data.browserSdk\n                    ? data.browserSdk.choices.map(([value, label]) => ({\n                        value,\n                        label,\n                      }))\n                    : []\n                }\n                value={browserSdkVersion}\n                onChange={value => handleUpdateBrowserSDKVersion(value)}\n                placeholder={t('4.x')}\n                allowClear={false}\n                disabled={!hasAccess}\n                help={t(\n                  'Select the version of the SDK that should be loaded. Note that it can take a few minutes until this change is live.'\n                )}\n              />\n            </PanelBody>\n\n            <PanelFooter>\n              {Object.entries(sdkLoaderOptions).map(([key, value]) => {\n                const sdkLoaderOption = Object.keys(dynamicSDKLoaderOptions).find(\n                  dynamicSdkLoaderOption => dynamicSdkLoaderOption === key\n                );\n\n                if (!sdkLoaderOption) {\n                  return null;\n                }\n\n                return (\n                  <BooleanField\n                    label={value.label}\n                    key={key}\n                    name={key}\n                    value={\n                      value.requiresV7 &&\n                      !sdkVersionSupportsPerformanceAndReplay(browserSdkVersion)\n                        ? false\n                        : dynamicSDKLoaderOptions[sdkLoaderOption]\n                    }\n                    onChange={() =>\n                      handleToggleDynamicSDKLoaderOption(\n                        sdkLoaderOption as DynamicSDKLoaderOption,\n                        !dynamicSDKLoaderOptions[sdkLoaderOption]\n                      )\n                    }\n                    disabled={\n                      !hasAccess ||\n                      (value.requiresV7 &&\n                        !sdkVersionSupportsPerformanceAndReplay(browserSdkVersion))\n                    }\n                    help={\n                      value.requiresV7 &&\n                      !sdkVersionSupportsPerformanceAndReplay(browserSdkVersion)\n                        ? t('Only available in SDK version 7.x and above')\n                        : key === DynamicSDKLoaderOption.HAS_REPLAY &&\n                          dynamicSDKLoaderOptions[sdkLoaderOption]\n                        ? t(\n                            'When using Replay, the loader will load the ES6 bundle instead of the ES5 bundle.'\n                          )\n                        : undefined\n                    }\n                    disabledReason={\n                      !hasAccess\n                        ? t('You do not have permission to edit this setting')\n                        : undefined\n                    }\n                  />\n                );\n              })}\n            </PanelFooter>\n          </Panel>\n\n          <Panel>\n            <PanelHeader>{t('Credentials')}</PanelHeader>\n            <PanelBody>\n              <PanelAlert type=\"info\" showIcon>\n                {t(\n                  'Your credentials are coupled to a public and secret key. Different clients will require different credentials, so make sure you check the documentation before plugging things in.'\n                )}\n              </PanelAlert>\n\n              <ProjectKeyCredentials\n                projectId={`${data.projectId}`}\n                data={data}\n                showPublicKey\n                showSecretKey\n                showProjectId\n              />\n            </PanelBody>\n          </Panel>\n\n          <Access access={['project:admin']}>\n            <Panel>\n              <PanelHeader>{t('Revoke Key')}</PanelHeader>\n              <PanelBody>\n                <FieldGroup\n                  label={t('Revoke Key')}\n                  help={t(\n                    'Revoking this key will immediately remove and suspend the credentials. This action is irreversible.'\n                  )}\n                >\n                  <div>\n                    <Confirm\n                      priority=\"danger\"\n                      message={t(\n                        'Are you sure you want to revoke this key? This will immediately remove and suspend the credentials.'\n                      )}\n                      onConfirm={handleRemove}\n                      confirmText={t('Revoke Key')}\n                    >\n                      <Button priority=\"danger\">{t('Revoke Key')}</Button>\n                    </Confirm>\n                  </div>\n                </FieldGroup>\n              </PanelBody>\n            </Panel>\n          </Access>\n        </Fragment>\n      )}\n    </Access>\n  );\n}\n\nfunction sdkVersionSupportsPerformanceAndReplay(sdkVersion: string): boolean {\n  return sdkVersion === 'latest' || sdkVersion === '7.x';\n}\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  data: ProjectKey;\n  projectId: string;\n  showDsn?: boolean;\n  showDsnPublic?: boolean;\n  showMinidump?: boolean;\n  showProjectId?: boolean;\n  showPublicKey?: boolean;\n  showSecretKey?: boolean;\n  showSecurityEndpoint?: boolean;\n  showUnreal?: boolean;\n};\n\nfunction ProjectKeyCredentials({\n  data,\n  projectId,\n  showDsn = true,\n  showDsnPublic = true,\n  showMinidump = true,\n  showProjectId = false,\n  showPublicKey = false,\n  showSecretKey = false,\n  showSecurityEndpoint = true,\n  showUnreal = true,\n}: Props) {\n  const [showDeprecatedDsn, setShowDeprecatedDsn] = useState(false);\n\n  return (\n    <Fragment>\n      {showDsnPublic && (\n        <FieldGroup\n          label={t('DSN')}\n          inline={false}\n          flexibleControlStateSize\n          help={tct('The DSN tells the SDK where to send the events to. [link]', {\n            link: showDsn ? (\n              <Link to=\"\" onClick={() => setShowDeprecatedDsn(curr => !curr)}>\n                {showDeprecatedDsn ? t('Hide deprecated DSN') : t('Show deprecated DSN')}\n              </Link>\n            ) : null,\n          })}\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.public,\n              fixed: '__DSN__',\n            })}\n          </TextCopyInput>\n          {showDeprecatedDsn && (\n            <StyledField\n              label={null}\n              help={t(\n                'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n              )}\n              inline={false}\n              flexibleControlStateSize\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: data.dsn.secret,\n                  fixed: '__DSN_DEPRECATED__',\n                })}\n              </TextCopyInput>\n            </StyledField>\n          )}\n        </FieldGroup>\n      )}\n\n      {/* this edge case should imho not happen, but just to be sure */}\n      {!showDsnPublic && showDsn && (\n        <FieldGroup\n          label={t('DSN (Deprecated)')}\n          help={t(\n            'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.secret,\n              fixed: '__DSN_DEPRECATED__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showSecurityEndpoint && (\n        <FieldGroup\n          label={t('Security Header Endpoint')}\n          help={t(\n            'Use your security header endpoint for features like CSP and Expect-CT reports.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.security,\n              fixed: '__SECURITY_HEADER_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showMinidump && (\n        <FieldGroup\n          label={t('Minidump Endpoint')}\n          help={tct(\n            'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/native/guides/minidumps/\">\n                  minidump crash reports\n                </ExternalLink>\n              ),\n            }\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.minidump,\n              fixed: '__MINIDUMP_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showUnreal && (\n        <FieldGroup\n          label={t('Unreal Engine 4 Endpoint')}\n          help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.unreal || '',\n              fixed: '__UNREAL_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showPublicKey && (\n        <FieldGroup label={t('Public Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.public,\n              fixed: '__PUBLICKEY__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showSecretKey && (\n        <FieldGroup label={t('Secret Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.secret,\n              fixed: '__SECRETKEY__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showProjectId && (\n        <FieldGroup label={t('Project ID')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: projectId,\n              fixed: '__PROJECTID__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n    </Fragment>\n  );\n}\n\nconst StyledField = styled(FieldGroup)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n"],"names":["PREDEFINED_RATE_LIMIT_VALUES","KeyRateLimitsForm","_ref","data","disabled","organization","params","handleChangeCount","callback","value","event","count","Number","target","getAllowedRateLimitValues","currentRateLimit","rateLimit","window","defined","includes","sortBy","keyId","projectId","apiEndpoint","slug","disabledAlert","_ref2","features","_jsx","FeatureDisabled","alert","PanelAlert","featureName","t","Form","saveOnBlur","apiMethod","initialData","children","Feature","hookName","renderDisabled","_ref3","props","_ref4","hasFeature","project","_jsxs","Panel","PanelHeader","PanelBody","type","showIcon","FormField","name","label","validate","_ref5","form","formatMessageValue","_ref6","tct","errors","tn","timeWindow","getExactDuration","help","inline","_ref7","onChange","onBlur","undefined","RateLimitRow","InputControl","min","placeholder","EventsIn","RangeSlider","allowedValues","formatLabel","rangeValue","currentValueObj","valueObj","handleChangeWindow","displayName","_styled","space","p","theme","fontSizeRelativeSmall","DynamicSDKLoaderOption","sdkLoaderOptions","HAS_PERFORMANCE","requiresV7","HAS_REPLAY","HAS_DEBUG","KeySettings","onRemove","api","useApi","browserSdkVersion","setBrowserSdkVersion","useState","dynamicSDKLoaderOptions","setDynamicSDKLoaderOptions","dynamicSdkLoaderOptions","useEffect","loaderLink","getDynamicText","dsn","cdn","fixed","handleRemove","useCallback","async","addLoadingMessage","requestPromise","method","addSuccessMessage","_err","addErrorMessage","handleToggleDynamicSDKLoaderOption","dynamicSdkLoaderOption","newDynamicSdkLoaderOptions","Object","keys","reduce","acc","key","response","error","message","handleXhrErrorResponse","handleUpdateBrowserSDKVersion","apiData","newBrowserSDKVersion","shouldRestrictDynamicSdkLoaderOptions","sdkVersionSupportsPerformanceAndReplay","hasPerformance","hasReplay","Access","access","hasAccess","Fragment","allowUndo","TextField","required","maxLength","BooleanField","FieldGroup","className","DateTime","date","dateCreated","link","ExternalLink","href","flexibleControlStateSize","TextCopyInput","SelectField","options","browserSdk","choices","map","allowClear","PanelFooter","entries","sdkLoaderOption","find","disabledReason","ProjectKeyCredentials","showPublicKey","showSecretKey","showProjectId","Confirm","priority","onConfirm","confirmText","Button","sdkVersion","showDsn","showDsnPublic","showMinidump","showSecurityEndpoint","showUnreal","showDeprecatedDsn","setShowDeprecatedDsn","Link","to","onClick","curr","public","StyledField","secret","security","minidump","unreal"],"sourceRoot":""}