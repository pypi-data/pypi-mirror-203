{"version":3,"file":"chunks/app_views_settings_project_projectKeys_list_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"4LAYA,QAZA,SACEA,EACAC,GAGQ,IADRC,EAAoBC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEpB,MAAMC,EAAY,GAAEN,OAAeC,IAC7BM,EAAOL,EAAe,GAAEI,OAAcJ,IAAgBI,EAE5D,OANmBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAMsBI,EAApB,GAAEA,YACzB,C,wPCJe,MAAMC,UAGXC,EAAAA,EACRC,WACE,MAAO,EACT,CAEAC,SACE,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAmB,CAACC,MAAOC,KAAKL,WAAWM,SACzCD,KAAKE,mBAGZ,EAdmBT,EAASU,YAAA,W,kpCCmB9B,SAASC,EAAMC,GAAsE,IAArE,KAACC,EAAI,SAAEC,EAAQ,SAAEC,EAAQ,OAAEC,EAAM,OAAEC,EAAM,SAAEC,EAAQ,OAAEC,GAAcP,EACjF,MAGMQ,GAAUC,EAAAA,EAAAA,GAAe,GAAER,EAAKS,MAAO,CAACL,SAAQE,SAAQD,aACxDK,EAAgBP,EAAOQ,IAAI,iBAEjC,OACEC,EAAAA,EAAAA,IAACC,EAAAA,GAAK,CAAAlB,SAAA,EACJiB,EAAAA,EAAAA,IAACE,EAAAA,GAAW,CAACC,YAAU,EAAApB,SAAA,EACrBiB,EAAAA,EAAAA,IAACI,EAAK,CAACC,UAAWjB,EAAKkB,SAASvB,SAAA,EAC9BJ,EAAAA,EAAAA,IAAC4B,EAAe,CAACC,GAAIb,EAAQZ,SAAEK,EAAKqB,SAClCrB,EAAKkB,WACLN,EAAAA,EAAAA,IAAA,SAAAjB,SAAA,CACG,QACA2B,EAAAA,EAAAA,GAAE,mBAITV,EAAAA,EAAAA,IAACW,EAAQ,CAAA5B,SAAA,EACPJ,EAAAA,EAAAA,IAACiC,EAAAA,GAAM,CAACJ,GAAIb,EAASkB,KAAK,KAAI9B,UAC3B2B,EAAAA,EAAAA,GAAE,gBAEL/B,EAAAA,EAAAA,IAACmC,EAAAA,EAAO,CACNC,UAAW3B,EAAKkB,SAtBJU,IAAM1B,GAAS,EAAOF,GADvB6B,IAAM3B,GAAS,EAAMF,GAwBhC8B,YAAa9B,EAAKkB,UAAWI,EAAAA,EAAAA,GAAE,gBAAiBA,EAAAA,EAAAA,GAAE,cAClDS,QACE/B,EAAKkB,UACDI,EAAAA,EAAAA,GAAE,+CACFA,EAAAA,EAAAA,GAAE,6CACP3B,UAEDJ,EAAAA,EAAAA,IAACiC,EAAAA,GAAM,CAACC,KAAK,KAAKR,UAAWP,EAAcf,SACxCK,EAAKkB,UAAWI,EAAAA,EAAAA,GAAE,YAAaA,EAAAA,EAAAA,GAAE,eAGtC/B,EAAAA,EAAAA,IAACmC,EAAAA,EAAO,CACNM,SAAS,SACTL,UAAWA,IAAM1B,EAASD,GAC1B8B,aAAaR,EAAAA,EAAAA,GAAE,cACfS,SAAST,EAAAA,EAAAA,GACP,0EACA3B,UAEFJ,EAAAA,EAAAA,IAACiC,EAAAA,GAAM,CACLC,KAAK,KACLR,UAAWP,EACXuB,MAAM1C,EAAAA,EAAAA,IAAC2C,EAAAA,GAAU,IACjB,cAAYZ,EAAAA,EAAAA,GAAE,qBAMtB/B,EAAAA,EAAAA,IAAC4C,EAAgB,CAACC,WAAY,IAAKC,gBAAc,EAACC,SAAShB,EAAAA,EAAAA,GAAE,UAAU3B,UACrEJ,EAAAA,EAAAA,IAACgD,EAAe,CAACtB,UAAWjB,EAAKkB,SAASvB,UACxCJ,EAAAA,EAAAA,IAACiD,EAAAA,EAAqB,CAACC,UAAY,GAAEzC,EAAKyC,YAAazC,KAAMA,UAKvE,CA7DSF,EAAMD,YAAA,SA+Df,UAEMsC,GAAmBO,EAAAA,EAAAA,GAAOC,EAAAA,EAAU,CAAAC,OAAA,aAAjBF,CAAkB,oDAIrBG,EAAAA,EAAAA,GAAM,GAAE,MAIxB1B,GAAkBuB,EAAAA,EAAAA,GAAOI,EAAAA,EAAI,CAAAF,OAAA,aAAXF,CAAY,UACzBK,GAAKA,EAAEC,MAAMC,SAAO,KAGzBjC,GAAQ0B,EAAAA,EAAAA,GAAO,MAAK,CAAAE,OAAA,aAAZF,CAAa,WAEvBK,GAAMA,EAAE9B,SAAW,gBAAkB,IAAG,kBAC1B4B,EAAAA,EAAAA,GAAM,GAAE,KAGpBtB,GAAWmB,EAAAA,EAAAA,GAAO,MAAK,CAAAE,OAAA,aAAZF,CAAa,wCAGrBG,EAAAA,EAAAA,GAAM,GAAE,2BAIXN,GAAkBG,EAAAA,EAAAA,GAAOQ,EAAAA,EAAS,CAAAN,OAAA,aAAhBF,EACpBK,GAAMA,EAAE9B,SAAW,gBAAkB,IAAG,KClF5C,MAAMkC,UAAoBhE,EAAAA,EAAwBiE,cAAA,SAAAtE,YAYhDuE,EAAAA,EAAAA,GAAA,wBAGkBC,UAChB,MAAMC,EAAa,IAAI7D,KAAK8D,MAAMC,UAElCC,EAAAA,EAAAA,KAAkBpC,EAAAA,EAAAA,GAAE,kBAEpB5B,KAAKiE,UAASH,IAAS,CACrBC,QAASD,EAAMC,QAAQG,QAAOC,GAAOA,EAAIpD,KAAOT,EAAKS,SAGvD,MAAM,aAACqD,GAAgBpE,KAAKqE,OACtB,UAACtB,GAAa/C,KAAKqE,MAAMzD,OAE/B,UACQZ,KAAKsE,IAAIC,eACZ,aAAYH,EAAaI,QAAQzB,UAAkBzC,EAAKS,MACzD,CACE0D,OAAQ,YAGZC,EAAAA,EAAAA,KAAkB9C,EAAAA,EAAAA,GAAE,eACtB,CAAE,MAAO+C,GACP3E,KAAKiE,SAAS,CACZF,QAASF,KAEXe,EAAAA,EAAAA,KAAgBhD,EAAAA,EAAAA,GAAE,wBACpB,MACD+B,EAAAA,EAAAA,GAAA,wBAEiBC,MAAOpC,EAAmBlB,KAC1C,MAAMuD,EAAa,IAAI7D,KAAK8D,MAAMC,UAElCC,EAAAA,EAAAA,KAAkBpC,EAAAA,EAAAA,GAAE,oBAEpB5B,KAAKiE,UAASH,IAWL,CAACC,QAVQD,EAAMC,QAAQc,KAAIV,GAC5BA,EAAIpD,KAAOT,EAAKS,GACX,IACFoD,EACH3C,UAAWlB,EAAKkB,UAIb2C,QAKX,MAAM,aAACC,GAAgBpE,KAAKqE,OACtB,UAACtB,GAAa/C,KAAKqE,MAAMzD,OAE/B,UACQZ,KAAKsE,IAAIC,eACZ,aAAYH,EAAaI,QAAQzB,UAAkBzC,EAAKS,MACzD,CACE0D,OAAQ,MACRnE,KAAM,CAACkB,eAGXkD,EAAAA,EAAAA,IAAkBlD,GAAWI,EAAAA,EAAAA,GAAE,gBAAiBA,EAAAA,EAAAA,GAAE,gBACpD,CAAE,MAAO+C,IACPC,EAAAA,EAAAA,IAAgBpD,GAAWI,EAAAA,EAAAA,GAAE,uBAAwBA,EAAAA,EAAAA,GAAE,wBACvD5B,KAAKiE,SAAS,CAACF,QAASF,GAC1B,MACDF,EAAAA,EAAAA,GAAA,wBAEiBC,UAChB,MAAM,aAACQ,GAAgBpE,KAAKqE,OACtB,UAACtB,GAAa/C,KAAKqE,MAAMzD,OAE/B,IACE,MAAMN,QAAyBN,KAAKsE,IAAIC,eACrC,aAAYH,EAAaI,QAAQzB,UAClC,CACE0B,OAAQ,SAIZzE,KAAKiE,UAASH,IAAS,CACrBC,QAAS,IAAID,EAAMC,QAASzD,QAE9BoE,EAAAA,EAAAA,KAAkB9C,EAAAA,EAAAA,GAAE,sBACtB,CAAE,MAAO+C,IACPC,EAAAA,EAAAA,KAAgBhD,EAAAA,EAAAA,GAAE,+CACpB,IACD,CAlGDjC,WACE,MAAM,UAACoD,GAAa/C,KAAKqE,MAAMzD,OAC/B,OAAOkE,EAAAA,EAAAA,IAAclD,EAAAA,EAAAA,GAAE,eAAgBmB,GAAW,EACpD,CAEAgC,eACE,MAAM,aAACX,GAAgBpE,KAAKqE,OACtB,UAACtB,GAAa/C,KAAKqE,MAAMzD,OAC/B,MAAO,CAAC,CAAC,UAAY,aAAYwD,EAAaI,QAAQzB,WACxD,CA2FAiC,cACE,OACEnF,EAAAA,EAAAA,IAACsB,EAAAA,GAAK,CAAAlB,UACJJ,EAAAA,EAAAA,IAACoF,EAAAA,EAAY,CACX1C,MAAM1C,EAAAA,EAAAA,IAACqF,EAAAA,GAAQ,CAACnD,KAAK,OACrBoD,aAAavD,EAAAA,EAAAA,GAAE,iDAIvB,CAEAwD,gBACE,MAAM,SAACzE,EAAQ,aAAEyD,EAAY,OAAE1D,EAAM,OAAEE,GAAUZ,KAAKqE,OAChD,UAACtB,GAAanC,EACdH,EAAS,IAAI4E,IAAIjB,EAAa3D,QAEpC,OACES,EAAAA,EAAAA,IAACoE,EAAAA,SAAQ,CAAArF,SAAA,CACND,KAAK8D,MAAMC,QAAQc,KAAIV,IACtBtE,EAAAA,EAAAA,IAACO,EAAM,CACLK,OAAQA,EAER8E,MAAOnB,EAAaI,KACpBzB,UAAY,GAAEA,IACdzC,KAAM6D,EACN3D,SAAUR,KAAKwF,gBACfjF,SAAUP,KAAKyF,gBACf/E,OAAQA,EACRC,SAAUA,EACVC,OAAQA,GARHuD,EAAIpD,OAWblB,EAAAA,EAAAA,IAAC6F,EAAAA,EAAU,CAACC,UAAW3F,KAAK8D,MAAM8B,qBAGxC,CAEAC,aACE,MAAMC,GAAW9F,KAAK8D,MAAMC,QAAQ1E,OAEpC,OACE6B,EAAAA,EAAAA,IAAA,OAAK,eAAa,eAAcjB,SAAA,EAC9BJ,EAAAA,EAAAA,IAACkG,EAAAA,EAAkB,CACjBhG,OAAO6B,EAAAA,EAAAA,GAAE,eACToE,OACEhG,KAAKqE,MAAMD,aAAa3D,OAAOwF,SAAS,kBACtCpG,EAAAA,EAAAA,IAACiC,EAAAA,GAAM,CACLoE,QAASlG,KAAKmG,gBACdpE,KAAK,KACLO,SAAS,UACTC,MAAM1C,EAAAA,EAAAA,IAACuG,EAAAA,GAAO,CAACrE,KAAK,KAAKsE,WAAS,IAAIpG,UAErC2B,EAAAA,EAAAA,GAAE,sBAEH,QAGR/B,EAAAA,EAAAA,IAACyG,EAAAA,EAAS,CAAArG,UACPsG,EAAAA,EAAAA,IACE,8QAID,CACEC,MACE3G,EAAAA,EAAAA,IAAC4G,EAAAA,EAAY,CAACC,KAAK,2EAErBC,MAAM9G,EAAAA,EAAAA,IAAA,eAKXiG,EAAU9F,KAAKgF,cAAgBhF,KAAKoF,kBAG3C,EAGF,SAAewB,EAAAA,EAAAA,GAAiBnD,E,+kBC5LhC,SAASX,EAAqBzC,GAWpB,IAXqB,KAC7BC,EAAI,UACJyC,EAAS,QACT8D,GAAU,EAAI,cACdC,GAAgB,EAAI,aACpBC,GAAe,EAAI,cACnBC,GAAgB,EAAK,cACrBC,GAAgB,EAAK,cACrBC,GAAgB,EAAK,qBACrBC,GAAuB,EAAI,WAC3BC,GAAa,GACP/G,EACN,MAAOgH,EAAmBC,IAAwBC,EAAAA,EAAAA,WAAS,GAE3D,OACErG,EAAAA,EAAAA,IAACoE,EAAAA,SAAQ,CAAArF,SAAA,CACN6G,IACC5F,EAAAA,EAAAA,IAACsG,EAAAA,EAAU,CACT7F,OAAOC,EAAAA,EAAAA,GAAE,OACT6F,QAAQ,EACRC,0BAAwB,EACxBC,MAAMpB,EAAAA,EAAAA,IAAI,4DAA6D,CACrEC,KAAMK,GACJhH,EAAAA,EAAAA,IAACuD,EAAAA,EAAI,CAAC1B,GAAG,GAAGwE,QAASA,IAAMoB,GAAqBM,IAASA,IAAM3H,SAC5DoH,GAAoBzF,EAAAA,EAAAA,GAAE,wBAAyBA,EAAAA,EAAAA,GAAE,yBAElD,OACH3B,SAAA,EAEHJ,EAAAA,EAAAA,IAACgI,EAAAA,EAAa,CAAA5H,UACX6H,EAAAA,EAAAA,GAAe,CACdC,MAAOzH,EAAK0H,IAAIC,OAChBC,MAAO,cAGVb,IACCxH,EAAAA,EAAAA,IAACsI,EAAW,CACVxG,MAAO,KACPgG,MAAM/F,EAAAA,EAAAA,GACJ,2KAEF6F,QAAQ,EACRC,0BAAwB,EAAAzH,UAExBJ,EAAAA,EAAAA,IAACgI,EAAAA,EAAa,CAAA5H,UACX6H,EAAAA,EAAAA,GAAe,CACdC,MAAOzH,EAAK0H,IAAII,OAChBF,MAAO,+BASjBpB,GAAiBD,IACjBhH,EAAAA,EAAAA,IAAC2H,EAAAA,EAAU,CACT7F,OAAOC,EAAAA,EAAAA,GAAE,oBACT+F,MAAM/F,EAAAA,EAAAA,GACJ,2KAEF6F,QAAQ,EACRC,0BAAwB,EAAAzH,UAExBJ,EAAAA,EAAAA,IAACgI,EAAAA,EAAa,CAAA5H,UACX6H,EAAAA,EAAAA,GAAe,CACdC,MAAOzH,EAAK0H,IAAII,OAChBF,MAAO,2BAMdf,IACCtH,EAAAA,EAAAA,IAAC2H,EAAAA,EAAU,CACT7F,OAAOC,EAAAA,EAAAA,GAAE,4BACT+F,MAAM/F,EAAAA,EAAAA,GACJ,kFAEF6F,QAAQ,EACRC,0BAAwB,EAAAzH,UAExBJ,EAAAA,EAAAA,IAACgI,EAAAA,EAAa,CAAA5H,UACX6H,EAAAA,EAAAA,GAAe,CACdC,MAAOzH,EAAK0H,IAAIK,SAChBH,MAAO,qCAMdnB,IACClH,EAAAA,EAAAA,IAAC2H,EAAAA,EAAU,CACT7F,OAAOC,EAAAA,EAAAA,GAAE,qBACT+F,MAAMpB,EAAAA,EAAAA,IACJ,uFACA,CACEC,MACE3G,EAAAA,EAAAA,IAAC4G,EAAAA,EAAY,CAACC,KAAK,4DAA2DzG,SAAC,6BAMrFwH,QAAQ,EACRC,0BAAwB,EAAAzH,UAExBJ,EAAAA,EAAAA,IAACgI,EAAAA,EAAa,CAAA5H,UACX6H,EAAAA,EAAAA,GAAe,CACdC,MAAOzH,EAAK0H,IAAIM,SAChBJ,MAAO,8BAMdd,IACCvH,EAAAA,EAAAA,IAAC2H,EAAAA,EAAU,CACT7F,OAAOC,EAAAA,EAAAA,GAAE,4BACT+F,MAAM/F,EAAAA,EAAAA,GAAE,2DACR6F,QAAQ,EACRC,0BAAwB,EAAAzH,UAExBJ,EAAAA,EAAAA,IAACgI,EAAAA,EAAa,CAAA5H,UACX6H,EAAAA,EAAAA,GAAe,CACdC,MAAOzH,EAAK0H,IAAIO,QAAU,GAC1BL,MAAO,4BAMdjB,IACCpH,EAAAA,EAAAA,IAAC2H,EAAAA,EAAU,CAAC7F,OAAOC,EAAAA,EAAAA,GAAE,cAAe6F,QAAM,EAACC,0BAAwB,EAAAzH,UACjEJ,EAAAA,EAAAA,IAACgI,EAAAA,EAAa,CAAA5H,UACX6H,EAAAA,EAAAA,GAAe,CACdC,MAAOzH,EAAK2H,OACZC,MAAO,sBAMdhB,IACCrH,EAAAA,EAAAA,IAAC2H,EAAAA,EAAU,CAAC7F,OAAOC,EAAAA,EAAAA,GAAE,cAAe6F,QAAM,EAACC,0BAAwB,EAAAzH,UACjEJ,EAAAA,EAAAA,IAACgI,EAAAA,EAAa,CAAA5H,UACX6H,EAAAA,EAAAA,GAAe,CACdC,MAAOzH,EAAK8H,OACZF,MAAO,sBAMdlB,IACCnH,EAAAA,EAAAA,IAAC2H,EAAAA,EAAU,CAAC7F,OAAOC,EAAAA,EAAAA,GAAE,cAAe6F,QAAM,EAACC,0BAAwB,EAAAzH,UACjEJ,EAAAA,EAAAA,IAACgI,EAAAA,EAAa,CAAA5H,UACX6H,EAAAA,EAAAA,GAAe,CACdC,MAAOhF,EACPmF,MAAO,wBAOrB,CAvKSpF,EAAqB3C,YAAA,wBAyK9B,MAAMgI,GAAcnF,EAAAA,EAAAA,GAAOwE,EAAAA,EAAU,CAAAtE,OAAA,YAAjBF,CAAkB,YACzBG,EAAAA,EAAAA,GAAM,IAAI,WAGvB,G","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/projectKeys/list/keyRow.tsx","webpack:///./app/views/settings/project/projectKeys/list/index.tsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport ClippedBox from 'sentry/components/clippedBox';\nimport Confirm from 'sentry/components/confirm';\nimport Link from 'sentry/components/links/link';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Scope} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport ProjectKeyCredentials from 'sentry/views/settings/project/projectKeys/projectKeyCredentials';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  access: Set<Scope>;\n  data: ProjectKey;\n  onRemove: (data: ProjectKey) => void;\n  onToggle: (isActive: boolean, data: ProjectKey) => void;\n  orgId: string;\n  projectId: string;\n} & Pick<RouteComponentProps<{}, {}>, 'routes' | 'location' | 'params'>;\n\nfunction KeyRow({data, onRemove, onToggle, access, routes, location, params}: Props) {\n  const handleEnable = () => onToggle(true, data);\n  const handleDisable = () => onToggle(false, data);\n\n  const editUrl = recreateRoute(`${data.id}/`, {routes, params, location});\n  const controlActive = access.has('project:write');\n\n  return (\n    <Panel>\n      <PanelHeader hasButtons>\n        <Title disabled={!data.isActive}>\n          <PanelHeaderLink to={editUrl}>{data.label}</PanelHeaderLink>\n          {!data.isActive && (\n            <small>\n              {' \\u2014  '}\n              {t('Disabled')}\n            </small>\n          )}\n        </Title>\n        <Controls>\n          <Button to={editUrl} size=\"sm\">\n            {t('Configure')}\n          </Button>\n          <Confirm\n            onConfirm={data.isActive ? handleDisable : handleEnable}\n            confirmText={data.isActive ? t('Disable Key') : t('Enable Key')}\n            message={\n              data.isActive\n                ? t('Are you sure you want to disable this key?')\n                : t('Are you sure you want to enable this key?')\n            }\n          >\n            <Button size=\"sm\" disabled={!controlActive}>\n              {data.isActive ? t('Disable') : t('Enable')}\n            </Button>\n          </Confirm>\n          <Confirm\n            priority=\"danger\"\n            onConfirm={() => onRemove(data)}\n            confirmText={t('Remove Key')}\n            message={t(\n              'Are you sure you want to remove this key? This action is irreversible.'\n            )}\n          >\n            <Button\n              size=\"sm\"\n              disabled={!controlActive}\n              icon={<IconDelete />}\n              aria-label={t('Delete')}\n            />\n          </Confirm>\n        </Controls>\n      </PanelHeader>\n\n      <StyledClippedBox clipHeight={300} defaultClipped btnText={t('Expand')}>\n        <StyledPanelBody disabled={!data.isActive}>\n          <ProjectKeyCredentials projectId={`${data.projectId}`} data={data} />\n        </StyledPanelBody>\n      </StyledClippedBox>\n    </Panel>\n  );\n}\n\nexport default KeyRow;\n\nconst StyledClippedBox = styled(ClippedBox)`\n  padding: 0;\n  margin: 0;\n  > *:last-child {\n    padding-bottom: ${space(3)};\n  }\n`;\n\nconst PanelHeaderLink = styled(Link)`\n  color: ${p => p.theme.subText};\n`;\n\nconst Title = styled('div')<{disabled: boolean}>`\n  flex: 1;\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n  margin-right: ${space(1)};\n`;\n\nconst Controls = styled('div')`\n  display: grid;\n  align-items: center;\n  gap: ${space(1)};\n  grid-auto-flow: column;\n`;\n\nconst StyledPanelBody = styled(PanelBody)<{disabled: boolean}>`\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n`;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel} from 'sentry/components/panels';\nimport {IconAdd, IconFlag} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\nimport KeyRow from './keyRow';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{projectId: string}, {}>;\n\ntype State = {\n  keyList: ProjectKey[];\n} & AsyncView['state'];\n\nclass ProjectKeys extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Client Keys'), projectId, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n    return [['keyList', `/projects/${organization.slug}/${projectId}/keys/`]];\n  }\n\n  /**\n   * Optimistically remove key\n   */\n  handleRemoveKey = async (data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Revoking key\\u2026'));\n\n    this.setState(state => ({\n      keyList: state.keyList.filter(key => key.id !== data.id),\n    }));\n\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/keys/${data.id}/`,\n        {\n          method: 'DELETE',\n        }\n      );\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      this.setState({\n        keyList: oldKeyList,\n      });\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  };\n\n  handleToggleKey = async (isActive: boolean, data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    this.setState(state => {\n      const keyList = state.keyList.map(key => {\n        if (key.id === data.id) {\n          return {\n            ...key,\n            isActive: !data.isActive,\n          };\n        }\n\n        return key;\n      });\n      return {keyList};\n    });\n\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/keys/${data.id}/`,\n        {\n          method: 'PUT',\n          data: {isActive},\n        }\n      );\n      addSuccessMessage(isActive ? t('Enabled key') : t('Disabled key'));\n    } catch (_err) {\n      addErrorMessage(isActive ? t('Error enabling key') : t('Error disabling key'));\n      this.setState({keyList: oldKeyList});\n    }\n  };\n\n  handleCreateKey = async () => {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    try {\n      const data: ProjectKey = await this.api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/keys/`,\n        {\n          method: 'POST',\n        }\n      );\n\n      this.setState(state => ({\n        keyList: [...state.keyList, data],\n      }));\n      addSuccessMessage(t('Created a new key.'));\n    } catch (_err) {\n      addErrorMessage(t('Unable to create new key. Please try again.'));\n    }\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <EmptyMessage\n          icon={<IconFlag size=\"xl\" />}\n          description={t('There are no keys active for this project.')}\n        />\n      </Panel>\n    );\n  }\n\n  renderResults() {\n    const {location, organization, routes, params} = this.props;\n    const {projectId} = params;\n    const access = new Set(organization.access);\n\n    return (\n      <Fragment>\n        {this.state.keyList.map(key => (\n          <KeyRow\n            access={access}\n            key={key.id}\n            orgId={organization.slug}\n            projectId={`${projectId}`}\n            data={key}\n            onToggle={this.handleToggleKey}\n            onRemove={this.handleRemoveKey}\n            routes={routes}\n            location={location}\n            params={params}\n          />\n        ))}\n        <Pagination pageLinks={this.state.keyListPageLinks} />\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    const isEmpty = !this.state.keyList.length;\n\n    return (\n      <div data-test-id=\"project-keys\">\n        <SettingsPageHeader\n          title={t('Client Keys')}\n          action={\n            this.props.organization.access.includes('project:write') ? (\n              <Button\n                onClick={this.handleCreateKey}\n                size=\"sm\"\n                priority=\"primary\"\n                icon={<IconAdd size=\"xs\" isCircled />}\n              >\n                {t('Generate New Key')}\n              </Button>\n            ) : null\n          }\n        />\n        <TextBlock>\n          {tct(\n            `To send data to Sentry you will need to configure an SDK with a client key\n          (usually referred to as the [code:SENTRY_DSN] value). For more\n          information on integrating Sentry with your application take a look at our\n          [link:documentation].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platform-redirect/?next=/configuration/options/\" />\n              ),\n              code: <code />,\n            }\n          )}\n        </TextBlock>\n\n        {isEmpty ? this.renderEmpty() : this.renderResults()}\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ProjectKeys);\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  data: ProjectKey;\n  projectId: string;\n  showDsn?: boolean;\n  showDsnPublic?: boolean;\n  showMinidump?: boolean;\n  showProjectId?: boolean;\n  showPublicKey?: boolean;\n  showSecretKey?: boolean;\n  showSecurityEndpoint?: boolean;\n  showUnreal?: boolean;\n};\n\nfunction ProjectKeyCredentials({\n  data,\n  projectId,\n  showDsn = true,\n  showDsnPublic = true,\n  showMinidump = true,\n  showProjectId = false,\n  showPublicKey = false,\n  showSecretKey = false,\n  showSecurityEndpoint = true,\n  showUnreal = true,\n}: Props) {\n  const [showDeprecatedDsn, setShowDeprecatedDsn] = useState(false);\n\n  return (\n    <Fragment>\n      {showDsnPublic && (\n        <FieldGroup\n          label={t('DSN')}\n          inline={false}\n          flexibleControlStateSize\n          help={tct('The DSN tells the SDK where to send the events to. [link]', {\n            link: showDsn ? (\n              <Link to=\"\" onClick={() => setShowDeprecatedDsn(curr => !curr)}>\n                {showDeprecatedDsn ? t('Hide deprecated DSN') : t('Show deprecated DSN')}\n              </Link>\n            ) : null,\n          })}\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.public,\n              fixed: '__DSN__',\n            })}\n          </TextCopyInput>\n          {showDeprecatedDsn && (\n            <StyledField\n              label={null}\n              help={t(\n                'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n              )}\n              inline={false}\n              flexibleControlStateSize\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: data.dsn.secret,\n                  fixed: '__DSN_DEPRECATED__',\n                })}\n              </TextCopyInput>\n            </StyledField>\n          )}\n        </FieldGroup>\n      )}\n\n      {/* this edge case should imho not happen, but just to be sure */}\n      {!showDsnPublic && showDsn && (\n        <FieldGroup\n          label={t('DSN (Deprecated)')}\n          help={t(\n            'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.secret,\n              fixed: '__DSN_DEPRECATED__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showSecurityEndpoint && (\n        <FieldGroup\n          label={t('Security Header Endpoint')}\n          help={t(\n            'Use your security header endpoint for features like CSP and Expect-CT reports.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.security,\n              fixed: '__SECURITY_HEADER_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showMinidump && (\n        <FieldGroup\n          label={t('Minidump Endpoint')}\n          help={tct(\n            'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/native/guides/minidumps/\">\n                  minidump crash reports\n                </ExternalLink>\n              ),\n            }\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.minidump,\n              fixed: '__MINIDUMP_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showUnreal && (\n        <FieldGroup\n          label={t('Unreal Engine 4 Endpoint')}\n          help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.unreal || '',\n              fixed: '__UNREAL_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showPublicKey && (\n        <FieldGroup label={t('Public Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.public,\n              fixed: '__PUBLICKEY__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showSecretKey && (\n        <FieldGroup label={t('Secret Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.secret,\n              fixed: '__SECRETKEY__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showProjectId && (\n        <FieldGroup label={t('Project ID')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: projectId,\n              fixed: '__PROJECTID__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n    </Fragment>\n  );\n}\n\nconst StyledField = styled(FieldGroup)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n"],"names":["routeName","orgSlug","projectSlug","arguments","length","undefined","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","KeyRow","_ref","data","onRemove","onToggle","access","routes","location","params","editUrl","recreateRoute","id","controlActive","has","_jsxs","Panel","PanelHeader","hasButtons","Title","disabled","isActive","PanelHeaderLink","to","label","t","Controls","Button","size","Confirm","onConfirm","handleDisable","handleEnable","confirmText","message","priority","icon","IconDelete","StyledClippedBox","clipHeight","defaultClipped","btnText","StyledPanelBody","ProjectKeyCredentials","projectId","_styled","ClippedBox","target","space","Link","p","theme","subText","PanelBody","ProjectKeys","constructor","_defineProperty","async","oldKeyList","state","keyList","addLoadingMessage","setState","filter","key","organization","props","api","requestPromise","slug","method","addSuccessMessage","_err","addErrorMessage","map","routeTitleGen","getEndpoints","renderEmpty","EmptyMessage","IconFlag","description","renderResults","Set","Fragment","orgId","handleToggleKey","handleRemoveKey","Pagination","pageLinks","keyListPageLinks","renderBody","isEmpty","SettingsPageHeader","action","includes","onClick","handleCreateKey","IconAdd","isCircled","TextBlock","tct","link","ExternalLink","href","code","withOrganization","showDsn","showDsnPublic","showMinidump","showProjectId","showPublicKey","showSecretKey","showSecurityEndpoint","showUnreal","showDeprecatedDsn","setShowDeprecatedDsn","useState","FieldGroup","inline","flexibleControlStateSize","help","curr","TextCopyInput","getDynamicText","value","dsn","public","fixed","StyledField","secret","security","minidump","unreal"],"sourceRoot":""}