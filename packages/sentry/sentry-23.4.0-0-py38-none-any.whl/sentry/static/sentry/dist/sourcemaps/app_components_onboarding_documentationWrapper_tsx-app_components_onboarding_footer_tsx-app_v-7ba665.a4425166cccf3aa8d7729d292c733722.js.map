{"version":3,"file":"chunks/app_components_onboarding_documentationWrapper_tsx-app_components_onboarding_footer_tsx-app_v-7ba665.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/onboarding/documentationWrapper.tsx","webpack:///./app/components/onboarding/footer.tsx","webpack:///./app/utils/sessionStorage.tsx","webpack:///./app/utils/useSessionStorage.tsx","webpack:///./app/components/onboarding/onboardingContext.tsx","webpack:///./app/views/onboarding/components/genericFooter.tsx","webpack:///./app/views/onboarding/components/integrations/addInstallationInstructions.tsx","webpack:///./app/views/onboarding/components/integrations/postInstallCodeSnippet.tsx","webpack:///./app/views/onboarding/createSampleEventButton.tsx","webpack:///./app/views/settings/organizationIntegrations/addIntegration.tsx","webpack:///./app/views/settings/organizationIntegrations/addIntegrationButton.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Alert, alertStyles} from 'sentry/components/alert';\nimport {space} from 'sentry/styles/space';\n\ntype AlertType = React.ComponentProps<typeof Alert>['type'];\n\nconst getAlertSelector = (type: AlertType) =>\n  type === 'muted' ? null : `.alert[level=\"${type}\"], .alert-${type}`;\n\nexport const DocumentationWrapper = styled('div')`\n  /* Size of the new footer + 16px */\n  padding-bottom: calc(72px + ${space(2)});\n\n  h2 {\n    font-size: 1.375rem;\n  }\n\n  h3 {\n    font-size: 1.25rem;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  ul,\n  ol,\n  li {\n    margin-top: 0.5em;\n    margin-bottom: 0.5em;\n  }\n\n  blockquote,\n  hr,\n  pre,\n  pre[class*='language-'],\n  div[data-language] {\n    margin-top: 1em;\n    margin-bottom: 1em;\n  }\n\n  blockquote {\n    padding: ${space(1.5)} ${space(2)};\n    ${p => alertStyles({theme: p.theme, type: 'info'})}\n  }\n\n  blockquote > * {\n    margin: 0;\n  }\n\n  .gatsby-highlight:last-child {\n    margin-bottom: 0;\n  }\n\n  hr {\n    border-color: ${p => p.theme.border};\n  }\n\n  code {\n    color: ${p => p.theme.pink400};\n  }\n\n  .alert {\n    border-radius: ${p => p.theme.borderRadius};\n  }\n\n  /**\n   * XXX(epurkhiser): This comes from the doc styles and avoids bottom margin issues in alerts\n  */\n  .content-flush-bottom *:last-child {\n    margin-bottom: 0;\n  }\n\n  ${p =>\n    Object.keys(p.theme.alert).map(\n      type => `\n        ${getAlertSelector(type as AlertType)} {\n          ${alertStyles({theme: p.theme, type: type as AlertType})};\n          display: block;\n        }\n      `\n    )}\n`;\n","import {useCallback, useContext, useEffect, useState} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport isPropValid from '@emotion/is-prop-valid';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {openModal} from 'sentry/actionCreators/modal';\nimport {Button} from 'sentry/components/button';\nimport {OnboardingContext} from 'sentry/components/onboarding/onboardingContext';\nimport {IconCheckmark, IconCircle, IconRefresh} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport PreferencesStore from 'sentry/stores/preferencesStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {space} from 'sentry/styles/space';\nimport {Group, OnboardingStatus, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {useApiQuery} from 'sentry/utils/queryClient';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\nimport GenericFooter from 'sentry/views/onboarding/components/genericFooter';\nimport {usePersistedOnboardingState} from 'sentry/views/onboarding/utils';\n\nexport type OnboardingState = {\n  status: OnboardingStatus;\n  firstIssueId?: string;\n};\n\nconst DEFAULT_POLL_INTERVAL = 5000;\n\ntype Props = Pick<RouteComponentProps<{}, {}>, 'router' | 'route' | 'location'> & {\n  projectSlug: Project['slug'];\n  newOrg?: boolean;\n  projectId?: Project['id'];\n};\n\nasync function openChangeRouteModal({\n  clientState,\n  nextLocation,\n  router,\n  setClientState,\n}: {\n  clientState: ReturnType<typeof usePersistedOnboardingState>[0];\n  nextLocation: Location;\n  router: RouteComponentProps<{}, {}>['router'];\n  setClientState: ReturnType<typeof usePersistedOnboardingState>[1];\n}) {\n  const mod = await import('sentry/components/onboarding/changeRouteModal');\n\n  const {ChangeRouteModal} = mod;\n\n  openModal(deps => (\n    <ChangeRouteModal\n      {...deps}\n      router={router}\n      nextLocation={nextLocation}\n      clientState={clientState}\n      setClientState={setClientState}\n    />\n  ));\n}\n\nexport function Footer({projectSlug, projectId, router, newOrg}: Props) {\n  const organization = useOrganization();\n  const preferences = useLegacyStore(PreferencesStore);\n  const [firstError, setFirstError] = useState<string | null>(null);\n  const [firstIssue, setFirstIssue] = useState<Group | undefined>(undefined);\n  const [clientState, setClientState] = usePersistedOnboardingState();\n  const {projects} = useProjects();\n  const onboardingContext = useContext(OnboardingContext);\n  const projectData = projectId ? onboardingContext.data[projectId] : undefined;\n  const selectedProject = projects.find(project => project.slug === projectSlug);\n\n  useApiQuery<Project>([`/projects/${organization.slug}/${projectSlug}/`], {\n    staleTime: 0,\n    refetchInterval: DEFAULT_POLL_INTERVAL,\n    enabled:\n      !!projectSlug && !firstError && projectData?.status === OnboardingStatus.WAITING, // Fetch only if the project is available and we have not yet received an error,\n    onSuccess: data => {\n      setFirstError(data.firstEvent);\n    },\n  });\n\n  // Locate the projects first issue group. The project.firstEvent field will\n  // *not* include sample events, while just looking at the issues list will.\n  // We will wait until the project.firstEvent is set and then locate the\n  // event given that event datetime\n  useApiQuery<Group[]>([`/projects/${organization.slug}/${projectSlug}/issues/`], {\n    staleTime: 0,\n    enabled:\n      !!firstError && !firstIssue && projectData?.status === OnboardingStatus.PROCESSING, // Only fetch if an error event is received and we have not yet located the first issue,\n    onSuccess: data => {\n      setFirstIssue(data.find((issue: Group) => issue.firstSeen === firstError));\n    },\n  });\n\n  useEffect(() => {\n    if (!projectId || !!projectData) {\n      return;\n    }\n\n    onboardingContext.setProjectData({\n      projectId,\n      projectSlug,\n      status: OnboardingStatus.WAITING,\n    });\n  }, [projectData, onboardingContext, projectSlug, projectId]);\n\n  useEffect(() => {\n    if (!projectId) {\n      return;\n    }\n\n    if (!firstError) {\n      return;\n    }\n\n    if (projectData?.status !== OnboardingStatus.WAITING) {\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('onboarding.first_error_received', {\n      organization,\n      new_organization: !!newOrg,\n      project_id: projectId,\n      platform: selectedProject?.platform ?? 'other',\n    });\n\n    onboardingContext.setProjectData({\n      projectId,\n      projectSlug,\n      status: OnboardingStatus.PROCESSING,\n    });\n\n    addSuccessMessage(t('First error received'));\n  }, [\n    firstError,\n    newOrg,\n    organization,\n    projectId,\n    projectData,\n    onboardingContext,\n    projectSlug,\n    selectedProject,\n  ]);\n\n  useEffect(() => {\n    if (!projectId) {\n      return;\n    }\n\n    if (!firstIssue) {\n      return;\n    }\n\n    if (projectData?.status !== OnboardingStatus.PROCESSING) {\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('onboarding.first_error_processed', {\n      organization,\n      new_organization: !!newOrg,\n      project_id: projectId,\n      platform: selectedProject?.platform ?? 'other',\n    });\n\n    onboardingContext.setProjectData({\n      projectId,\n      projectSlug,\n      status: OnboardingStatus.PROCESSED,\n      firstIssueId: firstIssue.id,\n    });\n\n    addSuccessMessage(t('First error processed'));\n  }, [\n    firstIssue,\n    newOrg,\n    organization,\n    projectData,\n    projectId,\n    onboardingContext,\n    projectSlug,\n    selectedProject,\n  ]);\n\n  // The explore button is only showed if Sentry has not yet received any errors OR the issue is still being processed\n  const handleExploreSentry = useCallback(() => {\n    if (!projectId) {\n      return;\n    }\n\n    if (onboardingContext.data[projectId].status === OnboardingStatus.WAITING) {\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('onboarding.explore_sentry_button_clicked', {\n      organization,\n      project_id: projectId,\n      platform: selectedProject?.platform ?? 'other',\n    });\n\n    if (clientState) {\n      setClientState({\n        ...clientState,\n        state: 'finished',\n      });\n    }\n\n    router.push({\n      ...router.location,\n      pathname: `/organizations/${organization.slug}/issues/?referrer=onboarding-first-event-footer`,\n    });\n  }, [\n    organization,\n    projectId,\n    onboardingContext,\n    clientState,\n    router,\n    setClientState,\n    selectedProject,\n  ]);\n\n  const handleSkipOnboarding = useCallback(() => {\n    if (!projectId) {\n      return;\n    }\n\n    if (onboardingContext.data[projectId].status !== OnboardingStatus.WAITING) {\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('growth.onboarding_clicked_skip', {\n      organization,\n      source: 'targeted_onboarding_first_event_footer',\n    });\n\n    const selectedProjectId = selectedProject?.id;\n\n    let pathname = `/organizations/${organization.slug}/issues/?`;\n    if (selectedProjectId) {\n      pathname += `project=${selectedProjectId}&`;\n    }\n\n    openChangeRouteModal({\n      router,\n      nextLocation: {\n        ...router.location,\n        pathname: (pathname += `referrer=onboarding-first-event-footer-skip`),\n      },\n      setClientState,\n      clientState,\n    });\n  }, [\n    router,\n    organization,\n    setClientState,\n    clientState,\n    selectedProject,\n    onboardingContext,\n    projectId,\n  ]);\n\n  const handleViewError = useCallback(() => {\n    if (!projectId) {\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('onboarding.view_error_button_clicked', {\n      organization,\n      new_organization: !!newOrg,\n      project_id: projectId,\n      platform: selectedProject?.platform ?? 'other',\n    });\n\n    if (clientState) {\n      setClientState({\n        ...clientState,\n        state: 'finished',\n      });\n    }\n\n    router.push({\n      ...router.location,\n      pathname: `/organizations/${organization.slug}/issues/${onboardingContext.data[projectId].firstIssueId}/?referrer=onboarding-first-event-footer`,\n    });\n  }, [\n    organization,\n    newOrg,\n    router,\n    clientState,\n    setClientState,\n    onboardingContext,\n    projectId,\n    selectedProject,\n  ]);\n\n  return (\n    <Wrapper newOrg={!!newOrg} sidebarCollapsed={!!preferences.collapsed}>\n      <Column>\n        {projectData?.status === OnboardingStatus.WAITING && newOrg && (\n          <Button onClick={handleSkipOnboarding} priority=\"link\">\n            {t('Skip Onboarding')}\n          </Button>\n        )}\n      </Column>\n      <StatusesColumn>\n        {projectData?.status === OnboardingStatus.WAITING ? (\n          <WaitingForErrorStatus>\n            <IconCircle size=\"sm\" />\n            {t('Waiting for error')}\n          </WaitingForErrorStatus>\n        ) : projectData?.status === OnboardingStatus.PROCESSED ? (\n          <ErrorProcessedStatus>\n            <IconCheckmark isCircled size=\"sm\" color=\"green300\" />\n            {t('Error Processed!')}\n          </ErrorProcessedStatus>\n        ) : (\n          <ErrorProcessingStatus>\n            <RefreshIcon size=\"sm\" />\n            {t('Processing error')}\n          </ErrorProcessingStatus>\n        )}\n      </StatusesColumn>\n      <ActionsColumn>\n        {projectData?.status === OnboardingStatus.PROCESSED ? (\n          <Button priority=\"primary\" onClick={handleViewError}>\n            {t('View Error')}\n          </Button>\n        ) : (\n          <Button\n            priority=\"primary\"\n            disabled={projectData?.status === OnboardingStatus.WAITING}\n            onClick={handleExploreSentry}\n            title={\n              projectData?.status === OnboardingStatus.WAITING\n                ? t('Waiting for error')\n                : undefined\n            }\n          >\n            {t('Explore Sentry')}\n          </Button>\n        )}\n      </ActionsColumn>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled(GenericFooter, {\n  shouldForwardProp: prop => isPropValid(prop),\n})<{\n  newOrg: boolean;\n  sidebarCollapsed: boolean;\n}>`\n  display: none;\n  display: flex;\n  flex-direction: row;\n  padding: ${space(2)} ${space(4)};\n  justify-content: space-between;\n  align-items: center;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    align-items: center;\n    gap: ${space(3)};\n  }\n  ${p =>\n    !p.newOrg &&\n    css`\n      @media (min-width: ${p.theme.breakpoints.medium}) {\n        width: calc(\n          100% -\n            ${p.theme.sidebar[p.sidebarCollapsed ? 'collapsedWidth' : 'expandedWidth']}\n        );\n        right: 0;\n        left: auto;\n      }\n    `}\n`;\n\nconst Column = styled('div')`\n  display: flex;\n`;\n\nconst StatusesColumn = styled('div')`\n  display: flex;\n  justify-content: center;\n`;\n\nconst ActionsColumn = styled('div')`\n  display: none;\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nconst WaitingForErrorStatus = styled('div')`\n  display: grid;\n  grid-template-columns: max-content max-content;\n  gap: ${space(0.75)};\n  align-items: center;\n  padding: ${space(1)} ${space(1.5)};\n  border: 1.5px solid ${p => p.theme.gray500};\n  border-radius: 76px;\n  color: ${p => p.theme.gray500};\n  line-height: ${p => p.theme.fontSizeLarge};\n`;\n\nconst ErrorProcessingStatus = styled(WaitingForErrorStatus)`\n  border-color: ${p => p.theme.gray200};\n  color: ${p => p.theme.gray300};\n  position: relative;\n\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst ErrorProcessedStatus = styled(WaitingForErrorStatus)`\n  border-radius: 44px;\n  background: ${p => p.theme.inverted.background};\n  color: ${p => p.theme.inverted.textColor};\n`;\n\nconst RefreshIcon = styled(IconRefresh)`\n  animation: rotate 1s linear infinite;\n`;\n","import createLocalStorage from './createStorage';\n\nconst Storage = createLocalStorage(() => window.sessionStorage);\n\nexport default Storage;\n","import {useCallback, useEffect, useState} from 'react';\n\nimport sessionStorageWrapper from 'sentry/utils/sessionStorage';\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction readStorageValue<T>(key: string, initialValue: T) {\n  const value = sessionStorage.getItem(key);\n\n  // We check for 'undefined' because the value may have\n  // previously been serialized as 'undefined'. This should no longer\n  // happen, but want to handle it gracefully.\n  if (value === null || value === 'undefined') {\n    return initialValue;\n  }\n\n  // Try parse storage value.\n  try {\n    return JSON.parse(value);\n  } catch {\n    // If parsing fails, return initial value.\n    return initialValue;\n  }\n}\n\nexport function useSessionStorage<T>(\n  key: string,\n  initialValue: T\n): [T, (value: T) => void, () => void] {\n  const [state, setState] = useState<T>(() => readStorageValue(key, initialValue));\n\n  useEffect(() => {\n    setState(readStorageValue(key, initialValue));\n    // We want to re-initialized the storage value only when the key changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [key]);\n\n  const wrappedSetState = useCallback(\n    (value: T) => {\n      setState(value);\n\n      try {\n        sessionStorageWrapper.setItem(key, JSON.stringify(value));\n      } catch {\n        // Best effort and just update the in-memory value.\n      }\n    },\n    [key]\n  );\n\n  const removeItem = useCallback(() => {\n    setState(initialValue);\n    sessionStorageWrapper.removeItem(key);\n  }, [key, initialValue]);\n\n  if (!isBrowser) {\n    return [initialValue, () => {}, () => {}];\n  }\n\n  return [state, wrappedSetState, removeItem];\n}\n","import {createContext, useCallback} from 'react';\n\nimport {OnboardingStatus} from 'sentry/types';\nimport {useSessionStorage} from 'sentry/utils/useSessionStorage';\n\ntype Data = Record<\n  string,\n  {\n    slug: string;\n    status: OnboardingStatus;\n    firstIssueId?: string;\n  }\n>;\n\nexport type OnboardingContextProps = {\n  data: Data;\n  setProjectData: (props: {\n    projectId: string;\n    projectSlug: string;\n    status: OnboardingStatus;\n    firstIssueId?: string;\n  }) => void;\n};\n\nexport const OnboardingContext = createContext<OnboardingContextProps>({\n  setProjectData: () => {},\n  data: {},\n});\n\ntype ProviderProps = {\n  children: React.ReactNode;\n};\n\nexport function OnboardingContextProvider({children}: ProviderProps) {\n  const [sessionStorage, setSessionStorage] = useSessionStorage<Data>('onboarding', {});\n\n  const setProjectData = useCallback(\n    ({\n      projectId,\n      projectSlug,\n      status,\n      firstIssueId,\n    }: {\n      projectId: string;\n      projectSlug: string;\n      status: OnboardingStatus;\n      firstIssueId?: string;\n    }) => {\n      setSessionStorage({\n        ...sessionStorage,\n        [projectId]: {\n          status,\n          firstIssueId,\n          slug: projectSlug,\n        },\n      });\n    },\n    [setSessionStorage, sessionStorage]\n  );\n\n  return (\n    <OnboardingContext.Provider value={{data: sessionStorage, setProjectData}}>\n      {children}\n    </OnboardingContext.Provider>\n  );\n}\n","import styled from '@emotion/styled';\nimport {motion} from 'framer-motion';\n\nimport testableTransition from 'sentry/utils/testableTransition';\n\nconst GenericFooter = styled(motion.div)`\n  width: 100%;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  height: 72px;\n  z-index: 100;\n  display: flex;\n  background-color: ${p => p.theme.background};\n  justify-content: space-between;\n  box-shadow: 0px -4px 24px rgba(43, 34, 51, 0.08);\n`;\n\nGenericFooter.defaultProps = {\n  initial: 'initial',\n  animate: 'animate',\n  exit: 'exit',\n  variants: {animate: {}},\n  transition: testableTransition({\n    staggerChildren: 0.2,\n  }),\n};\n\nexport default GenericFooter;\n","import {Fragment} from 'react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\n\n// TODO: Make dyanmic for other platforms/integrations\nexport default function AddInstallationInstructions() {\n  return (\n    <Fragment>\n      <p>\n        {tct(\n          'The automated AWS Lambda setup will instrument your Lambda functions with Sentry error and performance monitoring without any code changes. We use CloudFormation Stack ([learnMore]) to create the Sentry role which gives us access to your AWS account.',\n          {\n            learnMore: (\n              <ExternalLink href=\"https://aws.amazon.com/cloudformation/\">\n                {t('Learn more about CloudFormation')}\n              </ExternalLink>\n            ),\n          }\n        )}\n      </p>\n      <p>\n        {tct(\n          'Just press the [addInstallation] button below and complete the steps in the popup that opens.',\n          {addInstallation: <strong>{t('Add Installation')}</strong>}\n        )}\n      </p>\n      <p>\n        {tct(\n          'If you don’t want to add CloudFormation stack to your AWS environment, press the [manualSetup] button instead.',\n          {manualSetup: <strong>{t('Manual Setup')}</strong>}\n        )}\n      </p>\n    </Fragment>\n  );\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {PlatformKey} from 'sentry/data/platformCategories';\nimport {t} from 'sentry/locale';\nimport {IntegrationProvider} from 'sentry/types';\n\ntype Props = {\n  provider: IntegrationProvider;\n  isOnboarding?: boolean;\n  platform?: PlatformKey;\n};\n\nexport default function PostInstallCodeSnippet({\n  provider,\n  platform,\n  isOnboarding,\n}: Props) {\n  // currently supporting both Python and Node\n  const token_punctuation: string = platform === 'python-awslambda' ? '()' : '();';\n  return (\n    <div>\n      <p>\n        {t(\n          \"Congrats, you just installed the %s integration! Now that it's is installed, the next time you trigger an error it will go to your Sentry.\",\n          provider.name\n        )}\n      </p>\n      <p>\n        {t(\n          'This snippet includes an intentional error, so you can test that everything is working as soon as you set it up:'\n        )}\n      </p>\n      <div>\n        <CodeWrapper>\n          <code>\n            <TokenFunction>myUndefinedFunction</TokenFunction>\n            <TokenPunctuation>{token_punctuation}</TokenPunctuation>)\n          </code>\n        </CodeWrapper>\n      </div>\n      {isOnboarding && (\n        <Fragment>\n          <p>\n            {t(\n              \"If you're new to Sentry, use the email alert to access your account and complete a product tour.\"\n            )}\n          </p>\n          <p>\n            {t(\n              \"If you're an existing user and have disabled alerts, you won't receive this email.\"\n            )}\n          </p>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nconst CodeWrapper = styled('pre')`\n  padding: 1em;\n  overflow: auto;\n  background: #251f3d;\n  font-size: 15px;\n`;\n\nconst TokenFunction = styled('span')`\n  color: #7cc5c4;\n`;\n\nconst TokenPunctuation = styled('span')`\n  color: #b3acc1;\n`;\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport * as Sentry from '@sentry/react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {Button, ButtonProps} from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport withApi from 'sentry/utils/withApi';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype CreateSampleEventButtonProps = {\n  api: Client;\n  organization: Organization;\n  source: string;\n  onCreateSampleGroup?: () => void;\n  project?: Project;\n} & ButtonProps;\n\ntype State = {\n  creating: boolean;\n};\n\nconst EVENT_POLL_RETRIES = 30;\nconst EVENT_POLL_INTERVAL = 1000;\n\nasync function latestEventAvailable(\n  api: Client,\n  groupID: string\n): Promise<{eventCreated: boolean; retries: number}> {\n  let retries = 0;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (retries > EVENT_POLL_RETRIES) {\n      return {eventCreated: false, retries: retries - 1};\n    }\n\n    await new Promise(resolve => window.setTimeout(resolve, EVENT_POLL_INTERVAL));\n\n    try {\n      await api.requestPromise(`/issues/${groupID}/events/latest/`);\n      return {eventCreated: true, retries};\n    } catch {\n      ++retries;\n    }\n  }\n}\n\nclass CreateSampleEventButton extends Component<CreateSampleEventButtonProps, State> {\n  state: State = {\n    creating: false,\n  };\n\n  componentDidMount() {\n    const {organization, project, source} = this.props;\n\n    if (!project) {\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('sample_event.button_viewed', {\n      organization,\n      project_id: project.id,\n      source,\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  private _isMounted = true;\n\n  recordAnalytics({eventCreated, retries, duration}) {\n    const {organization, project, source} = this.props;\n\n    if (!project) {\n      return;\n    }\n\n    const eventKey = `sample_event.${eventCreated ? 'created' : 'failed'}` as const;\n\n    trackAdvancedAnalyticsEvent(eventKey, {\n      organization,\n      project_id: project.id,\n      platform: project.platform || '',\n      interval: EVENT_POLL_INTERVAL,\n      retries,\n      duration,\n      source,\n    });\n  }\n\n  createSampleGroup = async () => {\n    // TODO(dena): swap out for action creator\n    const {api, organization, project, onCreateSampleGroup} = this.props;\n    let eventData;\n\n    if (!project) {\n      return;\n    }\n\n    if (onCreateSampleGroup) {\n      onCreateSampleGroup();\n    } else {\n      trackAdvancedAnalyticsEvent('growth.onboarding_view_sample_event', {\n        platform: project.platform,\n        organization,\n      });\n    }\n\n    addLoadingMessage(t('Processing sample event...'), {\n      duration: EVENT_POLL_RETRIES * EVENT_POLL_INTERVAL,\n    });\n    this.setState({creating: true});\n\n    try {\n      const url = `/projects/${organization.slug}/${project.slug}/create-sample/`;\n      eventData = await api.requestPromise(url, {method: 'POST'});\n    } catch (error) {\n      Sentry.withScope(scope => {\n        scope.setExtra('error', error);\n        Sentry.captureException(new Error('Failed to create sample event'));\n      });\n      this.setState({creating: false});\n      clearIndicators();\n      addErrorMessage(t('Failed to create a new sample event'));\n      return;\n    }\n\n    // Wait for the event to be fully processed and available on the group\n    // before redirecting.\n    const t0 = performance.now();\n    const {eventCreated, retries} = await latestEventAvailable(api, eventData.groupID);\n\n    // Navigated away before event was created - skip analytics and error messages\n    // latestEventAvailable will succeed even if the request was cancelled\n    if (!this._isMounted) {\n      return;\n    }\n\n    const t1 = performance.now();\n\n    clearIndicators();\n    this.setState({creating: false});\n\n    const duration = Math.ceil(t1 - t0);\n    this.recordAnalytics({eventCreated, retries, duration});\n\n    if (!eventCreated) {\n      addErrorMessage(t('Failed to load sample event'));\n\n      Sentry.withScope(scope => {\n        scope.setTag('groupID', eventData.groupID);\n        scope.setTag('platform', project.platform || '');\n        scope.setTag('interval', EVENT_POLL_INTERVAL.toString());\n        scope.setTag('retries', retries.toString());\n        scope.setTag('duration', duration.toString());\n\n        scope.setLevel('warning');\n        Sentry.captureMessage('Failed to load sample event');\n      });\n      return;\n    }\n\n    browserHistory.push(\n      normalizeUrl(\n        `/organizations/${organization.slug}/issues/${eventData.groupID}/?project=${project.id}&referrer=sample-error`\n      )\n    );\n  };\n\n  render() {\n    const {\n      api: _api,\n      organization: _organization,\n      project: _project,\n      source: _source,\n      ...props\n    } = this.props;\n\n    const {creating} = this.state;\n\n    return (\n      <Button\n        {...props}\n        disabled={props.disabled || creating}\n        onClick={this.createSampleGroup}\n      />\n    );\n  }\n}\n\nexport default withApi(withOrganization(CreateSampleEventButton));\n","import {Component} from 'react';\nimport * as qs from 'query-string';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {NODE_ENV} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {IntegrationProvider, IntegrationWithConfig, Organization} from 'sentry/types';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\n\ntype Props = {\n  children: (\n    openDialog: (urlParams?: {[key: string]: string}) => void\n  ) => React.ReactNode;\n  onInstall: (data: IntegrationWithConfig) => void;\n  organization: Organization;\n  provider: IntegrationProvider;\n  account?: string; // for analytics\n  analyticsParams?: {\n    already_installed: boolean;\n    view:\n      | 'integrations_directory_integration_detail'\n      | 'integrations_directory'\n      | 'onboarding'\n      | 'project_creation';\n  };\n  modalParams?: {[key: string]: string};\n};\n\nexport default class AddIntegration extends Component<Props> {\n  componentDidMount() {\n    window.addEventListener('message', this.didReceiveMessage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('message', this.didReceiveMessage);\n    this.dialog?.close();\n  }\n\n  dialog: Window | null = null;\n\n  computeCenteredWindow(width: number, height: number) {\n    // Taken from: https://stackoverflow.com/questions/4068373/center-a-popup-window-on-screen\n    const screenLeft =\n      window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n\n    const screenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n    const innerWidth = window.innerWidth\n      ? window.innerWidth\n      : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : screen.width;\n\n    const innerHeight = window.innerHeight\n      ? window.innerHeight\n      : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : screen.height;\n\n    const left = innerWidth / 2 - width / 2 + screenLeft;\n    const top = innerHeight / 2 - height / 2 + screenTop;\n\n    return {left, top};\n  }\n\n  openDialog = (urlParams?: {[key: string]: string}) => {\n    const {account, analyticsParams, modalParams, organization, provider} = this.props;\n\n    trackIntegrationAnalytics('integrations.installation_start', {\n      integration: provider.key,\n      integration_type: 'first_party',\n      organization,\n      ...analyticsParams,\n    });\n    const name = 'sentryAddIntegration';\n    const {url, width, height} = provider.setupDialog;\n    const {left, top} = this.computeCenteredWindow(width, height);\n\n    let query: {[key: string]: string} = {...urlParams};\n\n    if (account) {\n      query.account = account;\n    }\n\n    if (modalParams) {\n      query = {...query, ...modalParams};\n    }\n\n    const installUrl = `${url}?${qs.stringify(query)}`;\n    const opts = `scrollbars=yes,width=${width},height=${height},top=${top},left=${left}`;\n\n    this.dialog = window.open(installUrl, name, opts);\n    this.dialog && this.dialog.focus();\n  };\n\n  didReceiveMessage = (message: MessageEvent) => {\n    const {analyticsParams, onInstall, organization, provider} = this.props;\n\n    // TODO: Would be better if we could mock document.location.origin to '' in\n    // the tests. jsdom's window.postMessage doesn't set an origin\n    if (message.origin !== document.location.origin && NODE_ENV === 'production') {\n      return;\n    }\n\n    if (message.source !== this.dialog) {\n      return;\n    }\n\n    const {success, data} = message.data;\n    this.dialog = null;\n\n    if (!success) {\n      addErrorMessage(data.error);\n      return;\n    }\n\n    if (!data) {\n      return;\n    }\n    trackIntegrationAnalytics('integrations.installation_complete', {\n      integration: provider.key,\n      integration_type: 'first_party',\n      organization,\n      ...analyticsParams,\n    });\n    addSuccessMessage(t('%s added', provider.name));\n    onInstall(data);\n  };\n\n  render() {\n    const {children} = this.props;\n\n    return children(this.openDialog);\n  }\n}\n","import {Button, ButtonProps} from 'sentry/components/button';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport {IntegrationWithConfig} from 'sentry/types';\n\nimport AddIntegration from './addIntegration';\n\ninterface AddIntegrationButtonProps\n  extends Omit<ButtonProps, 'children' | 'analyticsParams'>,\n    Pick<\n      React.ComponentProps<typeof AddIntegration>,\n      'provider' | 'organization' | 'analyticsParams' | 'modalParams'\n    > {\n  onAddIntegration: (data: IntegrationWithConfig) => void;\n  buttonText?: string;\n  reinstall?: boolean;\n}\n\nexport function AddIntegrationButton({\n  provider,\n  buttonText,\n  onAddIntegration,\n  organization,\n  reinstall,\n  analyticsParams,\n  modalParams,\n  ...buttonProps\n}: AddIntegrationButtonProps) {\n  const label =\n    buttonText ?? (reinstall ? t('Enable') : t('Add %s', provider.metadata.noun));\n\n  return (\n    <Tooltip\n      disabled={provider.canAdd}\n      title={`Integration cannot be added on Sentry. Enable this integration via the ${provider.name} instance.`}\n    >\n      <AddIntegration\n        provider={provider}\n        onInstall={onAddIntegration}\n        organization={organization}\n        analyticsParams={analyticsParams}\n        modalParams={modalParams}\n      >\n        {onClick => (\n          <Button\n            disabled={!provider.canAdd}\n            {...buttonProps}\n            onClick={() => onClick()}\n            aria-label={t('Add integration')}\n          >\n            {label}\n          </Button>\n        )}\n      </AddIntegration>\n    </Tooltip>\n  );\n}\n"],"names":["DocumentationWrapper","_styled","target","space","p","alertStyles","theme","type","border","pink400","borderRadius","Object","keys","alert","map","getAlertSelector","DEFAULT_POLL_INTERVAL","Footer","_ref2","projectSlug","projectId","router","newOrg","organization","useOrganization","preferences","useLegacyStore","PreferencesStore","firstError","setFirstError","useState","firstIssue","setFirstIssue","undefined","clientState","setClientState","usePersistedOnboardingState","projects","useProjects","onboardingContext","useContext","OnboardingContext","projectData","data","selectedProject","find","project","slug","useApiQuery","staleTime","refetchInterval","enabled","status","OnboardingStatus","onSuccess","firstEvent","issue","firstSeen","useEffect","setProjectData","trackAdvancedAnalyticsEvent","new_organization","project_id","platform","addSuccessMessage","t","firstIssueId","id","handleExploreSentry","useCallback","state","push","location","pathname","handleSkipOnboarding","source","selectedProjectId","async","_ref","nextLocation","mod","ChangeRouteModal","openModal","deps","_jsx","openChangeRouteModal","handleViewError","_jsxs","Wrapper","sidebarCollapsed","collapsed","children","Column","Button","onClick","priority","StatusesColumn","WaitingForErrorStatus","IconCircle","size","ErrorProcessedStatus","IconCheckmark","isCircled","color","ErrorProcessingStatus","RefreshIcon","ActionsColumn","disabled","title","displayName","GenericFooter","shouldForwardProp","prop","isPropValid","breakpoints","small","css","medium","sidebar","name","styles","gray500","fontSizeLarge","gray200","gray300","inverted","background","textColor","IconRefresh","createLocalStorage","window","sessionStorage","isBrowser","readStorageValue","key","initialValue","value","getItem","JSON","parse","createContext","OnboardingContextProvider","setSessionStorage","setState","wrappedSetState","sessionStorageWrapper","stringify","removeItem","useSessionStorage","Provider","motion","defaultProps","initial","animate","exit","variants","transition","testableTransition","staggerChildren","AddInstallationInstructions","Fragment","tct","learnMore","ExternalLink","href","addInstallation","manualSetup","PostInstallCodeSnippet","provider","isOnboarding","token_punctuation","CodeWrapper","TokenFunction","TokenPunctuation","EVENT_POLL_INTERVAL","CreateSampleEventButton","Component","constructor","arguments","_defineProperty","creating","api","onCreateSampleGroup","this","props","eventData","addLoadingMessage","duration","EVENT_POLL_RETRIES","url","requestPromise","method","error","Sentry","scope","setExtra","Error","clearIndicators","addErrorMessage","t0","performance","now","eventCreated","retries","groupID","Promise","resolve","setTimeout","latestEventAvailable","_isMounted","t1","Math","ceil","recordAnalytics","setTag","toString","setLevel","browserHistory","normalizeUrl","componentDidMount","componentWillUnmount","eventKey","interval","render","_api","_organization","_project","_source","createSampleGroup","withApi","withOrganization","AddIntegration","urlParams","account","analyticsParams","modalParams","trackIntegrationAnalytics","integration","integration_type","width","height","setupDialog","left","top","computeCenteredWindow","query","installUrl","qs","opts","dialog","open","focus","message","onInstall","origin","document","NODE_ENV","success","addEventListener","didReceiveMessage","removeEventListener","close","screenLeft","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","openDialog","AddIntegrationButton","buttonText","onAddIntegration","reinstall","buttonProps","label","metadata","noun","Tooltip","canAdd"],"sourceRoot":""}