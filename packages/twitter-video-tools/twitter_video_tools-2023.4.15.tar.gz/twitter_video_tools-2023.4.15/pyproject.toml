[build-system]
requires = [ "poetry-core>=1.0.0",]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "twitter_video_tools"
description = "Twitter Video Tools is a multi-processing supported video downloader, supports videos from twitter (or specific user from twitter) && monsnode."
authors = []
license = "MIT"
readme = "README.md"
homepage = "https://github.com/code-yeongyu/twitter_video_tools"
keywords = [ "crawler", "parser", "downloader", "monsnode", "twitter", "youtube_dl",]
classifiers = [ "Environment :: Console", "Operating System :: OS Independent", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Testing :: Unit", "Topic :: Software Development :: Version Control", "Topic :: Internet :: WWW/HTTP :: Browsers", "Typing :: Typed",]
include = [ "LICENSE",]
version = "v2023.04.15"

[tool.mypy]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = true
ignore_missing_imports = true
python_version = 3.9
disable_error_code = [ "no-untyped-call", "no-redef", "no-any-unimported",]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.yapf]
based_on_style = "pep8"
spaces_before_comment = 4
split_before_logical_operator = true
column_limit = 119
allow_split_before_dict_value = false

[tool.pyright]
pythonVersion = "3.9"
stubPath = "./.type_stubs"
venvPath = "./.venv"
pythonPlatform = "All"
typeCheckingMode = "strict"
include = [ "./twitter_video_tools",]
exclude = [ "**/node_modules", "**/__pycache__",]
useLibraryCodeForTypes = true
verboseOutput = false
reportMissingTypeStubs = true
reportUnknownMemberType = false

[tool.poetry.dependencies]
python = "^3.9"
playwright = "^1.27.1"
bs4 = "^0.0.1"
requests = "^2.28.1"
yt-dlp = "^2022.11.11"

[tool.pylint.MASTER]
load-plugins = "pylint_quotes"
persistent = "yes"
suggestion-mode = "yes"
unsafe-load-any-extension = "yes"
variable-rgx = "((([a-z_][a-z0-9_]{2,})|(_[a-z0-9_]*)|(__[a-z][a-z0-9_]+__))$)|([A-Z_][A-Z0-9_]+$)"

[tool.pylint.format]
max-line-length = 119

[tool.pylint."MESSAGES CONTROL"]
extension-pkg-whitelist = "pydantic"
disable = "missing-docstring\n"

[tool.pylint.IMPORTS]
allow-any-import-level = ""
allow-wildcard-with-all = "no"

[tool.pyright.defineConstant]
DEBUG = true

[tool.poetry.dependencies.typer]
extras = [ "all",]
version = "^0.7.0"

[tool.poetry.group.dev.dependencies]
monkeytype = "^22.2.0"
mypy = "^0.982"
yapf = "^0.32.0"
pylint = "^2.15.7"
isort = "^5.10.1"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pylint-quotes = "^0.2.3"
unify = "^0.5"
toml = "^0.10.2"
invoke = "^1.7.3"
types-requests = "^2.28.11"
types-beautifulsoup4 = "^4.11.6"
types-invoke = "^1.7.3"
types-toml = "^0.10.8"
pyright = "^1.1.282"
colorama = "^0.4.6"
