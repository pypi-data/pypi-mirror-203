( Find center of plate in vice, )
(  result in [array  5241 6]    )
( Search Constraints:           )
( start:                        )
(   <-28.0 -13.0 -16.0>         )
( boundary:                     )
(   x= [-<7.0>..-<3.5>]         )
( ..[<3.5>..<7.0>]              )
(   y= [-<4.0>..-<2.0>]         )
( ..[<2.0>..<4.0>]              )
(   z= [<-3.0>..<5.0>]          )
( indent:                       )
(   <1.4 0.8 0.3>               )
( delta:                        )
(   <0.75 0.4>                  )
( GP_SAVED1   :  #100.x  #101.y  #102.z  #103.a  #104.b  #105.c  #106.u  #107.v )
( PROBE_R     :  #556.x  #557.y                                                 )
( MACHINE_POS : #5021.x #5022.y #5023.z                                         )
( SKIP_POS    : #5061.x #5062.y #5063.z                                         )
( G55         : #5241.x #5242.y #5243.z                                         )
( PROBE       : #5061.x #5062.y #5063.z                                         )
( MACHINE     : #5021.x #5022.y #5023.z                                         )
( G53         : #5021.x #5022.y #5023.z                                         )
( WCS         : #5241.x #5242.y #5243.z                                         )
( tlc         :  #100.x  #101.y                                                 )
( brc         :  #102.x  #103.y                                                 )
( cursor      :  #104.x  #105.y                                                 )
( error       :  #106.x  #107.y                                                 )
  T01 M06                     ( setup_probing[defs.Tool.PROBE])
  G65 P9832
  G103 P1
  G04 P1
  G04 P1
  G04 P1
  G55                         ( wcs = var.WCS                 )
  G01 G90 G53 F650. z0.       ( sch..machine[z=0]             )
  G01 G90 G53 F650. x-28. y-13.( sch..machine[xy=sch.above.xy] )
  G01 G90 G53 F650. z-16.     ( sch..machine[z=sch.above.z]   )
( Find top z roughly set [array  5241 6].z. )
  #5241= #5021                ( var.WCS.xyz = var.MACHINE_POS.xyz)
  #5242= #5022
  #5243= #5023
  G01 G90 G31 M79 F50. z-5.   ( sch.fast_probe[z=sch.amin.z]  )
  #5243= #5023                ( var.WCS.z = var.MACHINE_POS.z )
  #3006 = 100                 ( CHECK  G55 z                  )
( Now work.z should be 0 at surface )
( and work.xy roughly middle        )
  G01 G90 F650. z0.3          ( sch.[z=sch.skim_distance]     )
  #104= 0.                    ( var.cursor = Vec[2][0, 0]     )
  #105= 0.
(                                      )
( Quickly move probe to find left edge )
  #106= 5.6667                (     [abs[stop_search - start_search] / sch.delta][di.active_axis] + 1,)
  #104= -3.5                  ( cursor[di.active_axis] = start_search[di.active_axis])
L1000                         ( while its > 0:                )
  IF [#106 LE 0.] GOTO 1002
  G01 G90 F650. x#104 y#105   (     sch.[cursor]              )
  G01 G90 G31 M79 F50. z-0.1  (     sch.fast_probe[z=sch.search_depth])
  IF [#5063 LT -0.075] GOTO 1001(     if var.SKIP_POS.z < sch.search_depth + sch.iota:)
  #104= #104 - 0.75           (     cursor.xy += delta        )
  #106= #106 - 1.             (     its.var -= 1              )
  GOTO 1000
L1002
  #3000 = 100                 ( Search for left failed        )
L1001                         (     error[f"Search for {di.name} failed"])
( back off a bit to the left, then slowly probe  )
( rightwards for precise measurement.            )
  #104= #104 - 0.1            ( cursor.xy += sch.backoff * di.dxdy)
  G01 G90 F650. x#104 y#105   ( sch.[cursor.xy]               )
  G01 G90 G31 M79 F50. x0. y0.( sch.fast_probe[[0, 0]]        )
  #100= #5061 - #556          ( output[di.active_axis] = [var.SKIP_POS + var.PROBE_R * di.dxdy][di.active_axis])
  #104= #5061 - #556          ( cursor.xy = var.SKIP_POS + var.PROBE_R * di.dxdy)
  #105= #5062
( reposition above surface skim height, )
( just inside left edge                 )
  G01 G91 F650. x-0.1 y0.     ( sch..relative[sch.backoff.xy * di.dxdy])
  G01 G90 F650. z0.3          ( sch.[z=sch.skim_distance]     )
  #104= #104 + 1.4            ( cursor.xy += -sch.indent.xy * di.dxdy)
  G01 G90 F650. x#104 y#105   ( sch.[cursor]                  )
(                                      )
( Quickly move probe to find near edge )
  #106= 6.                    (     [abs[stop_search - start_search] / sch.delta][di.active_axis] + 1,)
  #105= -2.                   ( cursor[di.active_axis] = start_search[di.active_axis])
L1003                         ( while its > 0:                )
  IF [#106 LE 0.] GOTO 1005
  G01 G90 F650. x#104 y#105   (     sch.[cursor]              )
  G01 G90 G31 M79 F50. z-0.1  (     sch.fast_probe[z=sch.search_depth])
  IF [#5063 LT -0.075] GOTO 1004(     if var.SKIP_POS.z < sch.search_depth + sch.iota:)
  #105= #105 - 0.4            (     cursor.xy += delta        )
  #106= #106 - 1.             (     its.var -= 1              )
  GOTO 1003
L1005
  #3000 = 100                 ( Search for near failed        )
L1004                         (     error[f"Search for {di.name} failed"])
( back off a bit to the near, then slowly probe  )
( farwards for precise measurement.              )
  #105= #105 - 0.1            ( cursor.xy += sch.backoff * di.dxdy)
  G01 G90 F650. x#104 y#105   ( sch.[cursor.xy]               )
  G01 G90 G31 M79 F50. x0. y0.( sch.fast_probe[[0, 0]]        )
  #103= #5062 - #557          ( output[di.active_axis] = [var.SKIP_POS + var.PROBE_R * di.dxdy][di.active_axis])
  #104= #5061                 ( cursor.xy = var.SKIP_POS + var.PROBE_R * di.dxdy)
  #105= #5062 - #557
( reposition above surface skim height, )
( just inside near edge                 )
  G01 G91 F650. x0. y-0.1     ( sch..relative[sch.backoff.xy * di.dxdy])
  G01 G90 F650. z0.3          ( sch.[z=sch.skim_distance]     )
  #105= #105 + 0.8            ( cursor.xy += -sch.indent.xy * di.dxdy)
  G01 G90 F650. x#104 y#105   ( sch.[cursor]                  )
(                                     )
( Quickly move probe to find far edge )
  #106= 6.                    (     [abs[stop_search - start_search] / sch.delta][di.active_axis] + 1,)
  #105= 2.                    ( cursor[di.active_axis] = start_search[di.active_axis])
L1006                         ( while its > 0:                )
  IF [#106 LE 0.] GOTO 1008
  G01 G90 F650. x#104 y#105   (     sch.[cursor]              )
  G01 G90 G31 M79 F50. z-0.1  (     sch.fast_probe[z=sch.search_depth])
  IF [#5063 LT -0.075] GOTO 1007(     if var.SKIP_POS.z < sch.search_depth + sch.iota:)
  #105= #105 + 0.4            (     cursor.xy += delta        )
  #106= #106 - 1.             (     its.var -= 1              )
  GOTO 1006
L1008
  #3000 = 100                 ( Search for far failed         )
L1007                         (     error[f"Search for {di.name} failed"])
( back off a bit to the far, then slowly probe  )
( nearwards for precise measurement.            )
  #105= #105 + 0.1            ( cursor.xy += sch.backoff * di.dxdy)
  G01 G90 F650. x#104 y#105   ( sch.[cursor.xy]               )
  G01 G90 G31 M79 F50. x0. y0.( sch.fast_probe[[0, 0]]        )
  #101= #5062 + #557          ( output[di.active_axis] = [var.SKIP_POS + var.PROBE_R * di.dxdy][di.active_axis])
  #104= #5061                 ( cursor.xy = var.SKIP_POS + var.PROBE_R * di.dxdy)
  #105= #5062 + #557
( reposition above surface skim height, )
( just inside far edge                  )
  G01 G91 F650. x0. y0.1      ( sch..relative[sch.backoff.xy * di.dxdy])
  G01 G90 F650. z0.3          ( sch.[z=sch.skim_distance]     )
  #105= #105 - 0.8            ( cursor.xy += -sch.indent.xy * di.dxdy)
  G01 G90 F650. x#104 y#105   ( sch.[cursor]                  )
  G01 G90 F650. x0. y0.       ( sch.[0, 0]                    )
(                                       )
( Quickly move probe to find right edge )
  #106= 5.6667                (     [abs[stop_search - start_search] / sch.delta][di.active_axis] + 1,)
  #104= 3.5                   ( cursor[di.active_axis] = start_search[di.active_axis])
L1009                         ( while its > 0:                )
  IF [#106 LE 0.] GOTO 1011
  G01 G90 F650. x#104 y#105   (     sch.[cursor]              )
  G01 G90 G31 M79 F50. z-0.1  (     sch.fast_probe[z=sch.search_depth])
  IF [#5063 LT -0.075] GOTO 1010(     if var.SKIP_POS.z < sch.search_depth + sch.iota:)
  #104= #104 + 0.75           (     cursor.xy += delta        )
  #106= #106 - 1.             (     its.var -= 1              )
  GOTO 1009
L1011
  #3000 = 100                 ( Search for right failed       )
L1010                         (     error[f"Search for {di.name} failed"])
( back off a bit to the right, then slowly probe  )
( leftwards for precise measurement.              )
  #104= #104 + 0.1            ( cursor.xy += sch.backoff * di.dxdy)
  G01 G90 F650. x#104 y#105   ( sch.[cursor.xy]               )
  G01 G90 G31 M79 F50. x0. y0.( sch.fast_probe[[0, 0]]        )
  #102= #5061 + #556          ( output[di.active_axis] = [var.SKIP_POS + var.PROBE_R * di.dxdy][di.active_axis])
  #104= #5061 + #556          ( cursor.xy = var.SKIP_POS + var.PROBE_R * di.dxdy)
  #105= #5062
( reposition above surface skim height, )
( just inside right edge                )
  G01 G91 F650. x0.1 y0.      ( sch..relative[sch.backoff.xy * di.dxdy])
  G01 G90 F650. z0.3          ( sch.[z=sch.skim_distance]     )
  #104= #104 - 1.4            ( cursor.xy += -sch.indent.xy * di.dxdy)
  G01 G90 F650. x#104 y#105   ( sch.[cursor]                  )
(  the 'error' between 0,0 and where we )
(  calculate the center to be gets      )
(  added to cos and voila.              )
  #106= [#100 + #102] / 2.    ( var.error = Vec[2][[var.tlc + var.brc] / 2.0])
  #107= [#101 + #103] / 2.
  #5241= #5241 + #106         ( var.WCS.xy += var.error.xy    )
  #5242= #5242 + #107
  G01 G90 F650. x0. y0.       ( sch.[0, 0]                    )
(  final slow probe to find the surface z )
  G01 G90 G31 M79 F10. z-0.1  ( sch.slow_probe[z=sch.search_depth])
  #5243= #5063                ( var.WCS.z = var.SKIP_POS.z    )
  G01 G90 G53 F650. z-16.     ( sch..machine[z=sch.above.z]   )
  #3006 = 100                 ( WHAT CHANGED                  )
  M99                         ( code["M99"]                   )
