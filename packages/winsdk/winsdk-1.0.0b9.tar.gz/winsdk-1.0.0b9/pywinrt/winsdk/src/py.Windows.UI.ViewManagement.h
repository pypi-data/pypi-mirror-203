// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.9

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Devices.Enumeration.h")
#include "py.Windows.Devices.Enumeration.h"
#endif

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.UI.h")
#include "py.Windows.UI.h"
#endif

#if __has_include("py.Windows.UI.Core.h")
#include "py.Windows.UI.Core.h"
#endif

#if __has_include("py.Windows.UI.Popups.h")
#include "py.Windows.UI.Popups.h"
#endif

#if __has_include("py.Windows.UI.WindowManagement.h")
#include "py.Windows.UI.WindowManagement.h"
#endif

#include <winrt/Windows.Devices.Enumeration.h>
#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.UI.h>
#include <winrt/Windows.UI.Core.h>
#include <winrt/Windows.UI.Popups.h>
#include <winrt/Windows.UI.WindowManagement.h>

#include <winrt/Windows.UI.ViewManagement.h>

namespace py::proj::Windows::UI::ViewManagement
{}

namespace py::impl::Windows::UI::ViewManagement
{}

namespace py::wrapper::Windows::UI::ViewManagement
{
    using AccessibilitySettings = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::AccessibilitySettings>;
    using ActivationViewSwitcher = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::ActivationViewSwitcher>;
    using ApplicationView = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::ApplicationView>;
    using ApplicationViewConsolidatedEventArgs = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::ApplicationViewConsolidatedEventArgs>;
    using ApplicationViewScaling = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::ApplicationViewScaling>;
    using ApplicationViewSwitcher = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::ApplicationViewSwitcher>;
    using ApplicationViewTitleBar = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::ApplicationViewTitleBar>;
    using ApplicationViewTransferContext = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::ApplicationViewTransferContext>;
    using InputPane = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::InputPane>;
    using InputPaneVisibilityEventArgs = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::InputPaneVisibilityEventArgs>;
    using ProjectionManager = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::ProjectionManager>;
    using StatusBar = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::StatusBar>;
    using StatusBarProgressIndicator = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::StatusBarProgressIndicator>;
    using UISettings = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::UISettings>;
    using UISettingsAnimationsEnabledChangedEventArgs = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::UISettingsAnimationsEnabledChangedEventArgs>;
    using UISettingsAutoHideScrollBarsChangedEventArgs = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::UISettingsAutoHideScrollBarsChangedEventArgs>;
    using UISettingsMessageDurationChangedEventArgs = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::UISettingsMessageDurationChangedEventArgs>;
    using UIViewSettings = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::UIViewSettings>;
    using ViewModePreferences = py::winrt_wrapper<winrt::Windows::UI::ViewManagement::ViewModePreferences>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::ViewManagement::ApplicationViewBoundsMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::ViewManagement::ApplicationViewMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::ViewManagement::ApplicationViewOrientation> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::ViewManagement::ApplicationViewState> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::ViewManagement::ApplicationViewSwitchingOptions> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::ViewManagement::ApplicationViewWindowingMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::ViewManagement::FullScreenSystemOverlayMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::ViewManagement::HandPreference> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::ViewManagement::ScreenCaptureDisabledBehavior> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::ViewManagement::UIColorType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::ViewManagement::UIElementType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::ViewManagement::UserInteractionMode> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::ViewManagement::ViewSizePreference> = "i";


    template<>
    struct py_type<winrt::Windows::UI::ViewManagement::ApplicationViewBoundsMode>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::ViewManagement::ApplicationViewMode>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::ViewManagement::ApplicationViewOrientation>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::ViewManagement::ApplicationViewState>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::ViewManagement::ApplicationViewSwitchingOptions>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::ViewManagement::ApplicationViewWindowingMode>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::ViewManagement::FullScreenSystemOverlayMode>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::ViewManagement::HandPreference>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::ViewManagement::ScreenCaptureDisabledBehavior>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::ViewManagement::UIColorType>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::ViewManagement::UIElementType>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::ViewManagement::UserInteractionMode>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::ViewManagement::ViewSizePreference>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::AccessibilitySettings>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::ActivationViewSwitcher>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::ApplicationView>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::ApplicationViewConsolidatedEventArgs>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::ApplicationViewScaling>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::ApplicationViewSwitcher>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::ApplicationViewTitleBar>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::ApplicationViewTransferContext>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::InputPane>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::InputPaneVisibilityEventArgs>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::ProjectionManager>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::StatusBar>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::StatusBarProgressIndicator>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::UISettings>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::UISettingsAnimationsEnabledChangedEventArgs>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::UISettingsAutoHideScrollBarsChangedEventArgs>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::UISettingsMessageDurationChangedEventArgs>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::UIViewSettings>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::ViewManagement::ViewModePreferences>
    {
        static PyTypeObject* get_python_type() noexcept;
    };
}
