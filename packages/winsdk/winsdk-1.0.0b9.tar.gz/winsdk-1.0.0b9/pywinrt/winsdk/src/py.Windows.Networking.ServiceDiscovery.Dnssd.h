// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.9

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Networking.h")
#include "py.Windows.Networking.h"
#endif

#if __has_include("py.Windows.Networking.Connectivity.h")
#include "py.Windows.Networking.Connectivity.h"
#endif

#if __has_include("py.Windows.Networking.Sockets.h")
#include "py.Windows.Networking.Sockets.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Networking.h>
#include <winrt/Windows.Networking.Connectivity.h>
#include <winrt/Windows.Networking.Sockets.h>

#include <winrt/Windows.Networking.ServiceDiscovery.Dnssd.h>

namespace py::proj::Windows::Networking::ServiceDiscovery::Dnssd
{}

namespace py::impl::Windows::Networking::ServiceDiscovery::Dnssd
{}

namespace py::wrapper::Windows::Networking::ServiceDiscovery::Dnssd
{
    using DnssdRegistrationResult = py::winrt_wrapper<winrt::Windows::Networking::ServiceDiscovery::Dnssd::DnssdRegistrationResult>;
    using DnssdServiceInstance = py::winrt_wrapper<winrt::Windows::Networking::ServiceDiscovery::Dnssd::DnssdServiceInstance>;
    using DnssdServiceInstanceCollection = py::winrt_wrapper<winrt::Windows::Networking::ServiceDiscovery::Dnssd::DnssdServiceInstanceCollection>;
    using DnssdServiceWatcher = py::winrt_wrapper<winrt::Windows::Networking::ServiceDiscovery::Dnssd::DnssdServiceWatcher>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::ServiceDiscovery::Dnssd::DnssdRegistrationStatus> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Networking::ServiceDiscovery::Dnssd::DnssdServiceWatcherStatus> = "i";


    template<>
    struct py_type<winrt::Windows::Networking::ServiceDiscovery::Dnssd::DnssdRegistrationStatus>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::Networking::ServiceDiscovery::Dnssd::DnssdServiceWatcherStatus>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::ServiceDiscovery::Dnssd::DnssdRegistrationResult>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::ServiceDiscovery::Dnssd::DnssdServiceInstance>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::ServiceDiscovery::Dnssd::DnssdServiceInstanceCollection>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Networking::ServiceDiscovery::Dnssd::DnssdServiceWatcher>
    {
        static PyTypeObject* get_python_type() noexcept;
    };
}
