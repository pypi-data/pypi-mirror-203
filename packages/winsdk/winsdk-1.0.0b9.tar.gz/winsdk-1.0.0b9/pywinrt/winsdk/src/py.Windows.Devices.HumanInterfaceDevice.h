// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.9

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Storage.h")
#include "py.Windows.Storage.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Storage.h>
#include <winrt/Windows.Storage.Streams.h>

#include <winrt/Windows.Devices.HumanInterfaceDevice.h>

namespace py::proj::Windows::Devices::HumanInterfaceDevice
{}

namespace py::impl::Windows::Devices::HumanInterfaceDevice
{}

namespace py::wrapper::Windows::Devices::HumanInterfaceDevice
{
    using HidBooleanControl = py::winrt_wrapper<winrt::Windows::Devices::HumanInterfaceDevice::HidBooleanControl>;
    using HidBooleanControlDescription = py::winrt_wrapper<winrt::Windows::Devices::HumanInterfaceDevice::HidBooleanControlDescription>;
    using HidCollection = py::winrt_wrapper<winrt::Windows::Devices::HumanInterfaceDevice::HidCollection>;
    using HidDevice = py::winrt_wrapper<winrt::Windows::Devices::HumanInterfaceDevice::HidDevice>;
    using HidFeatureReport = py::winrt_wrapper<winrt::Windows::Devices::HumanInterfaceDevice::HidFeatureReport>;
    using HidInputReport = py::winrt_wrapper<winrt::Windows::Devices::HumanInterfaceDevice::HidInputReport>;
    using HidInputReportReceivedEventArgs = py::winrt_wrapper<winrt::Windows::Devices::HumanInterfaceDevice::HidInputReportReceivedEventArgs>;
    using HidNumericControl = py::winrt_wrapper<winrt::Windows::Devices::HumanInterfaceDevice::HidNumericControl>;
    using HidNumericControlDescription = py::winrt_wrapper<winrt::Windows::Devices::HumanInterfaceDevice::HidNumericControlDescription>;
    using HidOutputReport = py::winrt_wrapper<winrt::Windows::Devices::HumanInterfaceDevice::HidOutputReport>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Devices::HumanInterfaceDevice::HidCollectionType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Devices::HumanInterfaceDevice::HidReportType> = "i";


    template<>
    struct py_type<winrt::Windows::Devices::HumanInterfaceDevice::HidCollectionType>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::Devices::HumanInterfaceDevice::HidReportType>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::HumanInterfaceDevice::HidBooleanControl>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::HumanInterfaceDevice::HidBooleanControlDescription>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::HumanInterfaceDevice::HidCollection>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::HumanInterfaceDevice::HidDevice>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::HumanInterfaceDevice::HidFeatureReport>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::HumanInterfaceDevice::HidInputReport>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::HumanInterfaceDevice::HidInputReportReceivedEventArgs>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::HumanInterfaceDevice::HidNumericControl>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::HumanInterfaceDevice::HidNumericControlDescription>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::HumanInterfaceDevice::HidOutputReport>
    {
        static PyTypeObject* get_python_type() noexcept;
    };
}
