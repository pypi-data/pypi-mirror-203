// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.9

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Storage.h")
#include "py.Windows.Storage.h"
#endif

#include <winrt/Windows.Storage.h>

#include <winrt/Windows.Devices.Portable.h>

namespace py::proj::Windows::Devices::Portable
{}

namespace py::impl::Windows::Devices::Portable
{}

namespace py::wrapper::Windows::Devices::Portable
{
    using ServiceDevice = py::winrt_wrapper<winrt::Windows::Devices::Portable::ServiceDevice>;
    using StorageDevice = py::winrt_wrapper<winrt::Windows::Devices::Portable::StorageDevice>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Devices::Portable::ServiceDeviceType> = "i";


    template<>
    struct py_type<winrt::Windows::Devices::Portable::ServiceDeviceType>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::Portable::ServiceDevice>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::Portable::StorageDevice>
    {
        static PyTypeObject* get_python_type() noexcept;
    };
}
