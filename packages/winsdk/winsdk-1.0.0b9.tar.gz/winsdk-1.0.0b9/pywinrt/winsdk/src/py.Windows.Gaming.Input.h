// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.9

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Devices.Haptics.h")
#include "py.Windows.Devices.Haptics.h"
#endif

#if __has_include("py.Windows.Devices.Power.h")
#include "py.Windows.Devices.Power.h"
#endif

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Gaming.Input.ForceFeedback.h")
#include "py.Windows.Gaming.Input.ForceFeedback.h"
#endif

#if __has_include("py.Windows.System.h")
#include "py.Windows.System.h"
#endif

#include <winrt/Windows.Devices.Haptics.h>
#include <winrt/Windows.Devices.Power.h>
#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.Gaming.Input.ForceFeedback.h>
#include <winrt/Windows.System.h>

#include <winrt/Windows.Gaming.Input.h>

namespace py::proj::Windows::Gaming::Input
{}

namespace py::impl::Windows::Gaming::Input
{}

namespace py::wrapper::Windows::Gaming::Input
{
    using ArcadeStick = py::winrt_wrapper<winrt::Windows::Gaming::Input::ArcadeStick>;
    using FlightStick = py::winrt_wrapper<winrt::Windows::Gaming::Input::FlightStick>;
    using Gamepad = py::winrt_wrapper<winrt::Windows::Gaming::Input::Gamepad>;
    using Headset = py::winrt_wrapper<winrt::Windows::Gaming::Input::Headset>;
    using RacingWheel = py::winrt_wrapper<winrt::Windows::Gaming::Input::RacingWheel>;
    using RawGameController = py::winrt_wrapper<winrt::Windows::Gaming::Input::RawGameController>;
    using UINavigationController = py::winrt_wrapper<winrt::Windows::Gaming::Input::UINavigationController>;
    using IGameController = py::winrt_wrapper<winrt::Windows::Gaming::Input::IGameController>;
    using IGameControllerBatteryInfo = py::winrt_wrapper<winrt::Windows::Gaming::Input::IGameControllerBatteryInfo>;
    using ArcadeStickReading = py::winrt_struct_wrapper<winrt::Windows::Gaming::Input::ArcadeStickReading>;
    using FlightStickReading = py::winrt_struct_wrapper<winrt::Windows::Gaming::Input::FlightStickReading>;
    using GamepadReading = py::winrt_struct_wrapper<winrt::Windows::Gaming::Input::GamepadReading>;
    using GamepadVibration = py::winrt_struct_wrapper<winrt::Windows::Gaming::Input::GamepadVibration>;
    using RacingWheelReading = py::winrt_struct_wrapper<winrt::Windows::Gaming::Input::RacingWheelReading>;
    using UINavigationReading = py::winrt_struct_wrapper<winrt::Windows::Gaming::Input::UINavigationReading>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::ArcadeStickButtons> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::FlightStickButtons> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::GameControllerButtonLabel> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::GameControllerSwitchKind> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::GameControllerSwitchPosition> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::GamepadButtons> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::OptionalUINavigationButtons> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::RacingWheelButtons> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::RequiredUINavigationButtons> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::ArcadeStickReading> = "T{Q:timestamp:I:buttons:}";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::FlightStickReading> = "T{Q:timestamp:I:buttons:i:hat_switch:d:roll:d:pitch:d:yaw:d:throttle:}";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::GamepadReading> = "T{Q:timestamp:I:buttons:d:left_trigger:d:right_trigger:d:left_thumbstick_x:d:left_thumbstick_y:d:right_thumbstick_x:d:right_thumbstick_y:}";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::GamepadVibration> = "T{d:left_motor:d:right_motor:d:left_trigger:d:right_trigger:}";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::RacingWheelReading> = "T{Q:timestamp:I:buttons:i:pattern_shifter_gear:d:wheel:d:throttle:d:brake:d:clutch:d:handbrake:}";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::Gaming::Input::UINavigationReading> = "T{Q:timestamp:I:required_buttons:I:optional_buttons:}";


    template<>
    struct py_type<winrt::Windows::Gaming::Input::ArcadeStickButtons>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Input::FlightStickButtons>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Input::GameControllerButtonLabel>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Input::GameControllerSwitchKind>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Input::GameControllerSwitchPosition>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Input::GamepadButtons>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Input::OptionalUINavigationButtons>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Input::RacingWheelButtons>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::Gaming::Input::RequiredUINavigationButtons>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::ArcadeStick>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::FlightStick>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::Gamepad>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::Headset>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::RacingWheel>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::RawGameController>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::UINavigationController>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::IGameController>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::IGameControllerBatteryInfo>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::ArcadeStickReading>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::FlightStickReading>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::GamepadReading>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::GamepadVibration>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::RacingWheelReading>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::UINavigationReading>
    {
        static PyTypeObject* get_python_type() noexcept;
    };
    template<>
    struct converter<winrt::Windows::Gaming::Input::ArcadeStickReading>
    {
        static PyObject* convert(winrt::Windows::Gaming::Input::ArcadeStickReading instance) noexcept;
        static winrt::Windows::Gaming::Input::ArcadeStickReading convert_to(PyObject* obj);
    };

    template<>
    struct converter<winrt::Windows::Gaming::Input::FlightStickReading>
    {
        static PyObject* convert(winrt::Windows::Gaming::Input::FlightStickReading instance) noexcept;
        static winrt::Windows::Gaming::Input::FlightStickReading convert_to(PyObject* obj);
    };

    template<>
    struct converter<winrt::Windows::Gaming::Input::GamepadReading>
    {
        static PyObject* convert(winrt::Windows::Gaming::Input::GamepadReading instance) noexcept;
        static winrt::Windows::Gaming::Input::GamepadReading convert_to(PyObject* obj);
    };

    template<>
    struct converter<winrt::Windows::Gaming::Input::GamepadVibration>
    {
        static PyObject* convert(winrt::Windows::Gaming::Input::GamepadVibration instance) noexcept;
        static winrt::Windows::Gaming::Input::GamepadVibration convert_to(PyObject* obj);
    };

    template<>
    struct converter<winrt::Windows::Gaming::Input::RacingWheelReading>
    {
        static PyObject* convert(winrt::Windows::Gaming::Input::RacingWheelReading instance) noexcept;
        static winrt::Windows::Gaming::Input::RacingWheelReading convert_to(PyObject* obj);
    };

    template<>
    struct converter<winrt::Windows::Gaming::Input::UINavigationReading>
    {
        static PyObject* convert(winrt::Windows::Gaming::Input::UINavigationReading instance) noexcept;
        static winrt::Windows::Gaming::Input::UINavigationReading convert_to(PyObject* obj);
    };

}
