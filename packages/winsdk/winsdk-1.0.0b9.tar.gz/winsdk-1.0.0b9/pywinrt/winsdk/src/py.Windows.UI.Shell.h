// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.9

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.ApplicationModel.Core.h")
#include "py.Windows.ApplicationModel.Core.h"
#endif

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.UI.h")
#include "py.Windows.UI.h"
#endif

#if __has_include("py.Windows.UI.StartScreen.h")
#include "py.Windows.UI.StartScreen.h"
#endif

#include <winrt/Windows.ApplicationModel.Core.h>
#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.UI.h>
#include <winrt/Windows.UI.StartScreen.h>

#include <winrt/Windows.UI.Shell.h>

namespace py::proj::Windows::UI::Shell
{}

namespace py::impl::Windows::UI::Shell
{}

namespace py::wrapper::Windows::UI::Shell
{
    using AdaptiveCardBuilder = py::winrt_wrapper<winrt::Windows::UI::Shell::AdaptiveCardBuilder>;
    using FocusSession = py::winrt_wrapper<winrt::Windows::UI::Shell::FocusSession>;
    using FocusSessionManager = py::winrt_wrapper<winrt::Windows::UI::Shell::FocusSessionManager>;
    using SecurityAppManager = py::winrt_wrapper<winrt::Windows::UI::Shell::SecurityAppManager>;
    using ShareWindowCommandEventArgs = py::winrt_wrapper<winrt::Windows::UI::Shell::ShareWindowCommandEventArgs>;
    using ShareWindowCommandSource = py::winrt_wrapper<winrt::Windows::UI::Shell::ShareWindowCommandSource>;
    using TaskbarManager = py::winrt_wrapper<winrt::Windows::UI::Shell::TaskbarManager>;
    using IAdaptiveCard = py::winrt_wrapper<winrt::Windows::UI::Shell::IAdaptiveCard>;
    using IAdaptiveCardBuilderStatics = py::winrt_wrapper<winrt::Windows::UI::Shell::IAdaptiveCardBuilderStatics>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::Shell::SecurityAppKind> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::Shell::SecurityAppState> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::Shell::SecurityAppSubstatus> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::UI::Shell::ShareWindowCommand> = "i";


    template<>
    struct py_type<winrt::Windows::UI::Shell::SecurityAppKind>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::Shell::SecurityAppState>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::Shell::SecurityAppSubstatus>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::UI::Shell::ShareWindowCommand>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Shell::AdaptiveCardBuilder>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Shell::FocusSession>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Shell::FocusSessionManager>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Shell::SecurityAppManager>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Shell::ShareWindowCommandEventArgs>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Shell::ShareWindowCommandSource>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Shell::TaskbarManager>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Shell::IAdaptiveCard>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Shell::IAdaptiveCardBuilderStatics>
    {
        static PyTypeObject* get_python_type() noexcept;
    };
}
