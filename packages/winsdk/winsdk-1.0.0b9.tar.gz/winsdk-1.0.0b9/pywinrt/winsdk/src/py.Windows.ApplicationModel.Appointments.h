// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.9

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.System.h")
#include "py.Windows.System.h"
#endif

#if __has_include("py.Windows.UI.h")
#include "py.Windows.UI.h"
#endif

#if __has_include("py.Windows.UI.Popups.h")
#include "py.Windows.UI.Popups.h"
#endif

#include <winrt/Windows.Foundation.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.System.h>
#include <winrt/Windows.UI.h>
#include <winrt/Windows.UI.Popups.h>

#include <winrt/Windows.ApplicationModel.Appointments.h>

namespace py::proj::Windows::ApplicationModel::Appointments
{}

namespace py::impl::Windows::ApplicationModel::Appointments
{}

namespace py::wrapper::Windows::ApplicationModel::Appointments
{
    using Appointment = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::Appointment>;
    using AppointmentCalendar = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentCalendar>;
    using AppointmentCalendarSyncManager = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentCalendarSyncManager>;
    using AppointmentConflictResult = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentConflictResult>;
    using AppointmentException = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentException>;
    using AppointmentInvitee = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentInvitee>;
    using AppointmentManager = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentManager>;
    using AppointmentManagerForUser = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentManagerForUser>;
    using AppointmentOrganizer = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentOrganizer>;
    using AppointmentProperties = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentProperties>;
    using AppointmentRecurrence = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentRecurrence>;
    using AppointmentStore = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentStore>;
    using AppointmentStoreChange = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreChange>;
    using AppointmentStoreChangeReader = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreChangeReader>;
    using AppointmentStoreChangeTracker = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreChangeTracker>;
    using AppointmentStoreChangedDeferral = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreChangedDeferral>;
    using AppointmentStoreChangedEventArgs = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreChangedEventArgs>;
    using AppointmentStoreNotificationTriggerDetails = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreNotificationTriggerDetails>;
    using FindAppointmentsOptions = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::FindAppointmentsOptions>;
    using IAppointmentParticipant = py::winrt_wrapper<winrt::Windows::ApplicationModel::Appointments::IAppointmentParticipant>;
}

namespace py
{
    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentBusyStatus> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentCalendarOtherAppReadAccess> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentCalendarOtherAppWriteAccess> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentCalendarSyncStatus> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentConflictType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentDaysOfWeek> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentDetailsKind> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentParticipantResponse> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentParticipantRole> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentRecurrenceUnit> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentSensitivity> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreAccessType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreChangeType> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentSummaryCardView> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::AppointmentWeekOfMonth> = "i";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::FindAppointmentCalendarsOptions> = "I";

    template<>
    inline constexpr const char* buffer_format<winrt::Windows::ApplicationModel::Appointments::RecurrenceType> = "i";


    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentBusyStatus>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentCalendarOtherAppReadAccess>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentCalendarOtherAppWriteAccess>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentCalendarSyncStatus>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentConflictType>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentDaysOfWeek>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentDetailsKind>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentParticipantResponse>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentParticipantRole>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentRecurrenceUnit>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentSensitivity>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreAccessType>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreChangeType>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentSummaryCardView>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::AppointmentWeekOfMonth>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::FindAppointmentCalendarsOptions>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct py_type<winrt::Windows::ApplicationModel::Appointments::RecurrenceType>
    {
        static PyObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::Appointment>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentCalendar>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentCalendarSyncManager>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentConflictResult>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentException>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentInvitee>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentManager>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentManagerForUser>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentOrganizer>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentProperties>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentRecurrence>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentStore>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreChange>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreChangeReader>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreChangeTracker>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreChangedDeferral>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreChangedEventArgs>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::AppointmentStoreNotificationTriggerDetails>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::FindAppointmentsOptions>
    {
        static PyTypeObject* get_python_type() noexcept;
    };

    template<>
    struct winrt_type<winrt::Windows::ApplicationModel::Appointments::IAppointmentParticipant>
    {
        static PyTypeObject* get_python_type() noexcept;
    };
}
