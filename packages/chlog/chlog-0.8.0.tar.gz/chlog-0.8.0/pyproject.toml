[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"


# PROJECT METADATA
# ======================================================================

[project]
name = "chlog"
authors = [
    { name = "Ralf Luetkemeier", email = "foss@rlue.de" },
]
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development",
    "Topic :: Utilities",
]
keywords = ["cli", "console", "changelog"]
requires-python = ">=3.9,<4"
dynamic = ["version", "description"]
dependencies = [
    "cozyconsole >=0.3.0a2",
    "inquirerpy >=0.3.0",
    "rich >=13.0.0",
    "semver >= 2.13.0",
    "tomli >= 2.0.0; python_version < '3.11'",
]

[project.optional-dependencies]
dev = [
    "flake8",
    "flit",
    "pybrownies",
    "pylint",
    "pytest >=7.2.0",
    "pytest-cov",
    "tox",
]
# doc = ["sphinx"]

[project.scripts]
chlog = "chlog.__main__:main"

[project.urls]
#changelog = "https://github.com/me/<repo>/CHANGELOG.md"
#Documentation = "https://..."
#Source = "https://github.com/<account>/<repo>"


# TOOLING CONFIGS
# ======================================================================

## Coverage ------------------------------------------------------------

[tool.coverage.html]
directory = ".coverage_report"

[tool.coverage.report]
# Define lines of code to safely ignore:
# (This means code which can not be reached by design.)
exclude_lines = [
    'pragma: no cover',
    'if 0:',
    'if False:',
    'if __name__ == .__main__.:',
]
#ignore_errors = true

[tool.coverage.run]
# parallel = true
# concurrency = ["multiprocessing"]
# branch = true
source = ["chlog"]

## Flit ----------------------------------------------------------------

[tool.flit.sdist]
include = ["doc/", "tests/",]
exclude = ["imgs/"]

## Pylint --------------------------------------------------------------
# Enter pylint --generate-toml-config for more info.

[tool.pylint.main]
# ignore = ["demo"]

[tool.pylint.basic]
good-names = ["fp", "i", "j", "k", "ex", "Run", "_", "m", "n"]

[tool.pylint.design]
max-args = 7
max-line-length = 80
single-line-if-stmt = true

## Pytest --------------------------------------------------------------

[tool.pytest.ini_options]
addopts = "-s"
minversion = 7.0
testpaths = [
    "tests"
]

## Tox -----------------------------------------------------------------

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{39,310,311}
isolated_build = True

[testenv]
deps = -rrequirements/tox.txt
commands = pytest
"""
# platform = linux2|darwin
