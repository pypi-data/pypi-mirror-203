[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "Lezargus"
dynamic = ["version"]
description = "The accompanying data software package to the IRTF SPECTRE Spectrograph."
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = []
authors = [
  { name = "Sparrow", email = "psmd.iberutaru@gmail.com" },
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[project.urls]
Documentation = "https://github.com/psmd-iberutaru/Lezargus#readme"
Issues = "https://github.com/psmd-iberutaru/Lezargus/issues"
Source = "https://github.com/psmd-iberutaru/Lezargus/"

[tool.hatch.version]
path = "src/lezargus/__version__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest>=7.3.0",
  "black>=23.1.0",
  "mypy>=1.0.0",
  "pylint>=2.17.0",
  "ruff>=0.0.261",
  "sphinx>=6.1.0",
  "sphinx_rtd_theme>=1.2.0",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
typing = "mypy --install-types --non-interactive {args:src/lezargus tests}"
format = [
  "black {args:.}",
]
cover = [
  "coverage run -m pytest {args:tests}",
  "- coverage combine",
  "coverage report",
  "coverage html",
  "coverage erase",
]
lint = [
  "ruff {args:src}",
  "pylint {args:src}",
]
lintfix = [
  "ruff {args:src} --fix"
]
docs = [
  "sphinx-apidoc -f -e -P -o ./docs/source/code/ ./src/lezargus/",
  "sphinx-build -b html ./docs/source/ ./docs/build/html/",
]
auxiliary = [
  "typing",
  "lint",
  "lintfix",
  "test",
  "cover",
  "format",
]
aux = "auxiliary"


[[tool.hatch.envs.all.matrix]]
python = ["3.11"]

[tool.pytest.ini_options]
pythonpath = [
  ".", "src",
]
testpaths = [
  "tests"
]

[tool.black]
target-version = ["py311"]
line-length = 80

[tool.ruff]
target-version = "py311"
line-length = 80
select = [
  "ALL",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Incompatabilies; these are objectively wrong.
  "D203", "D213"
]
unfixable = [
]

[tool.ruff.isort]
known-third-party = ["lezargus"]
force-single-line = true

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.pylint]
disable = [
  "R0903", # (too-few-public-methods)
  "R0913", # (too-many-arguments)
  "W0105", # (pointless-string-statement)
]

[tool.coverage.run]
source_pkgs = ["lezargus", "tests"]
branch = true
parallel = true
omit = [
  "src/lezargus/__version__.py",
]

[tool.coverage.paths]
lezargus = ["src/lezargus", "*/lezargus/src/lezargus"]
tests = ["tests", "*/lezargus/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.coverage.html]
title = "Lezargus Code Coverage Report"
directory = "./docs/coverage/"