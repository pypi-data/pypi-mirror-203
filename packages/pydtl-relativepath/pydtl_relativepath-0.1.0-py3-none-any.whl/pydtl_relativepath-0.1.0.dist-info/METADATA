Metadata-Version: 2.1
Name: pydtl-relativepath
Version: 0.1.0
Summary: python tool to solve many issues with relative paths and imports in your complex framework.
Home-page: https://github.com/python-dev-tools/pydtl-relativepath
License: MIT
Keywords: relativepath,python,pydtl,python-dev-tools,poetry,pytest
Author: Nanthagopal-Eswaran
Author-email: nanthagopaleswaran@gmail.com
Maintainer: Nanthagopal-Eswaran
Maintainer-email: nanthagopaleswaran@gmail.com
Requires-Python: >=3.8.1,<4.0.0
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Software Development :: Build Tools
Project-URL: Repository, https://github.com/python-dev-tools/pydtl-relativepath
Project-URL: Source, https://github.com/python-dev-tools/pydtl-relativepath
Project-URL: Tracker, https://github.com/python-dev-tools/pydtl-relativepath/issues
Description-Content-Type: text/markdown

# pydtl-relativepath
pydtl-relativepath tool from pydtl community can be used to solve many issues that occurs with relative paths and imports from various modules in your complex framework.

# Installation

Run `pip install pydtl-relativepath`

# Usage

## Relative to Absolute Path Conversions

Whenever specifying a relative path use `rel2abs()`

See an Example below

    from pydtl_relativepath import rel2abs as r2a
    readmepath = r2a("README.txt")
    print(open(readmepath, mode="r", encoding="utf-8").read())

This will convert relative path specified to an absolute path relative to current file's directory

Here, readmepath contains the absolute path for README.txt file
and it is compatible with os.PathLike objects.

> Note: More Documentation (TBA)

> Note: Incomplete version | Development is in progress

