[tool.poetry]
name = "pytest-alembic"
version = "0.10.2"
description = "A pytest plugin for verifying alembic migrations."
authors = [
    "Dan Cardin <ddcardin@gmail.com>",
]
license = "MIT"
keywords = [ "pytest", "sqlalchemy", "alembic", "migration", "revision" ]
classifiers = [ "Framework :: Pytest" ]
repository = "https://github.com/schireson/pytest-alembic"
packages = [
    { include = "pytest_alembic", from = "src" },
]
readme = 'README.md'
include = [
    "*.md",
]

[tool.poetry.dependencies]
python = ">=3.6, <4"

pytest = {version = ">=6.0"}
alembic = "*"
sqlalchemy = "*"

[tool.poetry.dev-dependencies]
bandit = "*"
black = {version = "22.3.0", python = ">=3.6.2"}
coverage = {version = ">=6.4.4", extras = ["toml"], python = ">=3.7"}
flake8 = ">=3.9"
isort = ">=5"
mypy = {version = ">=0.900", python = ">=3.5"}
psycopg2-binary = "*"
pydocstyle = {version = "*", python = ">=3.5"}
pytest = {version = ">=6.2"}
pytest-asyncio = "*"
pytest-mock-resources = {version = ">=2.6.3", extras = ["docker"], python = ">=3.7"}
types-dataclasses = "^0.1.7"
sqlalchemy = {version = ">=1.4", extras = ["asyncio"]}
greenlet = "*"
asyncpg = "*"

[tool.poetry.plugins.pytest11]
pytest_alembic = "pytest_alembic.plugin"

[tool.isort]
profile = 'black'
known_first_party = 'pytest_alembic,tests'
line_length = 100
float_to_top = true
order_by_type = false
use_parentheses = true

[tool.black]
line_length = 100

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
]

[tool.coverage.run]
source = ["src"]
branch = true
parallel = true

[tool.pytest.ini_options]
doctest_optionflags = "NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS"
addopts = "--doctest-modules -vv --ff --strict-markers"
pytest_alembic_exclude = 'up_down_consistency'
norecursedirs = ".* build dist *.egg"
pytester_example_dir = "examples"

[tool.mypy]
strict_optional = true
ignore_missing_imports = true
warn_unused_ignores = true
incremental = true

[build-system]
requires = ["poetry_core==1.0.8"]
build-backend = "poetry.core.masonry.api"
