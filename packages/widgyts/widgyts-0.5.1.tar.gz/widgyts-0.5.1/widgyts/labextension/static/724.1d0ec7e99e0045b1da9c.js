"use strict";(self.webpackChunk_yt_project_yt_widgets=self.webpackChunk_yt_project_yt_widgets||[]).push([[724],{825:(e,t,i)=>{i.a(e,(async(e,s)=>{try{i.d(t,{u:()=>o});var a=i(216),l=i(657),d=i(988),r=e([d]);d=(r.then?(await r)():r)[0];class o extends a.WidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{colormap_values:{},_initialized:!1,_model_name:o.model_name,_model_module:o.model_module,_model_module_version:o.model_module_version})}initialize(e,t){super.initialize(e,t),this.colormap_values=this.get("colormap_values")}async normalize(e,t,i,s,a,l){this._initialized||await this.setupColormaps();const d=new Uint8Array(i.buffer);this.colormaps.normalize(e,t,d,s,a,l)}async setupColormaps(){if(!this._initialized){this.colormaps=new d.UA.ColormapCollection;for(const[e,t]of Object.entries(this.colormap_values)){const i=Uint8Array.from(t);this.colormaps.add_colormap(e,i)}this._initialized=!0}}}o.model_name="ColormapContainerModel",o.model_module=l.o,o.model_module_version=l.Y,s()}catch(e){s(e)}}))},859:(e,t,i)=>{i.a(e,(async(e,s)=>{try{i.d(t,{c:()=>o});var a=i(216),l=i(657),d=i(988),r=e([d]);d=(r.then?(await r)():r)[0];class o extends a.DOMWidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:o.model_name,_model_module:o.model_module,_model_module_version:o.model_module_version,image_data:null,width:512,height:512,view_center:[.5,.5],view_width:[1,1],frb:null,variable_mesh_model:null})}initialize(e,t){super.initialize(e,t),this.on_some_change(["width","height"],this.sizeChanged,this),this.sizeChanged()}sizeChanged(){this.width=this.get("width"),this.height=this.get("height"),this.data_buffer=new Float64Array(this.width*this.height)}calculateViewBounds(){this.view_width=this.get("view_width"),this.view_center=this.get("view_center");const e=[this.view_width[0]/2,this.view_width[1]/2];return{x_low:this.view_center[0]-e[0],x_high:this.view_center[0]+e[0],y_low:this.view_center[1]-e[1],y_high:this.view_center[1]+e[1]}}async depositDataBuffer(e,t){const i=this.calculateViewBounds();return this.frb=new d.UA.FixedResolutionBuffer(this.width,this.height,i.x_low,i.x_high,i.y_low,i.y_high),this.frb.deposit(e.variable_mesh,this.data_buffer,t),this.data_buffer}}o.serializers=Object.assign(Object.assign({},a.DOMWidgetModel.serializers),{variable_mesh_model:{deserialize:a.unpack_models}}),o.model_name="FRBModel",o.model_module=l.o,o.model_module_version=l.Y,s()}catch(e){s(e)}}))},639:(e,t,i)=>{i.d(t,{Z:()=>o,a:()=>r});var s=i(657),a=i(469),l=i.n(a),d=i(216);class r extends d.DOMWidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:r.model_name,_model_module:r.model_module,_model_module_version:r.model_module_version,_view_name:r.view_name,_view_module:r.view_module,_view_module_version:r.view_module_version,renderer:void 0,disabled:!1})}}r.serializers=Object.assign(Object.assign({},d.DOMWidgetModel.serializers),{renderer:{deserialize:d.unpack_models}}),r.view_name="FullscreenButtonView",r.view_module=s.o,r.view_module_version=s.Y,r.model_name="FullscreenButtonModel",r.model_module=s.o,r.model_module_version=s.Y;class o extends d.DOMWidgetView{render(){super.render(),this.el.classList.add("jupyter-widgets"),this.el.classList.add("jupyter-button"),this.el.classList.add("widget-button"),this.update()}update(){this.el.disabled=this.model.get("disabled"),this.el.setAttribute("title",this.model.get("tooltip"));const e="icon-fullscreen";if("".length||e.length){if(this.el.textContent="",e.length){const t=document.createElement("i");t.classList.add("fa"),t.classList.add(...e.split(/[\s]+/).filter(Boolean).map((e=>`fa-${e}`))),0==="".length&&t.classList.add("center"),this.el.appendChild(t)}this.el.appendChild(document.createTextNode(""))}return super.update()}events(){return{click:"_handle_click"}}_handle_click(e){const t=this.model.get("renderer");t._findView().then((e=>{void 0!==e&&(l().fullscreenEnabled?(l().requestFullscreen(e.el),this.oldRendererWidth=t.get("_width"),this.oldRendererHeight=t.get("_height"),t.set("_width",screen.width),t.set("_height",screen.height),t.save()):(l().exitFullscreen(),t.set("_width",this.oldRendererWidth),t.set("_height",this.oldRendererHeight),t.save()))}))}}},988:(e,t,i)=>{i.a(e,(async(e,s)=>{try{i.d(t,{AK:()=>o,Gg:()=>d,Km:()=>h,MV:()=>a.FixedResolutionBuffer,TH:()=>n,Tv:()=>a.ColormapCollection,UA:()=>l,bD:()=>a.VariableMesh,fN:()=>m,i6:()=>a.Colormap,if:()=>r});var a=i(413);const l=await Promise.resolve().then(i.t.bind(i,413,23));function d(e){return new DataView(e.buffer.slice(0))}function r(e){return function(t){return null===t?null:new e(t.buffer)}}const o={serialize:d,deserialize:r(Float32Array)},n={serialize:d,deserialize:r(Float64Array)},m={serialize:d,deserialize:r(Uint8Array)},h={serialize:d,deserialize:r(BigUint64Array)};s()}catch(_){s(_)}}),1)},347:(e,t,i)=>{i.a(e,(async(e,s)=>{try{i.d(t,{l:()=>o,o:()=>n});var a=i(216),l=i(657),d=i(988),r=e([d]);d=(r.then?(await r)():r)[0];class o extends a.DOMWidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:o.model_name,_model_module:o.model_module,_model_module_version:o.model_module_version,field_name:null,array:null})}initialize(e,t){super.initialize(e,t),this.field_name=this.get("field_name"),this.array=this.get("array")}}o.serializers=Object.assign(Object.assign({},a.DOMWidgetModel.serializers),{array:d.TH}),o.model_name="FieldArrayModel",o.model_module=l.o,o.model_module_version=l.Y;class n extends a.DOMWidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:n.model_name,_model_module:n.model_module,_model_module_version:n.model_module_version,px:null,pdx:null,py:null,pdy:null,field_values:[],variable_mesh:void 0})}initialize(e,t){super.initialize(e,t),this.variable_mesh=new d.UA.VariableMesh(this.get("px"),this.get("py"),this.get("pdx"),this.get("pdy")),this.on("change:field_values",this.updateFieldValues,this),this.updateFieldValues()}updateFieldValues(){this.field_values=this.get("field_values");for(const e of this.field_values)this.variable_mesh.has_field(e.field_name)||this.variable_mesh.add_field(e.field_name,e.array)}}n.serializers=Object.assign(Object.assign({},a.DOMWidgetModel.serializers),{px:d.TH,pdx:d.TH,py:d.TH,pdy:d.TH,field_values:{deserialize:a.unpack_models}}),n.model_name="VariableMeshModel",n.model_module=l.o,n.model_module_version=l.Y,s()}catch(e){s(e)}}))},657:(e,t,i)=>{i.d(t,{Y:()=>a,o:()=>l});const s=i(147),a=s.version,l=s.name},42:(e,t,i)=>{i.d(t,{f:()=>d,t:()=>r});var s=i(216),a=i(44),l=i(657);class d extends a.CanvasModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:d.model_name,_model_module:d.model_module,_model_module_version:d.model_module_version,_view_name:d.view_name,_view_module:d.view_module,_view_module_version:d.view_module_version,min_val:void 0,max_val:void 0,is_log:!0,colormap_name:"viridis",colormaps:null,frb_model:null,variable_mesh_model:null,current_field:"ones",image_bitmap:void 0,image_data:void 0,_dirty_frb:!1,_dirty_bitmap:!1})}initialize(e,t){super.initialize(e,t),this.frb_model=this.get("frb_model"),this.variable_mesh_model=this.get("variable_mesh_model"),this.colormaps=this.get("colormaps"),this.current_field=this.get("current_field")}}d.serializers=Object.assign(Object.assign({},a.CanvasModel.serializers),{frb_model:{deserialize:s.unpack_models},variable_mesh_model:{deserialize:s.unpack_models},colormaps:{deserialize:s.unpack_models}}),d.view_name="WidgytsCanvasView",d.view_module=l.o,d.view_module_version=l.Y,d.model_name="WidgytsCanvasModel",d.model_module=l.o,d.model_module_version=l.Y;class r extends a.CanvasView{render(){this.drag=!1,this.locked=!0,super.render(),this.initializeArrays().then((()=>{this.setupEventListeners(),this.locked=!1,this.updateCanvas()}))}setupEventListeners(){this.model.frb_model.on_some_change(["width","height"],this.resizeFromFRB,this),this.model.frb_model.on_some_change(["view_center","view_width"],this.dirtyFRB,this),this.model.on_some_change(["_dirty_frb","_dirty_bitmap"],this.updateBitmap,this),this.model.on_some_change(["min_val","max_val","colormap_name","is_log"],this.dirtyBitmap,this),this.model.on("change:current_field",this.updateCurrentField,this),this.el.addEventListener("wheel",this.conductZoom.bind(this)),this.el.addEventListener("mousedown",this.startDrag.bind(this)),this.el.addEventListener("mousemove",this.conductDrag.bind(this)),window.addEventListener("mouseup",this.endDrag.bind(this))}async updateCurrentField(){return this.model.current_field=this.model.get("current_field"),this.dirtyBitmap(),this.dirtyFRB(),this.updateBitmap()}conductZoom(e){e.preventDefault();const t=this.model.frb_model.get("view_width");let i=0;if(e.deltaMode===e.DOM_DELTA_PIXEL)i=e.deltaY/(this.frbWidth[1]/10);else if(e.deltaMode===e.DOM_DELTA_LINE)i=e.deltaY/2;else if(e.deltaMode===e.DOM_DELTA_PAGE)return;const s=1.1**i,a=[t[0]*s,t[1]*s];this.model.frb_model.set("view_width",a),this.model.frb_model.save_changes()}startDrag(e){this.drag=!0,this.dragStart=[e.offsetX,e.offsetY],this.dragStartCenter=this.model.frb_model.get("view_center")}conductDrag(e){if(!this.drag)return;const t=[e.offsetX-this.dragStart[0],e.offsetY-this.dragStart[1]],i=this.model.frb_model.get("view_width"),s=i[0]/this.frbWidth[0],a=i[1]/this.frbWidth[1]*-1,l=[this.dragStartCenter[0]-s*t[0],this.dragStartCenter[1]-a*t[1]];this.model.frb_model.set("view_center",l)}endDrag(e){this.drag&&(this.drag=!1,this.model.frb_model.save_changes())}dirtyBitmap(){this.model.set("_dirty_bitmap",!0)}dirtyFRB(){this.model.set("_dirty_frb",!0)}async initializeArrays(){this.regenerateBuffer(),this.resizeFromFRB(),await this.createBitmap()}updateCanvas(){this.clear(),void 0!==this.image_bitmap&&this.ctx.drawImage(this.image_bitmap,0,0),void 0!==this.model.canvas&&this.ctx.drawImage(this.model.canvas,0,0)}async updateBitmap(){this.locked||(this.locked=!0,this.model.get("_dirty_frb")&&this.regenerateBuffer(),this.model.get("_dirty_bitmap")&&(await this.createBitmap(),this.updateCanvas()),this.locked=!1)}resizeFromFRB(){if(null!==this.model.frb_model&&null!==this.ctx){const e=this.model.frb_model.get("width"),t=this.model.frb_model.get("height");this.frbWidth=[e,t];const i=e*t;this.image_buffer=new Uint8ClampedArray(4*i),this.image_data=this.ctx.createImageData(e,t)}}regenerateBuffer(){this.model.frb_model.depositDataBuffer(this.model.variable_mesh_model,this.model.current_field),this.model.set("_dirty_frb",!1),this.model.set("_dirty_bitmap",!0)}async createBitmap(){await this.model.colormaps.normalize(this.model.get("colormap_name"),this.model.frb_model.data_buffer,this.image_buffer,this.model.get("min_val"),this.model.get("max_val"),this.model.get("is_log")),this.image_data.data.set(this.image_buffer);const e=this.model.frb_model.get("width"),t=this.model.frb_model.get("height");this.image_bitmap=await createImageBitmap(this.image_data,0,0,e,t),this.model.set("_dirty_bitmap",!1)}}},147:e=>{e.exports=JSON.parse('{"name":"@yt-project/yt-widgets","version":"0.5.1","description":"A Custom Jupyter Widget Library for Interactive Visualization with yt","author":{"name":"The yt Project","email":"yt-dev@python.org"},"contributors":[{"name":"Nathanael Claussen","email":"nclauss2@illinois.edu"},{"name":"Madicken Munk","email":"madicken.munk@gmail.com"},{"name":"Matthew Turk","email":"matthewturk@gmail.com"}],"keywords":["jupyter","jupyterlab","jupyterlab-extension"],"homepage":"https://github.com/yt-project/widgyts","bugs":{"url":"https://github.com/yt-project/widgyts/issues"},"license":"BSD-3-Clause","files":["lib/**/*.{d.ts,eot,gif,html,jpg,js,js.map,json,png,svg,woff2,ttf,wasm}","style/**/*.{css,.js,eot,gif,html,jpg,json,png,svg,woff2,ttf}"],"main":"lib/index.js","types":"lib/index.d.ts","style":"style/index.css","repository":{"type":"git","url":"https://github.com/yt-project/widgyts.git"},"scripts":{"build":"jlpm run build:lib && jlpm run build:labextension:dev","build:prod":"jlpm run build:lib && jlpm run build:labextension","build:labextension":"jupyter labextension build .","build:labextension:dev":"jupyter labextension build --development True .","build:lib":"tsc","clean":"jlpm run clean:lib","clean:lib":"rimraf lib tsconfig.tsbuildinfo","clean:labextension":"rimraf jupyterlab_nodeeditor/labextension","clean:all":"jlpm run clean:lib && jlpm run clean:labextension","eslint":"eslint . --ext .ts,.tsx --fix","eslint:check":"eslint . --ext .ts,.tsx","install:extension":"jlpm run build","watch":"run-p watch:src watch:labextension","watch:src":"tsc -w","watch:labextension":"jupyter labextension watch ."},"dependencies":{"@data-exp-lab/yt-tools":"^0.4.1","@jupyter-widgets/base":"^1.1.10 || ^2 || ^3 || ^4","@jupyterlab/application":"^3.0.4","@jupyterlab/coreutils":"^5.0.2","@jupyterlab/mainmenu":"^3.0.3","@jupyterlab/services":"^6.0.3","@types/fscreen":"^1.0.1","@types/node":"^10.11.6","@types/three":"^0.141.0","fscreen":"^1.2.0","ipycanvas":"^0.8.2","jupyter-threejs":"^2.3.0"},"devDependencies":{"@jupyterlab/builder":"^3.0.0","@phosphor/application":"^1.6.0","@phosphor/widgets":"^1.6.0","@types/expect.js":"^0.3.29","@types/mocha":"^5.2.5","@types/node":"^10.11.6","@types/webpack-env":"^1.13.6","@typescript-eslint/eslint-plugin":"^3.6.0","@typescript-eslint/parser":"^3.6.0","acorn":"^7.2.0","css-loader":"^3.2.0","eslint":"^7.4.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.4","expect.js":"^0.3.1","fs-extra":"^7.0.0","karma":"^3.1.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.1.0","karma-ie-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-typescript":"^5.0.3","karma-typescript-es6-transform":"^5.0.3","mkdirp":"^0.5.1","mocha":"^5.2.0","npm-run-all":"^4.1.3","prettier":"^2.0.5","rimraf":"^2.6.2","source-map-loader":"^0.2.4","style-loader":"^1.0.0","ts-loader":"^5.2.1","typescript":"^4.1.3","webpack":"^4.20.2","webpack-cli":"^3.1.2"},"sideEffects":["style/*.css","style/index.js"],"jupyterlab":{"discovery":{"server":{"managers":["pip"],"base":{"name":"widgyts"}}},"extension":"lib/plugin","outputDir":"widgyts/labextension","webpackConfig":"./webpack.config.js","sharedPackages":{"@jupyter-widgets/base":{"bundled":false,"singleton":true}}},"styleModule":"style/index.js"}')}}]);