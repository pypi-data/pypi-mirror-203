{"version":3,"sources":["Ravbar.tsx","index.tsx"],"names":["Ravbar","_StreamlitComponentBa","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","render","items","props","icons","state","icon","label","React","createElement","className","style","width","height","backgroundColor","paddingTop","map","text","index","listStyleType","key","onClick","setState","prevState","Streamlit","setComponentValue","_createClass","StreamlitComponentBase","withStreamlitConnection","ReactDOM","document","getElementById"],"mappings":"+PAYMA,G,YAAM,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GA8BP,OA9BOP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KAEDM,OAAS,WACZ,IAAMC,EAAQZ,EAAKa,MAAMR,KAAY,MAC/BS,EAAQd,EAAKa,MAAMR,KAAY,MAMrC,OALAL,EAAKe,MAAQ,CACTC,KAAMF,EAAM,GACZG,MAAOL,EAAM,IAKbM,IAAAC,cAAA,OAAKC,UAAU,kCAAkCC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,gBAAiB,OAAQC,WAAY,WACzHb,EAAMc,KAAI,SAACC,EAAMC,GAAK,OAEnBV,IAAAC,cAAA,QAAMC,UAAS,2CAA8CC,MAAO,CAAEQ,cAAe,SACjFX,IAAAC,cAAA,MAAIC,UAAU,MACVU,IAAKF,EACLG,QAAS,kBAAM/B,EAAKgC,UAChB,SAAAC,GAAS,MAAK,CAAEjB,KAAMF,EAAMc,GAAQX,MAAOU,MAC3C,kBAAMO,IAAUC,kBAAkBR,QAGtCT,IAAAC,cAAA,QAAMC,UAAU,0BAA0BN,EAAMc,WAOvE5B,EAAA,OAAAoC,YAAAzC,GA9BO,CAAS0C,MAoCNC,cAAwB3C,GC5CvC4C,IAAS5B,OACLO,IAAAC,cAACxB,EAAM,MACT6C,SAASC,eAAe,W","file":"static/js/main.46c6351c.chunk.js","sourcesContent":["import {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport { Drawer, List, ListItem, ListItemButton, ListItemText } from '@mui/material';\nimport { Box } from \"@mui/system\";\nimport \"./component.css\";\nimport \"./icons/icon.css\";\n\n\nclass Ravbar extends StreamlitComponentBase {\n\n    public render = (): ReactNode => {\n        const items = this.props.args['paths']\n        const icons = this.props.args['icons']\n        this.state = {\n            icon: icons[0],\n            label: items[0]\n        }\n\n        return (\n\n            <div className=\"d-flex flex-column bd-highlight\" style={{ width: \"100%\", height: \"100%\", backgroundColor: \"#111\", paddingTop: \"-100px\" }}>\n                {items.map((text, index) => (\n\n                    <span className={`tab-container p-4 flex-fill bd-highlight`} style={{ listStyleType: \"none\" }}>\n                        <li className=\"tab\"\n                            key={index}\n                            onClick={() => this.setState(\n                                prevState => ({ icon: icons[index], label: text }),\n                                () => Streamlit.setComponentValue(text)\n                            )}>\n                            {/* flexbox for even spacing */}\n                            <span className=\"material-icons md-dark\">{icons[index]}</span>\n                        </li>\n                    </span>\n\n                ))}\n            </div>\n        )\n    }\n\n\n}\n\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(Ravbar)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Ravbar from \"./Ravbar\"\n\nReactDOM.render(\n    <Ravbar />,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}