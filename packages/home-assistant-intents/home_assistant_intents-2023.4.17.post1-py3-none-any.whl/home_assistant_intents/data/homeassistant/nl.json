{
  "language": "nl",
  "intents": {
    "HassTurnOff": {
      "data": [
        {
          "sentences": [
            "[<doe>|<zou>] [<alle>] <ventilator> [<naar>] uit [[willen|kunnen] <doe>] <in> <area>",
            "[<doe>|<zou>] [<alle>] <ventilator> <in> <area> [<naar>] uit [[willen|kunnen] <doe>]",
            "[<doe>|<zou>] [(<alle>|<in>)] <area> <ventilator> [<naar>] uit [[willen|kunnen] <doe>]",
            "[<zou>] [(<alle>|<in>)] [<area>[ ]]<ventilator> [<in> <area>] [willen|kunnen] (uit[ ]zetten|uitschakelen)"
          ],
          "response": "fans_area",
          "slots": {
            "domain": "fan",
            "name": "all"
          }
        },
        {
          "sentences": [
            "[<doe>|<zou>] ((overal|<alle>) <ventilator>|<ventilator> overal) uit [[willen|kunnen] <doe>]"
          ],
          "response": "fan_all",
          "slots": {
            "domain": "fan",
            "area": "all",
            "name": "all"
          }
        },
        {
          "sentences": [
            "[<doe>|<zou>] <name>[ ][<type>] [<naar>] uit [[willen|kunnen] <doe>]",
            "[<zou>] <name>[ ][<type>] [willen|kunnen] (uit[ ]zetten|uitschakelen)"
          ],
          "excludes_context": {
            "domain": [
              "cover",
              "script"
            ]
          }
        },
        {
          "sentences": [
            "[<doe>|<zou>] [<alle>] <lamp> [<naar>] uit [[willen|kunnen] <doe>] <in> <area>",
            "[<doe>|<zou>] [<alle>] <lamp> <in> <area> [<naar>] uit [[willen|kunnen] <doe>]",
            "[<doe>|<zou>] [(<alle>|<in>)] <area>[ ]<lamp> [<naar>] uit [[willen|kunnen] <doe>]",
            "[<zou>] [(<alle>|<in>)] [<area>[ ]]<lamp> [<in> <area>] [willen|kunnen] (uit[ ]zetten|uitschakelen)"
          ],
          "response": "lights_area",
          "slots": {
            "domain": "light",
            "name": "all"
          }
        },
        {
          "sentences": [
            "[<doe>|<zou>] ((overal|<alle>) <lamp>|<lamp> overal) uit [[willen|kunnen] <doe>]"
          ],
          "response": "light_all",
          "slots": {
            "domain": "light",
            "area": "all",
            "name": "all"
          }
        },
        {
          "sentences": [
            "sluit <name>",
            "[<doe>|<zou>] <name> <dicht> [[willen|kunnen] <doe>]"
          ],
          "response": "cover",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "sluit [de] garage[ ][deur]",
            "[<doe>|<zou>] [de] garage[ ][deur] dicht [[willen|kunnen] <doe>]"
          ],
          "response": "cover_device_class",
          "slots": {
            "device_class": "garage",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "sluit <name> <in> <area>",
            "[<doe>|<zou>] <name> (<dicht> <in> <area>|<in> <area> <dicht>) [[willen|kunnen] <doe>]",
            "<zou> <name> <in> <area> (willen|kunnen) [<dicht>]"
          ],
          "response": "cover",
          "slots": {
            "device_class": [
              "blind",
              "curtain",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "sluit [de|het] <curtain> <in> <area>",
            "[<doe>|<zou>] [de|het] <curtain> (<dicht> <in> <area>|<in> <area> <dicht>) [[willen|kunnen] <doe>]",
            "<zou> [de|het] <curtain> <in> <area> [willen|kunnen] <dicht>"
          ],
          "response": "cover",
          "slots": {
            "device_class": "curtain",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "sluit [de|het] (<blind>|<shutter>|<shade>) <in> <area>",
            "[<doe>|<zou>] [de|het] (<blind>|<shutter>|<shade>) (<dicht> <in> <area>|<in> <area> <dicht>) [[willen|kunnen] <doe>]",
            "<zou> [de|het] (<blind>|<shutter>|<shade>) <in> <area> [willen|kunnen] <dicht>"
          ],
          "response": "cover",
          "slots": {
            "device_class": [
              "blind",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "[<doe>|<zou>|haal] <name_area> <van_slot> [[willen|kunnen] (<doe>|halen)] [<in> <area>]",
            "ontgrendel <name_area>",
            "<zou> <name_area> [willen|kunnen] ontgrendelen [<in> <area>]",
            "[<doe>|<zou>] <slot_name_area> open [[willen|kunnen] <doe>] [<in> <area>]",
            "open <slot_name_area>",
            "<zou> <slot_name_area> [willen|kunnen] openen [<in> <area>]"
          ],
          "requires_context": {
            "domain": "lock"
          },
          "response": "lock"
        },
        {
          "sentences": [
            "[<doe>|<zou>] [<alle>] (<slot>|deur[en]) <van_slot> [[willen|kunnen] <doe>] <in> <area>",
            "[<doe>|<zou>] [<alle>] <area>[ |<alle>](<slot>|deur[en]) <van_slot> [[willen|kunnen] <doe>]",
            "[<doe>|<zou>] [<alle>] (<slot>|deur[en]) <in> <area> <van_slot> [[willen|kunnen] <doe>]",
            "ontgrendel [<alle>] (<in> <area>[ |<alle>](<slot>|deur[en])|(<slot>|deur[en]) <in> <area>)",
            "<zou> [<alle>] (<in> <area>[ |<alle>](<slot>|deur[en])|(<slot>|deur[en]) <in> <area>) [willen|kunnen] ontgrendelen",
            "<zou> [<alle>] (<slot>|deur[en]) [willen|kunnen] ontgrendelen <in> <area>",
            "[<doe>|<zou>] [<alle>] <in> <area>[ |<alle>]<slot> open [[willen|kunnen] <doe>]",
            "[<doe>|<zou>] [<alle>] <slot> <in> <area> open [[willen|kunnen] <doe>]",
            "[<doe>|<zou>] [<alle>] <slot> open [[willen|kunnen] <doe>] <in> <area>",
            "open [<alle>] (<in> <area>[ |<alle>]<slot>|<slot> <in> <area>)",
            "<zou> [<alle>] (<in> <area>[ |<alle>]<slot>|<slot> <in> <area>) [willen|kunnen] openen",
            "<zou> [<alle>] <slot> [willen|kunnen] openen <in> <area>"
          ],
          "response": "lock_area",
          "slots": {
            "domain": "lock",
            "name": "all"
          }
        }
      ]
    },
    "HassTurnOn": {
      "data": [
        {
          "sentences": [
            "(activeer|start|schakel) [scene|scène] <name>[ ][scene|scène] [<naar>] [in]",
            "[<doe>|<zou>] [scene|scène] <name>[ ][scene|scène] [<naar>] (aan|in) [[willen|kunnen] <doe>]",
            "[<zou>] <name>[ ][scene|scène] [willen|kunnen] (aan[ ]zetten|inschakelen|starten|activeren)"
          ],
          "requires_context": {
            "domain": "scene"
          },
          "slots": {
            "domain": "scene"
          },
          "response": "scene"
        },
        {
          "sentences": [
            "[<doe>|<zou>] [<alle>] <lamp> [<naar>] aan [[willen|kunnen] <doe>] (in|op) <area>",
            "Schakel [<alle>] <lamp> [<naar>] in (in|op) <area>",
            "[<doe>|<zou>] [<alle>] <lamp> <in> <area> [<naar>] aan [[willen|kunnen] <doe>]",
            "Schakel [<alle>] <lamp> <in> <area> in",
            "[<doe>|<zou>] [(<alle>|<in>)] <area>[ ]<lamp> aan [[willen|kunnen] <doe>]",
            "Schakel [(<alle>|<in>)] <area>[ ]<lamp> in",
            "[<zou>] [(<alle>|<in>)] [<area>[ ]]<lamp> [<in> <area>] [willen|kunnen] (aan[ ]zetten|inschakelen)"
          ],
          "response": "lights_area",
          "slots": {
            "domain": "light",
            "name": "all"
          }
        },
        {
          "sentences": [
            "open <name>",
            "[<doe>|<zou>] <name> <open> [[willen|kunnen] <doe>]"
          ],
          "response": "cover",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "open [de] garage[ ][deur]",
            "[<doe>|<zou>] [de] garage[ ][deur] [<open>] [[willen|kunnen] <doe>]"
          ],
          "response": "cover_device_class",
          "slots": {
            "device_class": "garage",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "open <name> <in> <area>",
            "[<doe> |<zou> ]<name> (<open> <in> <area>|<in> <area> <open>) [[willen|kunnen] <doe>]",
            "<zou> <name> <in> <area> (willen|kunnen) <open>"
          ],
          "response": "cover",
          "slots": {
            "device_class": [
              "blind",
              "curtain",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "open [de|het] <curtain> <in> <area>",
            "[<doe>|<zou>] [de|het] <curtain> (<open> <in> <area>|<in> <area> <open>) [[willen|kunnen] <doe>]",
            "<zou> [de|het] <curtain> <in> <area> [willen|kunnen] <open>"
          ],
          "response": "cover",
          "slots": {
            "device_class": "curtain",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "open [de|het] (<blind>|<shutter>|<shade>) <in> <area>",
            "[<doe>|<zou>] [de|het] (<blind>|<shutter>|<shade>) (<open> <in> <area>|<in> <area> <open>) [[willen|kunnen] <doe>]",
            "<zou> [de|het] (<blind>|<shutter>|<shade>) <in> <area> [willen|kunnen] <open>"
          ],
          "response": "cover",
          "slots": {
            "device_class": [
              "blind",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "[<doe>|<zou>] [<alle>] <ventilator> [<naar>] aan [[willen|kunnen] <doe>] <in> <area>",
            "Schakel [<alle>] <ventilator> [<naar>] in <in> <area>",
            "[<doe>|<zou>] [<alle>] <ventilator> <in> <area> [<naar>] aan [[willen|kunnen] <doe>]",
            "Schakel [<alle>] <ventilator> <in> <area> [<naar>] in",
            "[<doe>|<zou>] [(<alle>|<in>)] <area> <ventilator> [<naar>] aan [[willen|kunnen] <doe>]",
            "Schakel [(<alle>|<in>)] <area>[ ]<ventilator> [<naar>] in",
            "[<zou>] [(<alle>|<in>)] [<area>[ ]]<ventilator> [<in> <area>] [willen|kunnen] (aan[ ]zetten|inschakelen)"
          ],
          "response": "fans_area",
          "slots": {
            "domain": "fan",
            "name": "all"
          }
        },
        {
          "sentences": [
            "[<doe>|<zou>] <name_area> <op_slot> [[willen|kunnen] <doe>] [<in> <area>]",
            "vergrendel <name_area>",
            "<zou> <name_area> [willen|kunnen] vergrendelen [<in> <area>]",
            "[<doe>|<zou>] <slot_name_area> dicht [[willen|kunnen] <doe>] [<in> <area>]",
            "sluit <slot_name_area>",
            "<zou> <slot_name_area> [willen|kunnen] sluiten [<in> <area>]"
          ],
          "requires_context": {
            "domain": "lock"
          },
          "response": "lock"
        },
        {
          "sentences": [
            "[<doe>|<zou>] [<alle>] (<slot>|deur[en]) <op_slot> [[willen|kunnen] <doe>] <in> <area>",
            "[<doe>|<zou>] [<alle>] <area>[ |<alle>](<slot>|deur[en]) <op_slot> [[willen|kunnen] <doe>]",
            "[<doe>|<zou>] [<alle>] (<slot>|deur[en]) <in> <area> <op_slot> [[willen|kunnen] <doe>]",
            "vergrendel [<alle>] (<in> <area>[ |<alle>](<slot>|deur[en])|(<slot>|deur[en]) <in> <area>)",
            "<zou> [<alle>] (<in> <area>[ |<alle>](<slot>|deur[en])|(<slot>|deur[en]) <in> <area>) [willen|kunnen] vergrendelen",
            "<zou> [<alle>] (<slot>|deur[en]) [willen|kunnen] vergrendelen <in> <area>",
            "[<doe>|<zou>] [<alle>] <in> <area>[ |<alle>]<slot> dicht [[willen|kunnen] <doe>]",
            "[<doe>|<zou>] [<alle>] <slot> <in> <area> dicht [[willen|kunnen] <doe>]",
            "[<doe>|<zou>] [<alle>] <slot> dicht [[willen|kunnen] <doe>] <in> <area>",
            "sluit [<alle>] (<in> <area>[ |<alle>]<slot>|<slot> <in> <area>)",
            "<zou> [<alle>] (<in> <area>[ |<alle>]<slot>|<slot> <in> <area>) [willen|kunnen] sluiten",
            "<zou> [<alle>] <slot> [willen|kunnen] sluiten <in> <area>"
          ],
          "response": "lock_area",
          "slots": {
            "domain": "lock",
            "name": "all"
          }
        },
        {
          "sentences": [
            "(activeer|start|schakel) [script] <name>[ ][script] [<naar>] [in]",
            "[<doe>|<zou>] [script] <name>[ ][script] [<naar>] (aan|in) [[willen|kunnen] <doe>]",
            "[<zou>] <name>[ ][script] [willen|kunnen] (aan[ ]zetten|inschakelen|starten|activeren)"
          ],
          "requires_context": {
            "domain": "script"
          },
          "slots": {
            "domain": "script"
          },
          "response": "script"
        },
        {
          "sentences": [
            "[<doe>|<zou>] <name>[ ][<type>] [<naar>] (aan|in) [[willen|kunnen] <doe>]",
            "schakel <name>[ ][<type>] [<naar>] in",
            "[<zou>] <name>[ ][<type>] [willen|kunnen] (aan[ ]zetten|inschakelen)"
          ],
          "excludes_context": {
            "domain": [
              "cover",
              "scene",
              "script"
            ]
          }
        }
      ]
    },
    "HassGetState": {
      "data": [
        {
          "sentences": [
            "<is> [de] [batterij[status]] [van] [<in> <area>][ ]<name>[ ][batterij] [<in> <area>] {bs_battery_states:state} [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "battery"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery"
          }
        },
        {
          "sentences": [
            "<is> [[de] batterij [van]] [<in> <area>][ ]<name>[ ][batterij] [<in> <area>] {bs_battery_charging_states:state} [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          }
        },
        {
          "sentences": [
            "<detecteer> [<met>] <name_area> {bs_carbon_monoxide_states:state} [<in> <area>]",
            "neemt <name_area> {bs_carbon_monoxide_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_carbon_monoxide_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_carbon_monoxide_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_carbon_monoxide_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          }
        },
        {
          "sentences": [
            "(is|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_cold_states:state} [<in> <area>]",
            "neemt <name_area> {bs_cold_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_cold_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_cold_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area>  {bs_cold_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "cold"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "cold"
          }
        },
        {
          "sentences": [
            "<is> <name_area> {bs_connectivity_states:state} [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          }
        },
        {
          "sentences": [
            "<is> <name_area> {bs_door_states:state} [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "door"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "door"
          }
        },
        {
          "sentences": [
            "<is> <name_area> {bs_garage_door_states:state} [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "garage_door"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "garage_door"
          }
        },
        {
          "sentences": [
            "<detecteer> [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_gas_states:state} [<in> <area>]",
            "neemt <name_area> {bs_gas_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_gas_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_gas_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_gas_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "gas"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas"
          }
        },
        {
          "sentences": [
            "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_heat_states:state} [<in> <area>]",
            "neemt <name_area> {bs_heat_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_heat_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_heat_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_heat_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "heat"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "heat"
          }
        },
        {
          "sentences": [
            "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_light_states:state} [<in> <area>]",
            "neemt <name_area> {bs_light_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_light_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_light_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_light_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "light"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "light"
          }
        },
        {
          "sentences": [
            "<is> <name_area> {bs_lock_states:state} [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "lock"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "lock"
          }
        },
        {
          "sentences": [
            "(<is>|<detecteer>) [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_moisture_states:state} [<in> <area>]",
            "neemt <name_area> {bs_moisture_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_moisture_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_moisture_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_moisture_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          }
        },
        {
          "sentences": [
            "<detecteer> [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_motion_states:state} [<in> <area>]",
            "neemt <name_area> {bs_motion_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_motion_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_motion_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_motion_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "motion"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion"
          }
        },
        {
          "sentences": [
            "<detecteer> [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_occupancy_states:state} [<in> <area>]",
            "neemt <name_area> {bs_occupancy_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "(is|zijn|word[t|en]) [er] [<in> <area>] {bs_occupancy_states:state} <detecteer> <name_area>",
            "(is|zijn|wordt[t|en]) [er] [<in> <area>] {bs_occupancy_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_occupancy_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          }
        },
        {
          "sentences": [
            "<is> <name_area> {bs_opening_states:state} [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "opening"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "opening"
          }
        },
        {
          "sentences": [
            "<is> [[de] (kabel[s]|lader[s]) van] [<area>][ ]<name> [<in> <area>] {bs_plug_states:state} [<in> <area>]",
            "<is> [<in> <area>] [[de] (kabel[s]|lader[s]) van] <name>[[ ](lader[s]|kabel[s])]  [<in> <area>] {bs_plug_states:state} [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "plug"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "plug"
          }
        },
        {
          "sentences": [
            "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_power_states:state} [<in> <area>]",
            "neemt <name_area> {bs_power_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_power_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_power_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_power_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "power"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "power"
          }
        },
        {
          "sentences": [
            "<is> <name_area> {bs_presence_states:state} [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "presence"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "presence"
          }
        },
        {
          "sentences": [
            "<is> er [<in> <area>] {bs_problem_states:state} <name_area>",
            "(heeft|<detecteer>) <name_area> {bs_problem_states:state} [<in> <area>]",
            "neemt <name_area> {bs_problem_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_problem_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_problem_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_problem_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "problem"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "problem"
          }
        },
        {
          "sentences": [
            "(<detecteer>|<is>) [er] [ergens] [[<met>] <sensor_area>] {bs_problem_states:state} [<in> <area>]",
            "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_problem_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "problem"
          }
        },
        {
          "sentences": [
            "(is|zijn) er [<in> <area>] <alle> [<in> <area>] {bs_problem_states:state} [<in> <area>]",
            "<detecteer> <alle> <sensor_area> {bs_problem_states:state} [<in> <area>]",
            "<is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_problem_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "problem"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> (nemen|neemt) {bs_problem_states:state} waar [<in> <area>]",
            "Welk[e] <sensor_area> <detecteer> {bs_problem_states:state} [<in> <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "problem"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> <detecteer> [er] [<in> <area>] {bs_problem_states:state} [<in> <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_problem_states:state} [<in> <area>] waar [<in> <area>]",
            "<met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_problem_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "problem"
          }
        },
        {
          "sentences": [
            "{bs_running_states:state} <name_area>",
            "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_running_states:state} [<in> <area>]",
            "neemt <name_area> {bs_running_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_running_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_running_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_running_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "running"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "{bs_running_states:state} [er] [ergens] <sensor_area>",
            "(<detecteer>|<is>) [er] [ergens] [[<met>] <sensor_area>] {bs_running_states:state} [<in> <area>]",
            "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_running_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "{bs_running_states:state} <alle> <sensor_area>",
            "is er [<in> <area>] <alle> [<in> <area>] {bs_running_states:state} [<in> <area>]",
            "(<detecteer>|<is>) <alle> <sensor_area> {bs_running_states:state} [<in> <area>]",
            "<is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_running_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> (nemen|neemt) {bs_running_states:state} waar [<in> <area>]",
            "Welk[e] <sensor_area> [<detecteer>|<is>] {bs_running_states:state} [<in> <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> [<detecteer>|<is>] [er] [<in> <area>] {bs_running_states:state} [<in> <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_running_states:state} [<in> <area>] waar [<in> <area>]",
            "<met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_running_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_safety_states:state} [<in> <area>]",
            "neemt <name_area> {bs_safety_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_safety_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_safety_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_safety_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "safety"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "safety"
          }
        },
        {
          "sentences": [
            "(<detecteer>|<is>) [er] [ergens] [[<met>] <sensor_area>] {bs_safety_states:state} [<in> <area>]",
            "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_safety_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "safety"
          }
        },
        {
          "sentences": [
            "is het [<in> <area>] <alle> [<in> <area>] {bs_safety_states:state} [<in> <area>]",
            "(<detecteer>|<is>) <alle> <sensor_area> {bs_safety_states:state} [<in> <area>]",
            "<is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_safety_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "safety"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> (nemen|neemt) {bs_safety_states:state} waar [<in> <area>]",
            "Welk[e] <sensor_area> <detecteer> {bs_safety_states:state} [<in> <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "safety"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> <detecteer> [er] [<in> <area>] {bs_safety_states:state} [<in> <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_safety_states:state} [<in> <area>] waar [<in> <area>]",
            "<met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_safety_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "safety"
          }
        },
        {
          "sentences": [
            "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_smoke_states:state} [<in> <area>]",
            "neemt <name_area> {bs_smoke_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_smoke_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_smoke_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_smoke_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "(<detecteer>|<is>) [er] [ergens] [[<met>] <sensor_area>] {bs_smoke_states:state} [<in> <area>]",
            "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_smoke_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "<detecteer> <alle> <sensor_area> {bs_smoke_states:state} [<in> <area>]",
            "<is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_smoke_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> (nemen|neemt) {bs_smoke_states:state} waar [<in> <area>]",
            "Welk[e] <sensor_area> <detecteer> {bs_smoke_states:state} [<in> <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> <detecteer> [er] [<in> <area>] {bs_smoke_states:state} [<in> <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_smoke_states:state} [<in> <area>] waar [<in> <area>]",
            "<met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_smoke_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "maakt <name_area> {bs_sound_states:state}",
            "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_sound_states:state} [<in> <area>]",
            "neemt <name_area> {bs_sound_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_sound_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_sound_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_sound_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "sound"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "maakt [er] [ergens] <sensor_area> {bs_sound_states:state}",
            "<is> [er] [ergens] [[<met>] <sensor_area>] {bs_sound_states:state} [[aan het maken] [<in> <area>]|[<in> <area>] [aan het maken]]",
            "<detecteer> [er] [ergens]  <sensor_area> {bs_sound_states:state} [<in> <area>]",
            "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_sound_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "(maakt|maken) <alle> <sensor_area> {bs_sound_states:state}",
            "<is> <alle> <sensor_area> {bs_sound_states:state} [[aan het maken] [<in> <area>]|[<in> <area>] [aan het maken]]",
            "<detecteer> <alle>  <sensor_area> {bs_sound_states:state} [<in> <area>]",
            "<is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_sound_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> [is|zijn] {bs_sound_states:state} [[aan het maken] [<in> <area>]|[<in> <area>] [aan het maken]]",
            "Welk[e] <sensor_area> (nemen|neemt) {bs_sound_states:state} waar [<in> <area>]",
            "Welk[e] <sensor_area> <detecteer> {bs_sound_states:state} [<in> <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> [is|zijn] [er] [<in> <area>] {bs_sound_states:state} [[aan het maken] [<in> <area>]|[<in> <area>] [aan het maken]]",
            "hoe[ ]veel <sensor_area> <detecteer> [er] [<in> <area>] {bs_sound_states:state} [<in> <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_sound_states:state} [<in> <area>] waar [<in> <area>]",
            "<met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_sound_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "(<is>|<detecteer>) [er] [in|op|van|bij] [<area>][ |door |met |bij ]<name> [<in> <area>] {bs_tamper_states:state} [<in> <area>]",
            "neemt <name_area> {bs_tamper_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_tamper_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_tamper_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_tamper_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          }
        },
        {
          "sentences": [
            "<is> [er] [ergens] [[<met>] <sensor_area>] {bs_tamper_states:state} [<in> <area>]",
            "<detecteer> [er] [ergens] [<met>] <sensor_area> {bs_tamper_states:state} [<in> <area>]",
            "<is> [er] [<in> <area>] [ergens] [[<met>] <sensor_area>]  {bs_tamper_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          }
        },
        {
          "sentences": [
            "<is> ([<met>] <alle>|<alle> [<met>]) <sensor_area> {bs_tamper_states:state} [<in> <area>]",
            "<detecteer> <alle>  <sensor_area> {bs_tamper_states:state} [<in> <area>]",
            "<is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_tamper_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> [is|zijn|wordt|worden] {bs_tamper_states:state}",
            "Welk[e] <sensor_area> (nemen|neemt) {bs_tamper_states:state} waar [<in> <area>]",
            "Welk[e] <sensor_area> <detecteer> {bs_tamper_states:state} [<in> <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          }
        },
        {
          "sentences": [
            "[<met>] hoe[ ]veel <sensor_area> [is|zijn|word(t|en)] [er] [<in> <area>] {bs_tamper_states:state} [<in> <area>]",
            "hoe[ ]veel <sensor_area> <detecteer> [er] [<in> <area>] {bs_tamper_states:state} [<in> <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_tamper_states:state} [<in> <area>] waar [<in> <area>]",
            "<met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_tamper_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          }
        },
        {
          "sentences": [
            "<is> [<in> <area>][ ]<name> [[in|op|van] [<area>]] {bs_update_states:state} [<in> <area>]",
            "<is> [er] [<in> <area>] [een] {bs_update_states:state} [klaar|beschikbaar] voor <name_area>",
            "<is> [er] voor <name_area> [een] {bs_update_states:state} [klaar|beschikbaar] [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "update"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update"
          }
        },
        {
          "sentences": [
            "<is> [er] [ergens] <sensor_area> {bs_update_states:state} [<in> <area>]",
            "<is> [er] [ergens]  {bs_update_states:state} [<in> <area>]",
            "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_update_states:state} [voor] (klaar|beschikbaar) [<in> <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update"
          }
        },
        {
          "sentences": [
            "<is> <alle> <sensor_area> {bs_update_states:state} [<in> <area>]",
            "<is> [er] voor <alle> <sensor_area> {bs_update_states:state} (klaar|beschikbaar) [<in> <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> [is|zijn] {bs_update_states:state}",
            "Voor welk[e] <sensor_area> <is> {bs_update_states:state} (klaar|beschikbaar) [<in> <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> [is|zijn] [er] [<in> <area>] {bs_update_states:state} [<in> <area>]",
            "voor hoe[ ]veel <sensor_area> (staat|staan) [er] [<in> <area>] {bs_update_states:state} [<in> <area>] (klaar|beschikbaar) [<in> <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update"
          }
        },
        {
          "sentences": [
            "{bs_vibration_states:state} <name_area>",
            "(is|<detecteer>) [er] <name_area> {bs_vibration_states:state} [<in> <area>]",
            "neemt [<area>][ ]<name> [<in> <area>] {bs_vibration_states:state} (waar [<in> <area>]|[<in> <area>] waar)",
            "<is> [er] [<in> <area>] {bs_vibration_states:state} <detecteer> <name_area>",
            "<is> [er] [<in> <area>] {bs_vibration_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]",
            "<is> [er] <name_area> {bs_vibration_states:state} <detecteer> [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          }
        },
        {
          "sentences": [
            "{bs_vibration_states:state} [er] [ergens] <sensor_area>",
            "<is> [er] [ergens] <sensor_area> {bs_vibration_states:state} [<in> <area>]",
            "<detecteer> [er] [ergens]  <sensor_area> {bs_vibration_states:state} [<in> <area>]",
            "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_vibration_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          }
        },
        {
          "sentences": [
            "{bs_vibration_states:state} <alle> <sensor_area>",
            "<is> <alle> <sensor_area> {bs_vibration_states:state} [<in> <area>]",
            "<detecteer> <alle>  <sensor_area> {bs_vibration_states:state} [<in> <area>]",
            "<is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_vibration_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          }
        },
        {
          "sentences": [
            "Welk[e] <sensor_area> [is|zijn] {bs_vibration_states:state}",
            "Welk[e] <sensor_area> (nemen|neemt) {bs_vibration_states:state} waar [<in> <area>]",
            "Welk[e] <sensor_area> <detecteer> {bs_vibration_states:state} [<in> <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          }
        },
        {
          "sentences": [
            "hoe[ ]veel <sensor_area> [is|zijn] [er] [<in> <area>] {bs_vibration_states:state} [<in> <area>]",
            "hoe[ ]veel <sensor_area> <detecteer> [er] [<in> <area>] {bs_vibration_states:state} [<in> <area>]",
            "hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_vibration_states:state} [<in> <area>] waar [<in> <area>]",
            "<met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_vibration_states:state} [<in> <area>] <detecteer> [<in> <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          }
        },
        {
          "sentences": [
            "<is> <name_area> {bs_window_states:state} [<in> <area>]"
          ],
          "response": "bs_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "window"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "window"
          }
        },
        {
          "sentences": [
            "Wat is [<in> <area>] [[de] [huidige] <staat> [van]] [<area>][ ]<name>[ ][<type>][ ][<staat>] [<in> <area>]",
            "[<in> <area>] [de] [huidige] <staat> [van] [<area>][ ]<name>[ ][<type>]  [<in> <area>]",
            "[<in> <area>][ ]<name>[ ][<type>][ ][<staat>]  [<in> <area>]"
          ],
          "response": "one"
        },
        {
          "sentences": [
            "<is> [<in> <area>] [[de] [huidige] <staat> [van]] <name>[ ][<type>][ ][<staat>] [<in> <area>] [op] {on_off_states:state} [<in> <area>]"
          ],
          "response": "one_yesno",
          "excludes_context": {
            "domain": [
              "cover"
            ]
          }
        },
        {
          "sentences": [
            "<is> er [<in> <area>] {on_off_domains:domain} [<in> <area>] {on_off_states:state} [<in> <area>]"
          ],
          "response": "any"
        },
        {
          "sentences": [
            "<is> [<in> <area>] [<alle>] [de] {on_off_domains:domain} [<in> <area>] {on_off_states:state} [<in> <area>]"
          ],
          "response": "all"
        },
        {
          "sentences": [
            "Welk[e] {on_off_domains:domain} [<in> <area>] <is> [<in> <area>] {on_off_states:state} [<in> <area>]"
          ],
          "response": "which"
        },
        {
          "sentences": [
            "Hoe[ ]veel {on_off_domains:domain} <is> [er] [<in> <area>] {on_off_states:state} [<in> <area>]"
          ],
          "response": "how_many"
        },
        {
          "sentences": [
            "<is> [er] <name_area> {cover_states:state} [<in> <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "cover"
          },
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "<is> [er] [<in> <area>|ergens|nog] [een] {cover_classes:device_class} [<in> <area>] {cover_states:state} [<in> <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "<is> [<in> <area>] [<alle>] [de] {cover_classes:device_class} [<in> <area>] {cover_states:state} [<in> <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "Welk[e] {cover_classes:device_class} [<in> <area>] <is> {cover_states:state} [<in> <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "Hoe[ ]veel {cover_classes:device_class} [<in> <area>] <is> [er] [<in> <area>] {cover_states:state} [<in> <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "<is> [<in> <area>] [de [huidige] [(status|staat|stand) van]] <name> [<in> <area>] {lock_states:state} [<in> <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "lock"
          },
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "<is> er [<in> <area>] <slot> [<in> <area>] {lock_states:state} [<in> <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "<is> [<in> <area>] [<alle>] <slot> [<in> <area>] {lock_states:state} [<in> <area>]",
            "<is> [<in> <area>] [<alle>] [de] deur[en] [<in> <area>] {door_lock_states:state} [<in> <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "Welk[e] <slot> [<in> <area>] <is> [<in> <area>] {lock_states:state} [<in> <area>]",
            "Welk[e] deur[en] [<in> <area>] <is> [<in> <area>] {door_lock_states:state} [<in> <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "Hoe[ ]veel <slot> <is> [er] [<in> <area>] {lock_states:state} [<in> <area>]",
            "Hoe[ ]veel deur[en] <is> [er] [<in> <area>] {door_lock_states:state} [<in> <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "lock"
          }
        }
      ]
    }
  },
  "responses": {
    "errors": {
      "no_intent": "Sorry, ik snap het niet",
      "no_area": "Kan geen {{ area }} vinden",
      "no_domain": "{{ area }} heeft geen {{ domain }}",
      "no_device_class": "{{ area }} heeft geen {{ device_class }}",
      "no_entity": "Kan {{ entity }} niet vinden",
      "handle_error": "Er is iets misgegaan"
    },
    "intents": {
      "HassGetState": {
        "one": "{{ slots.name | capitalize }} is {{ state.state_with_unit }}\n",
        "one_yesno": "{% if query.matched %}\n  Ja\n{% else %}\n  Nee, die is {{ state.state_with_unit }}\n{% endif %}\n",
        "bs_yesno": "{% if query.matched %}\n  Ja\n{% else %}\n  Nee\n{% endif %}\n",
        "any": "{% if query.matched %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    Ja, {{ match[:3] | join(\", \") }} en nog {{ (match | length - 3) }}\n  {%- else -%}\n    Ja,\n    {% for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} en {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% else %}\n  Nee\n{% endif %}\n",
        "all": "{% if not query.unmatched: %}\n  Ja\n{% else %}\n  {% set no_match = query.unmatched | map(attribute=\"name\") | sort | list %}\n  {% if no_match | length > 4 %}\n    Nee, {{ no_match[:3] | join(\", \") }} en nog {{ (no_match | length - 3) }} niet\n  {%- else -%}\n    Nee,\n    {% for name in no_match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} en {% endif -%}\n      {{ name }}\n    {%- endfor %} niet\n  {% endif %}\n{% endif %}\n",
        "which": "{% if not query.matched %}\n  Geen\n{% else %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    {{ match[:3] | join(\", \") }} en nog {{ (match | length - 3) }}\n  {% else %}\n    {%- for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} en {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% endif %}\n",
        "how_many": "{{ query.matched | length }}\n"
      },
      "HassTurnOff": {
        "default": "Uitgezet",
        "lights_area": "Verlichting uitgezet",
        "fans_area": "Ventilatoren uitgezet",
        "cover": "Gesloten",
        "light_all": "Alle lampen uitgezet",
        "fan_all": "Alle ventilatoren uitgezet",
        "cover_device_class": "{{ slots.device_class | capitalize }} gesloten",
        "lock": "Ontgrendeld",
        "lock_area": "Sloten ontgrendeld"
      },
      "HassTurnOn": {
        "default": "Aangezet",
        "lights_area": "Verlichting aangezet",
        "fans_area": "Ventilatoren aangezet",
        "cover": "Geopend",
        "light_all": "Alle lampen aangezet",
        "fan_all": "Alle ventilatoren aangezet",
        "cover_device_class": "{{ slots.device_class | capitalize }} geopend",
        "scene": "Geactiveerd",
        "script": "Gestart",
        "lock": "Vergrendeld",
        "lock_area": "Sloten vergrendeld"
      }
    }
  },
  "lists": {
    "brightness": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "brightness_level": {
      "values": [
        {
          "in": "(max|maximum|maximaal|maximale|[z'n|zijn] hoogst[e])",
          "out": 100
        },
        {
          "in": "(min|minimum|minimaal|minimale|[z'n|zijn] laagst[e])",
          "out": 1
        }
      ]
    },
    "color": {
      "values": [
        {
          "in": "wit",
          "out": "white"
        },
        {
          "in": "zwart",
          "out": "black"
        },
        {
          "in": "rood",
          "out": "red"
        },
        {
          "in": "oranje",
          "out": "orange"
        },
        {
          "in": "geel",
          "out": "yellow"
        },
        {
          "in": "groen",
          "out": "green"
        },
        {
          "in": "blauw",
          "out": "blue"
        },
        {
          "in": "paars",
          "out": "purple"
        },
        {
          "in": "bruin",
          "out": "brown"
        },
        {
          "in": "roze",
          "out": "pink"
        }
      ]
    },
    "temperature": {
      "range": {
        "type": "temperature",
        "from": 0,
        "to": 100
      }
    },
    "temperature_unit": {
      "values": [
        "celsius",
        {
          "in": "c",
          "out": "celsius"
        },
        "fahrenheit",
        {
          "in": "f",
          "out": "fahrenheit"
        }
      ]
    },
    "on_off_states": {
      "values": [
        {
          "in": "aan",
          "out": "on"
        },
        {
          "in": "uit",
          "out": "off"
        }
      ]
    },
    "on_off_domains": {
      "values": [
        {
          "in": "<lamp>",
          "out": "light"
        },
        {
          "in": "<ventilator>",
          "out": "fan"
        },
        {
          "in": "<schakelaar>",
          "out": "switch"
        }
      ]
    },
    "cover_states": {
      "values": [
        {
          "in": "(open|geopend)",
          "out": "open"
        },
        {
          "in": "(dicht|gesloten)",
          "out": "closed"
        },
        {
          "in": "(open aan het gaan|aan het (openen|open gaan))",
          "out": "opening"
        },
        {
          "in": "(dicht aan het gaan|aan het (dicht gaan|sluiten))",
          "out": "closing"
        }
      ]
    },
    "cover_classes": {
      "values": [
        {
          "in": "<awning>",
          "out": "awning"
        },
        {
          "in": "<blind>",
          "out": "blind"
        },
        {
          "in": "<curtain>",
          "out": "curtain"
        },
        {
          "in": "<door>",
          "out": "door"
        },
        {
          "in": "<garage>",
          "out": "garage"
        },
        {
          "in": "<gate>",
          "out": "gate"
        },
        {
          "in": "<shade>",
          "out": "shade"
        },
        {
          "in": "<shutter>",
          "out": "shutter"
        },
        {
          "in": "<window>",
          "out": "window"
        }
      ]
    },
    "lock_states": {
      "values": [
        {
          "in": "(dicht|[op] gesloten|op slot|vergrendeld)",
          "out": "locked"
        },
        {
          "in": "(open|geopend|niet (dicht|[op] gesloten|op slot|vergrendeld)|ontgrendeld)",
          "out": "unlocked"
        }
      ]
    },
    "door_lock_states": {
      "values": [
        {
          "in": "(op slot|vergrendeld)",
          "out": "locked"
        },
        {
          "in": "(niet (op slot|vergrendeld)|ontgrendeld)",
          "out": "unlocked"
        }
      ]
    },
    "bs_battery_states": {
      "values": [
        {
          "in": "(laag|[bijna] leeg)",
          "out": "on"
        },
        {
          "in": "(normaal|niet (laag|[bijna] leeg))",
          "out": "off"
        }
      ]
    },
    "bs_battery_charging_states": {
      "values": [
        {
          "in": "(aan (het laden|de lader)|opgeladen)",
          "out": "on"
        },
        {
          "in": "niet aan (het laden|de lader)",
          "out": "off"
        }
      ]
    },
    "bs_carbon_monoxide_states": {
      "values": [
        {
          "in": "(CO|koolstof[ ]monoxide)",
          "out": "on"
        },
        {
          "in": "geen (CO|koolstof[ ]monoxide)",
          "out": "off"
        }
      ]
    },
    "bs_cold_states": {
      "values": [
        {
          "in": "(koud[e]|koel[te])",
          "out": "on"
        },
        {
          "in": "(normaal|niet (koud|koel)|geen (koude|koelte))",
          "out": "off"
        }
      ]
    },
    "bs_connectivity_states": {
      "values": [
        {
          "in": "verbonden",
          "out": "on"
        },
        {
          "in": "niet verbonden",
          "out": "off"
        }
      ]
    },
    "bs_door_states": {
      "values": [
        {
          "in": "open",
          "out": "on"
        },
        {
          "in": "(dicht|gesloten)",
          "out": "off"
        }
      ]
    },
    "bs_garage_door_states": {
      "values": [
        {
          "in": "open",
          "out": "on"
        },
        {
          "in": "(dicht|gesloten)",
          "out": "off"
        }
      ]
    },
    "bs_gas_states": {
      "values": [
        {
          "in": "gas",
          "out": "on"
        },
        {
          "in": "geen gas",
          "out": "off"
        }
      ]
    },
    "bs_heat_states": {
      "values": [
        {
          "in": "(warm[te]|heet|hitte)",
          "out": "on"
        },
        {
          "in": "(normaal|niet(warm|heet)|geen (warmte|hitte))",
          "out": "off"
        }
      ]
    },
    "bs_light_states": {
      "values": [
        {
          "in": "[veel] licht",
          "out": "on"
        },
        {
          "in": "(geen|weinig) licht",
          "out": "off"
        }
      ]
    },
    "bs_lock_states": {
      "values": [
        {
          "in": "open",
          "out": "on"
        },
        {
          "in": "op slot",
          "out": "off"
        }
      ]
    },
    "bs_moisture_states": {
      "values": [
        {
          "in": "(nat[tigheid]|water|vocht[ig[heid]])",
          "out": "on"
        },
        {
          "in": "(droog|niet (nat|vochtig)|geen (nattigheid|water|vocht[igheid]))",
          "out": "off"
        }
      ]
    },
    "bs_motion_states": {
      "values": [
        {
          "in": "beweging",
          "out": "on"
        },
        {
          "in": "geen beweging",
          "out": "off"
        }
      ]
    },
    "bs_occupancy_states": {
      "values": [
        {
          "in": "(aanwezigheid|[een] (persoon|personen|mensen))",
          "out": "on"
        },
        {
          "in": "(geen (aanwezigheid|personen))",
          "out": "off"
        }
      ]
    },
    "bs_opening_states": {
      "values": [
        {
          "in": "open",
          "out": "on"
        },
        {
          "in": "gesloten",
          "out": "off"
        }
      ]
    },
    "bs_plug_states": {
      "values": [
        {
          "in": "(ingeplugd|ingestoken)",
          "out": "on"
        },
        {
          "in": "niet (ingeplugd|ingestoken)",
          "out": "off"
        }
      ]
    },
    "bs_power_states": {
      "values": [
        {
          "in": "(stroom|power|vermogen)",
          "out": "on"
        },
        {
          "in": "geen (stroom|power|vermogen)",
          "out": "off"
        }
      ]
    },
    "bs_presence_states": {
      "values": [
        {
          "in": "(thuis|aanwezig)",
          "out": "on"
        },
        {
          "in": "(weg|niet (thuis|aanwezig))",
          "out": "off"
        }
      ]
    },
    "bs_problem_states": {
      "values": [
        {
          "in": "[een] (proble[e]m[en]|issue[s]|complicatie[s])",
          "out": "on"
        },
        {
          "in": "geen (proble[e]m[en]|issue[s]|complicatie[s])",
          "out": "off"
        }
      ]
    },
    "bs_running_states": {
      "values": [
        {
          "in": "[op] (actief|bezig|draait|werkt|[aan [he|']t|te] (draaien|werk[en])|activiteit)",
          "out": "on"
        },
        {
          "in": "(niet [op] (actief|bezig|(aan [he|']t|te) (draaien|werk[en]))|(draaien|werk[en]) niet|[op] inactief|[geen |in]activiteit)",
          "out": "off"
        }
      ]
    },
    "bs_safety_states": {
      "values": [
        {
          "in": "[op] (onveilig|niet veilig|gevaar[lijk])",
          "out": "on"
        },
        {
          "in": "([op] veilig|(niet |on)gevaarlijk|geen gevaar)",
          "out": "off"
        }
      ]
    },
    "bs_smoke_states": {
      "values": [
        {
          "in": "rook",
          "out": "on"
        },
        {
          "in": "geen rook",
          "out": "off"
        }
      ]
    },
    "bs_sound_states": {
      "values": [
        {
          "in": "(geluid[en]|lawaai|herrie)",
          "out": "on"
        },
        {
          "in": "geen (geluid[en]|lawaai|herrie)",
          "out": "off"
        }
      ]
    },
    "bs_tamper_states": {
      "values": [
        {
          "in": "(geknoei[d]|gerommel[d]|sabotage|gesaboteerd)",
          "out": "on"
        },
        {
          "in": "(niet (geknoeid|gerommeld|gesaboteerd)|geen (geknoei|gerommel|sabotage))",
          "out": "off"
        }
      ]
    },
    "bs_update_states": {
      "values": [
        {
          "in": "(niet (actueel|up to date|up-to-date|ge(u|ü)pdate[t])|[een] update[s])",
          "out": "on"
        },
        {
          "in": "(actueel|up to date|up-to-date|ge(u|ü)pdate[t]|geen update[s])",
          "out": "off"
        }
      ]
    },
    "bs_vibration_states": {
      "values": [
        {
          "in": "(trilt|vibreert|[aan het|te] (trillen|vibreren)|trilling[en]|vibratie[s])",
          "out": "on"
        },
        {
          "in": "(niet aan het (trillen|vibreren)|(trilt|vibreert|trillen|vibreren) niet|geen (trilling[en]|vibratie[s]))",
          "out": "off"
        }
      ]
    },
    "bs_window_states": {
      "values": [
        {
          "in": "open",
          "out": "on"
        },
        {
          "in": "(gesloten|dicht)",
          "out": "closed"
        }
      ]
    }
  },
  "expansion_rules": {
    "name": "[de|het] {name}",
    "area": "[de|het] {area}",
    "in": "[in|op|van|bij]",
    "met": "(door|met|bij)",
    "name_area": "(\n  [[door|met|bij] [de|het] {area}][ ]{name}\n  |[<in> [de|het] {area}] [door|met|bij] <name>\n  |[<met>] [de|het] {name} [[in|op|van|bij] <area>]\n)\n",
    "doe": "(zet[ten]|mag|mogen|doe[n]|verander[en]|maak|maken|schakel[en])",
    "zou": "(kan|kun[t]|zal|zou|wil[t]) [je|jij|u]",
    "naar": "(naar|op)",
    "is": "(zijn|is|staa(n|t)|zit[ten]|word[t|en]|lig(t|gen))",
    "alle": "(alle[maal]|elk[e]|ieder[e]|overal)",
    "staat": "(status|staat|stand)",
    "awning": "(luifel[s]|[zonne]scherm[en])",
    "blind": "(jaloezie[ën]|luxaflex)",
    "curtain": "(gordijn[en]|vitrage[s])",
    "door": "deur[en]",
    "garage": "garage[ ]deur[en]",
    "gate": "(hek[ken]|poort[en])",
    "shade": "(screen[s]|rolgordijn[en])",
    "shutter": "(rolluik[en]|shutter[s])",
    "window": "(raam|ramen)",
    "lamp": "[de|het|een] (lamp[en]|licht[en]|verlichting)",
    "ventilator": "[de|een] (ventilator[s|en]|fan[s])",
    "schakelaar": "[de|een] (schakelaar[s]|switch[es]|plug[gen])",
    "afdekking": "[de|het] (<awning>|<blind>|<curtain>|<door>|<garage>|<gate>|<shade>|<shutter>|<window>)",
    "slot": "[de|het|een] ([deur]slot[en]|vergrendeling[en])",
    "op_slot": "<naar> (slot|vergrendeld)",
    "van_slot": "[<naar>] (van [het] slot|ontgrendeld)",
    "slot_name_area": "[<in> <area>] (<slot> [van] [{area}[ ]]<name>|[de|het] {name}[ ]([deur]slot[en]|vergrendeling[en])) [[in|op|van|bij] [de|het] {area}]",
    "type": "(<lamp>|<ventilator>|<afdekking>|<schakelaar>)",
    "helderheid": "[de] (helderheid|felheid|intensiteit|lichtsterkte)",
    "brightness": "{brightness}[%|procent]",
    "temperature": "{temperature}[°|graden] [{temperature_unit}]",
    "warm": "(warm|heet|koud|koel)",
    "open": "(open[en]|omhoog|naar boven|opwaarts)",
    "dicht": "(dicht|omlaag|naar beneden|sluiten|neerwaarts)",
    "detecteer": "(detecteert|registreert|detecteren|registreren|gedetecteerd|geregistreerd|waar[ ]genomen)",
    "sensor": "[een|de] (apparaat|apparaten|sensor[s|en]|iets)",
    "sensor_area": "(\n  [[de|een] {area}][ ](apparaat|apparaten|sensor[s|en])\n  |[<in> [de|het] {area}] <sensor>\n  |[een|de] (apparaat|apparaten|sensor[s|en]|iets) [[in|op|van|bij] <area>]\n)\n"
  },
  "skip_words": [
    "alstublieft",
    "alsjeblieft",
    "aub",
    "ajb",
    "graag"
  ]
}