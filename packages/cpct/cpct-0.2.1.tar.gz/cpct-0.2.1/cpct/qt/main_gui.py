# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(717, 357)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.login_link = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.login_link.setGeometry(QtCore.QRect(0, -5, 241, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.login_link.setFont(font)
        self.login_link.setAutoFillBackground(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../../../chipys_pathofexile_chaos_tool/cpct/cpct/img/poe.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.login_link.setIcon(icon)
        self.login_link.setIconSize(QtCore.QSize(40, 40))
        self.login_link.setAutoRepeatDelay(1000)
        self.login_link.setObjectName("login_link")
        self.select_tab = QtWidgets.QComboBox(self.centralwidget)
        self.select_tab.setGeometry(QtCore.QRect(90, 110, 241, 22))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.select_tab.setFont(font)
        self.select_tab.setEditable(True)
        self.select_tab.setObjectName("select_tab")
        self.select_league = QtWidgets.QComboBox(self.centralwidget)
        self.select_league.setGeometry(QtCore.QRect(90, 80, 241, 22))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.select_league.setFont(font)
        self.select_league.setEditable(True)
        self.select_league.setObjectName("select_league")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 80, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 110, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.count_report_string = QtWidgets.QLabel(self.centralwidget)
        self.count_report_string.setGeometry(QtCore.QRect(10, 280, 701, 41))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        self.count_report_string.setFont(font)
        self.count_report_string.setObjectName("count_report_string")
        self.refresh_link = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.refresh_link.setGeometry(QtCore.QRect(240, -5, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.refresh_link.setFont(font)
        self.refresh_link.setAutoFillBackground(False)
        icon = QtGui.QIcon.fromTheme("refresh")
        self.refresh_link.setIcon(icon)
        self.refresh_link.setIconSize(QtCore.QSize(40, 40))
        self.refresh_link.setAutoRepeatDelay(1000)
        self.refresh_link.setObjectName("refresh_link")
        self.count_weapons = QtWidgets.QProgressBar(self.centralwidget)
        self.count_weapons.setGeometry(QtCore.QRect(340, 10, 271, 23))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        font.setPointSize(10)
        self.count_weapons.setFont(font)
        self.count_weapons.setStyleSheet("QProgressBar::chunk {\n"
"    background-color: #05B8CC;\n"
"    border-radius: 8px;\n"
"}\n"
"QProgressBar {\n"
"    text-align: center;\n"
"    border-radius: 8px;\n"
"}")
        self.count_weapons.setProperty("value", 25)
        self.count_weapons.setObjectName("count_weapons")
        self.count_helmets = QtWidgets.QProgressBar(self.centralwidget)
        self.count_helmets.setGeometry(QtCore.QRect(340, 40, 271, 23))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        font.setPointSize(10)
        self.count_helmets.setFont(font)
        self.count_helmets.setStyleSheet("QProgressBar::chunk {\n"
"    background-color: #05B8CC;\n"
"    border-radius: 8px;\n"
"}\n"
"QProgressBar {\n"
"    text-align: center;\n"
"    border-radius: 8px;\n"
"}")
        self.count_helmets.setProperty("value", 25)
        self.count_helmets.setObjectName("count_helmets")
        self.count_bodies = QtWidgets.QProgressBar(self.centralwidget)
        self.count_bodies.setGeometry(QtCore.QRect(340, 70, 271, 23))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        font.setPointSize(10)
        self.count_bodies.setFont(font)
        self.count_bodies.setStyleSheet("QProgressBar::chunk {\n"
"    background-color: #05B8CC;\n"
"    border-radius: 8px;\n"
"}\n"
"QProgressBar {\n"
"    text-align: center;\n"
"    border-radius: 8px;\n"
"}")
        self.count_bodies.setProperty("value", 25)
        self.count_bodies.setObjectName("count_bodies")
        self.count_amulets = QtWidgets.QProgressBar(self.centralwidget)
        self.count_amulets.setGeometry(QtCore.QRect(340, 190, 271, 23))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        font.setPointSize(10)
        self.count_amulets.setFont(font)
        self.count_amulets.setStyleSheet("QProgressBar::chunk {\n"
"    background-color: #05B8CC;\n"
"    border-radius: 8px;\n"
"}\n"
"QProgressBar {\n"
"    text-align: center;\n"
"    border-radius: 8px;\n"
"}")
        self.count_amulets.setProperty("value", 25)
        self.count_amulets.setObjectName("count_amulets")
        self.count_boots = QtWidgets.QProgressBar(self.centralwidget)
        self.count_boots.setGeometry(QtCore.QRect(340, 100, 271, 23))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        font.setPointSize(10)
        self.count_boots.setFont(font)
        self.count_boots.setStyleSheet("QProgressBar::chunk {\n"
"    background-color: #05B8CC;\n"
"    border-radius: 8px;\n"
"}\n"
"QProgressBar {\n"
"    text-align: center;\n"
"    border-radius: 8px;\n"
"}")
        self.count_boots.setProperty("value", 25)
        self.count_boots.setObjectName("count_boots")
        self.count_gloves = QtWidgets.QProgressBar(self.centralwidget)
        self.count_gloves.setGeometry(QtCore.QRect(340, 130, 271, 23))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        font.setPointSize(10)
        self.count_gloves.setFont(font)
        self.count_gloves.setStyleSheet("QProgressBar::chunk {\n"
"    background-color: #05B8CC;\n"
"    border-radius: 8px;\n"
"}\n"
"QProgressBar {\n"
"    text-align: center;\n"
"    border-radius: 8px;\n"
"}")
        self.count_gloves.setProperty("value", 25)
        self.count_gloves.setObjectName("count_gloves")
        self.count_belts = QtWidgets.QProgressBar(self.centralwidget)
        self.count_belts.setGeometry(QtCore.QRect(340, 160, 271, 23))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        font.setPointSize(10)
        self.count_belts.setFont(font)
        self.count_belts.setStyleSheet("QProgressBar::chunk {\n"
"    background-color: #05B8CC;\n"
"    border-radius: 8px;\n"
"}\n"
"QProgressBar {\n"
"    text-align: center;\n"
"    border-radius: 8px;\n"
"}")
        self.count_belts.setProperty("value", 25)
        self.count_belts.setObjectName("count_belts")
        self.count_rings = QtWidgets.QProgressBar(self.centralwidget)
        self.count_rings.setGeometry(QtCore.QRect(340, 220, 271, 23))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        font.setPointSize(10)
        self.count_rings.setFont(font)
        self.count_rings.setStyleSheet("\n"
"QProgressBar {\n"
"    text-align: center;\n"
"    border-radius: 8px;\n"
"}\n"
"QProgressBar::chunk {\n"
"    background-color: #05B8CC;\n"
"    border-radius: 6px;\n"
"}")
        self.count_rings.setProperty("value", 25)
        self.count_rings.setObjectName("count_rings")
        self.sets_target = QtWidgets.QSpinBox(self.centralwidget)
        self.sets_target.setGeometry(QtCore.QRect(280, 230, 51, 22))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.sets_target.setFont(font)
        self.sets_target.setMinimum(2)
        self.sets_target.setProperty("value", 8)
        self.sets_target.setObjectName("sets_target")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(200, 230, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.item_ = QtWidgets.QLabel(self.centralwidget)
        self.item_.setGeometry(QtCore.QRect(10, 140, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.item_.setFont(font)
        self.item_.setObjectName("item_")
        self.item_1 = QtWidgets.QLabel(self.centralwidget)
        self.item_1.setEnabled(True)
        self.item_1.setGeometry(QtCore.QRect(10, 200, 91, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.item_1.setFont(font)
        self.item_1.setObjectName("item_1")
        self.filter_mode = QtWidgets.QComboBox(self.centralwidget)
        self.filter_mode.setEnabled(True)
        self.filter_mode.setGeometry(QtCore.QRect(110, 200, 221, 22))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.filter_mode.setFont(font)
        self.filter_mode.setObjectName("filter_mode")
        self.item_2 = QtWidgets.QLabel(self.centralwidget)
        self.item_2.setEnabled(True)
        self.item_2.setGeometry(QtCore.QRect(10, 230, 111, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.item_2.setFont(font)
        self.item_2.setObjectName("item_2")
        self.recipe_chaos = QtWidgets.QRadioButton(self.centralwidget)
        self.recipe_chaos.setEnabled(True)
        self.recipe_chaos.setGeometry(QtCore.QRect(70, 230, 91, 17))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(10)
        self.recipe_chaos.setFont(font)
        self.recipe_chaos.setChecked(True)
        self.recipe_chaos.setObjectName("recipe_chaos")
        self.recipe_type = QtWidgets.QButtonGroup(MainWindow)
        self.recipe_type.setObjectName("recipe_type")
        self.recipe_type.addButton(self.recipe_chaos)
        self.recipe_regal = QtWidgets.QRadioButton(self.centralwidget)
        self.recipe_regal.setEnabled(True)
        self.recipe_regal.setGeometry(QtCore.QRect(70, 250, 91, 17))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(10)
        self.recipe_regal.setFont(font)
        self.recipe_regal.setObjectName("recipe_regal")
        self.recipe_type.addButton(self.recipe_regal)
        self.item_filter_browse = QtWidgets.QPushButton(self.centralwidget)
        self.item_filter_browse.setGeometry(QtCore.QRect(90, 140, 241, 23))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(10)
        self.item_filter_browse.setFont(font)
        self.item_filter_browse.setObjectName("item_filter_browse")
        self.client_secret_input = QtWidgets.QLineEdit(self.centralwidget)
        self.client_secret_input.setGeometry(QtCore.QRect(90, 50, 241, 20))
        self.client_secret_input.setObjectName("client_secret_input")
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(10, 50, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.client_path_browse = QtWidgets.QPushButton(self.centralwidget)
        self.client_path_browse.setGeometry(QtCore.QRect(100, 170, 231, 23))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(10)
        self.client_path_browse.setFont(font)
        self.client_path_browse.setObjectName("client_path_browse")
        self.item_3 = QtWidgets.QLabel(self.centralwidget)
        self.item_3.setGeometry(QtCore.QRect(10, 170, 91, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.item_3.setFont(font)
        self.item_3.setObjectName("item_3")
        self.color_link_rings = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.color_link_rings.setGeometry(QtCore.QRect(610, 210, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.color_link_rings.sizePolicy().hasHeightForWidth())
        self.color_link_rings.setSizePolicy(sizePolicy)
        self.color_link_rings.setSizeIncrement(QtCore.QSize(0, 0))
        self.color_link_rings.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.color_link_rings.setFont(font)
        self.color_link_rings.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.color_link_rings.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.color_link_rings.setAutoFillBackground(False)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../img/dropper.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.color_link_rings.setIcon(icon1)
        self.color_link_rings.setIconSize(QtCore.QSize(20, 20))
        self.color_link_rings.setAutoRepeatDelay(1000)
        self.color_link_rings.setObjectName("color_link_rings")
        self.color_link_amulets = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.color_link_amulets.setGeometry(QtCore.QRect(610, 180, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.color_link_amulets.sizePolicy().hasHeightForWidth())
        self.color_link_amulets.setSizePolicy(sizePolicy)
        self.color_link_amulets.setSizeIncrement(QtCore.QSize(0, 0))
        self.color_link_amulets.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.color_link_amulets.setFont(font)
        self.color_link_amulets.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.color_link_amulets.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.color_link_amulets.setAutoFillBackground(False)
        self.color_link_amulets.setIcon(icon1)
        self.color_link_amulets.setIconSize(QtCore.QSize(20, 20))
        self.color_link_amulets.setAutoRepeatDelay(1000)
        self.color_link_amulets.setObjectName("color_link_amulets")
        self.color_link_belts = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.color_link_belts.setGeometry(QtCore.QRect(610, 150, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.color_link_belts.sizePolicy().hasHeightForWidth())
        self.color_link_belts.setSizePolicy(sizePolicy)
        self.color_link_belts.setSizeIncrement(QtCore.QSize(0, 0))
        self.color_link_belts.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.color_link_belts.setFont(font)
        self.color_link_belts.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.color_link_belts.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.color_link_belts.setAutoFillBackground(False)
        self.color_link_belts.setIcon(icon1)
        self.color_link_belts.setIconSize(QtCore.QSize(20, 20))
        self.color_link_belts.setAutoRepeatDelay(1000)
        self.color_link_belts.setObjectName("color_link_belts")
        self.color_link_gloves = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.color_link_gloves.setGeometry(QtCore.QRect(610, 120, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.color_link_gloves.sizePolicy().hasHeightForWidth())
        self.color_link_gloves.setSizePolicy(sizePolicy)
        self.color_link_gloves.setSizeIncrement(QtCore.QSize(0, 0))
        self.color_link_gloves.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.color_link_gloves.setFont(font)
        self.color_link_gloves.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.color_link_gloves.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.color_link_gloves.setAutoFillBackground(False)
        self.color_link_gloves.setIcon(icon1)
        self.color_link_gloves.setIconSize(QtCore.QSize(20, 20))
        self.color_link_gloves.setAutoRepeatDelay(1000)
        self.color_link_gloves.setObjectName("color_link_gloves")
        self.color_link_helmets = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.color_link_helmets.setGeometry(QtCore.QRect(610, 30, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.color_link_helmets.sizePolicy().hasHeightForWidth())
        self.color_link_helmets.setSizePolicy(sizePolicy)
        self.color_link_helmets.setSizeIncrement(QtCore.QSize(0, 0))
        self.color_link_helmets.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.color_link_helmets.setFont(font)
        self.color_link_helmets.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.color_link_helmets.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.color_link_helmets.setAutoFillBackground(False)
        self.color_link_helmets.setIcon(icon1)
        self.color_link_helmets.setIconSize(QtCore.QSize(20, 20))
        self.color_link_helmets.setAutoRepeatDelay(1000)
        self.color_link_helmets.setObjectName("color_link_helmets")
        self.color_link_bodies = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.color_link_bodies.setGeometry(QtCore.QRect(610, 60, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.color_link_bodies.sizePolicy().hasHeightForWidth())
        self.color_link_bodies.setSizePolicy(sizePolicy)
        self.color_link_bodies.setSizeIncrement(QtCore.QSize(0, 0))
        self.color_link_bodies.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.color_link_bodies.setFont(font)
        self.color_link_bodies.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.color_link_bodies.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.color_link_bodies.setAutoFillBackground(False)
        self.color_link_bodies.setIcon(icon1)
        self.color_link_bodies.setIconSize(QtCore.QSize(20, 20))
        self.color_link_bodies.setAutoRepeatDelay(1000)
        self.color_link_bodies.setObjectName("color_link_bodies")
        self.color_link_boots = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.color_link_boots.setGeometry(QtCore.QRect(610, 90, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.color_link_boots.sizePolicy().hasHeightForWidth())
        self.color_link_boots.setSizePolicy(sizePolicy)
        self.color_link_boots.setSizeIncrement(QtCore.QSize(0, 0))
        self.color_link_boots.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.color_link_boots.setFont(font)
        self.color_link_boots.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.color_link_boots.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.color_link_boots.setAutoFillBackground(False)
        self.color_link_boots.setIcon(icon1)
        self.color_link_boots.setIconSize(QtCore.QSize(20, 20))
        self.color_link_boots.setAutoRepeatDelay(1000)
        self.color_link_boots.setObjectName("color_link_boots")
        self.color_link_weapons = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.color_link_weapons.setGeometry(QtCore.QRect(610, 0, 111, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.color_link_weapons.sizePolicy().hasHeightForWidth())
        self.color_link_weapons.setSizePolicy(sizePolicy)
        self.color_link_weapons.setSizeIncrement(QtCore.QSize(0, 0))
        self.color_link_weapons.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.color_link_weapons.setFont(font)
        self.color_link_weapons.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.color_link_weapons.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.color_link_weapons.setAutoFillBackground(False)
        self.color_link_weapons.setIcon(icon1)
        self.color_link_weapons.setIconSize(QtCore.QSize(20, 20))
        self.color_link_weapons.setAutoRepeatDelay(1000)
        self.color_link_weapons.setObjectName("color_link_weapons")
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(200, 250, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.set_delay = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.set_delay.setGeometry(QtCore.QRect(270, 250, 61, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.set_delay.setFont(font)
        self.set_delay.setMinimum(0.01)
        self.set_delay.setMaximum(9.99)
        self.set_delay.setSingleStep(0.01)
        self.set_delay.setProperty("value", 0.04)
        self.set_delay.setObjectName("set_delay")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 717, 21))
        self.menubar.setObjectName("menubar")
        self.menuLinks = QtWidgets.QMenu(self.menubar)
        self.menuLinks.setObjectName("menuLinks")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        MainWindow.setMenuBar(self.menubar)
        self.actionFilterblade_xyz = QtWidgets.QAction(MainWindow)
        self.actionFilterblade_xyz.setObjectName("actionFilterblade_xyz")
        self.actionChipy_dev = QtWidgets.QAction(MainWindow)
        self.actionChipy_dev.setObjectName("actionChipy_dev")
        self.actionPathOfExile_com = QtWidgets.QAction(MainWindow)
        self.actionPathOfExile_com.setObjectName("actionPathOfExile_com")
        self.actionPathOfBuilding_com = QtWidgets.QAction(MainWindow)
        self.actionPathOfBuilding_com.setObjectName("actionPathOfBuilding_com")
        self.actionCraftOfExile_com = QtWidgets.QAction(MainWindow)
        self.actionCraftOfExile_com.setObjectName("actionCraftOfExile_com")
        self.actionMap_RegEx = QtWidgets.QAction(MainWindow)
        self.actionMap_RegEx.setObjectName("actionMap_RegEx")
        self.actionVorici_Calculator = QtWidgets.QAction(MainWindow)
        self.actionVorici_Calculator.setObjectName("actionVorici_Calculator")
        self.actionPoE_Ninja = QtWidgets.QAction(MainWindow)
        self.actionPoE_Ninja.setObjectName("actionPoE_Ninja")
        self.actionPoE_Lab = QtWidgets.QAction(MainWindow)
        self.actionPoE_Lab.setObjectName("actionPoE_Lab")
        self.actionAwakened_PoE_Trade = QtWidgets.QAction(MainWindow)
        self.actionAwakened_PoE_Trade.setObjectName("actionAwakened_PoE_Trade")
        self.actionInput_ClientSecret = QtWidgets.QAction(MainWindow)
        self.actionInput_ClientSecret.setEnabled(True)
        self.actionInput_ClientSecret.setObjectName("actionInput_ClientSecret")
        self.actionGitHub = QtWidgets.QAction(MainWindow)
        self.actionGitHub.setObjectName("actionGitHub")
        self.actionPatreon = QtWidgets.QAction(MainWindow)
        self.actionPatreon.setObjectName("actionPatreon")
        self.action_NOT_AFFILIATED_WITH_ANY = QtWidgets.QAction(MainWindow)
        self.action_NOT_AFFILIATED_WITH_ANY.setObjectName("action_NOT_AFFILIATED_WITH_ANY")
        self.actiondev_button = QtWidgets.QAction(MainWindow)
        self.actiondev_button.setObjectName("actiondev_button")
        self.menuLinks.addAction(self.action_NOT_AFFILIATED_WITH_ANY)
        self.menuLinks.addSeparator()
        self.menuLinks.addAction(self.actionPathOfExile_com)
        self.menuLinks.addAction(self.actionPathOfBuilding_com)
        self.menuLinks.addAction(self.actionCraftOfExile_com)
        self.menuLinks.addAction(self.actionFilterblade_xyz)
        self.menuLinks.addAction(self.actionMap_RegEx)
        self.menuLinks.addAction(self.actionVorici_Calculator)
        self.menuLinks.addAction(self.actionPoE_Ninja)
        self.menuLinks.addAction(self.actionPoE_Lab)
        self.menuLinks.addAction(self.actionAwakened_PoE_Trade)
        self.menuSettings.addAction(self.actionInput_ClientSecret)
        self.menuSettings.addAction(self.actiondev_button)
        self.menuAbout.addAction(self.actionChipy_dev)
        self.menuAbout.addAction(self.actionGitHub)
        self.menuAbout.addAction(self.actionPatreon)
        self.menubar.addAction(self.menuSettings.menuAction())
        self.menubar.addAction(self.menuLinks.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Chipys PathOfExile Choas Tool"))
        self.login_link.setStatusTip(_translate("MainWindow", "Path of Exile sign-in (permissions to read your stash)"))
        self.login_link.setText(_translate("MainWindow", "Log In?"))
        self.label.setText(_translate("MainWindow", "League:"))
        self.label_2.setText(_translate("MainWindow", "Tab:"))
        self.count_report_string.setText(_translate("MainWindow", "TextLabel"))
        self.refresh_link.setStatusTip(_translate("MainWindow", "Manually refresh item counts (Stash only updates after joining a new zone)"))
        self.refresh_link.setText(_translate("MainWindow", "Refresh"))
        self.sets_target.setStatusTip(_translate("MainWindow", "Number of sets to be collecting (for show progress)"))
        self.label_11.setText(_translate("MainWindow", "Set goal:"))
        self.item_.setText(_translate("MainWindow", "Item Fitler:"))
        self.item_1.setText(_translate("MainWindow", "Filter Mode:"))
        self.filter_mode.setStatusTip(_translate("MainWindow", "How to interact with filter (Disabled to leave filters alone)"))
        self.item_2.setText(_translate("MainWindow", "Recipe:"))
        self.recipe_chaos.setStatusTip(_translate("MainWindow", "Chaos Recipe: Unidentified set of all items iLevel +60"))
        self.recipe_chaos.setText(_translate("MainWindow", "Chaos (i60+)"))
        self.recipe_regal.setStatusTip(_translate("MainWindow", "Regal Recipe: Unidentified set of all items iLevel +70"))
        self.recipe_regal.setText(_translate("MainWindow", "Regal (i75+)"))
        self.item_filter_browse.setStatusTip(_translate("MainWindow", "Select the item filter you use or what to modify for Chaos Recipe"))
        self.item_filter_browse.setText(_translate("MainWindow", "Browse"))
        self.client_secret_input.setStatusTip(_translate("MainWindow", "Your client secret, never share this!"))
        self.label_13.setText(_translate("MainWindow", "SECRET:"))
        self.client_path_browse.setStatusTip(_translate("MainWindow", "Browse to your \'Path of Exile\' folder install location"))
        self.client_path_browse.setText(_translate("MainWindow", "Browse"))
        self.item_3.setText(_translate("MainWindow", "PoE Folder:"))
        self.color_link_rings.setStatusTip(_translate("MainWindow", "Select the base background color to use in itemFilter"))
        self.color_link_rings.setText(_translate("MainWindow", "Rings"))
        self.color_link_amulets.setStatusTip(_translate("MainWindow", "Select the base background color to use in itemFilter"))
        self.color_link_amulets.setText(_translate("MainWindow", "Amulets"))
        self.color_link_belts.setStatusTip(_translate("MainWindow", "Select the base background color to use in itemFilter"))
        self.color_link_belts.setText(_translate("MainWindow", "Belts"))
        self.color_link_gloves.setStatusTip(_translate("MainWindow", "Select the base background color to use in itemFilter"))
        self.color_link_gloves.setText(_translate("MainWindow", "Gloves"))
        self.color_link_helmets.setStatusTip(_translate("MainWindow", "Select the base background color to use in itemFilter"))
        self.color_link_helmets.setText(_translate("MainWindow", "Helmets"))
        self.color_link_bodies.setStatusTip(_translate("MainWindow", "Select the base background color to use in itemFilter"))
        self.color_link_bodies.setText(_translate("MainWindow", "Bodies"))
        self.color_link_boots.setStatusTip(_translate("MainWindow", "Select the base background color to use in itemFilter"))
        self.color_link_boots.setText(_translate("MainWindow", "Boots"))
        self.color_link_weapons.setStatusTip(_translate("MainWindow", "Select the base background color to use in itemFilter"))
        self.color_link_weapons.setText(_translate("MainWindow", "Weapons"))
        self.label_12.setText(_translate("MainWindow", "Delay:"))
        self.menuLinks.setTitle(_translate("MainWindow", "Community Tools"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.menuAbout.setTitle(_translate("MainWindow", "About"))
        self.actionFilterblade_xyz.setText(_translate("MainWindow", "Filterblade.xyz"))
        self.actionChipy_dev.setText(_translate("MainWindow", "Chipy.dev"))
        self.actionPathOfExile_com.setText(_translate("MainWindow", "Path of Exile (Official)"))
        self.actionPathOfBuilding_com.setText(_translate("MainWindow", "Path of Building"))
        self.actionCraftOfExile_com.setText(_translate("MainWindow", "Craft of Exile"))
        self.actionMap_RegEx.setText(_translate("MainWindow", "Map RegEx"))
        self.actionVorici_Calculator.setText(_translate("MainWindow", "Vorici Calculator"))
        self.actionPoE_Ninja.setText(_translate("MainWindow", "PoE Ninja"))
        self.actionPoE_Lab.setText(_translate("MainWindow", "PoE Lab"))
        self.actionAwakened_PoE_Trade.setText(_translate("MainWindow", "Awakened PoE Trade"))
        self.actionInput_ClientSecret.setText(_translate("MainWindow", "Request ClientSecret"))
        self.actionGitHub.setText(_translate("MainWindow", "GitHub"))
        self.actionPatreon.setText(_translate("MainWindow", "Patreon"))
        self.action_NOT_AFFILIATED_WITH_ANY.setText(_translate("MainWindow", "*NOT AFFILIATED"))
        self.actiondev_button.setText(_translate("MainWindow", "dev_button"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
