# python build stubs for package ghid
# File is generated by gopy. Do not edit.
# gopy pkg -author Athenian -desc Python bindings to ghid, decoding and encoding utilities for GitHub GraphQL Node IDs -email denys@athenian.co -output python -url https://github.com/athenianco/ghid -vm python3 -version 0.0.1 github.com/athenianco/ghid

from pybindgen import retval, param, Function, Module
import sys

class CheckedFunction(Function):
    def __init__(self, *a, **kw):
        super(CheckedFunction, self).__init__(*a, **kw)
        self._failure_expression = kw.get('failure_expression', '')
        self._failure_cleanup = kw.get('failure_cleanup', '')

    def set_failure_expression(self, expr):
        self._failure_expression = expr

    def set_failure_cleanup(self, expr):
        self._failure_cleanup = expr

    def generate_call(self):
        super(CheckedFunction, self).generate_call()
        check = "PyErr_Occurred()"
        if self._failure_expression:
            check = "{} && {}".format(self._failure_expression, check)
        failure_cleanup = self._failure_cleanup or None
        self.before_call.write_error_check(check, failure_cleanup)

def add_checked_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

def add_checked_string_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_cleanup('if (retval != NULL) free(retval);')
    fn.after_call.add_cleanup_code('free(retval);')
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

mod = Module('_ghid')
mod.add_include('"ghid_go.h"')
mod.add_function('GoPyInit', None, [])
mod.add_function('DecRef', None, [param('int64_t', 'handle')])
mod.add_function('IncRef', None, [param('int64_t', 'handle')])
mod.add_function('NumHandles', retval('int'), [])
mod.add_function('msgpack_RawMessage_CTor', retval('int64_t'), [])
mod.add_function('msgpack_RawMessage_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('msgpack_RawMessage_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('msgpack_RawMessage_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('msgpack_RawMessage_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('msgpack_RawMessage_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_bool_CTor', retval('int64_t'), [])
mod.add_function('Slice_bool_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_bool_elem', retval('bool'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_bool_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_bool_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('bool', 'value')])
mod.add_function('Slice_bool_append', None, [param('int64_t', 'handle'), param('bool', 'value')])
mod.add_function('Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_byte_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_error_CTor', retval('int64_t'), [])
mod.add_function('Slice_error_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_error_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_error_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_error_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_error_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_float32_CTor', retval('int64_t'), [])
mod.add_function('Slice_float32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float32_elem', retval('float'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('float', 'value')])
mod.add_function('Slice_float32_append', None, [param('int64_t', 'handle'), param('float', 'value')])
mod.add_function('Slice_float64_CTor', retval('int64_t'), [])
mod.add_function('Slice_float64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float64_elem', retval('double'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('double', 'value')])
mod.add_function('Slice_float64_append', None, [param('int64_t', 'handle'), param('double', 'value')])
mod.add_function('Slice_int_CTor', retval('int64_t'), [])
mod.add_function('Slice_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int16_CTor', retval('int64_t'), [])
mod.add_function('Slice_int16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int16_elem', retval('int16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int16_t', 'value')])
mod.add_function('Slice_int16_append', None, [param('int64_t', 'handle'), param('int16_t', 'value')])
mod.add_function('Slice_int32_CTor', retval('int64_t'), [])
mod.add_function('Slice_int32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int32_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_int32_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_int64_CTor', retval('int64_t'), [])
mod.add_function('Slice_int64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int64_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int64_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int8_CTor', retval('int64_t'), [])
mod.add_function('Slice_int8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int8_elem', retval('int8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int8_t', 'value')])
mod.add_function('Slice_int8_append', None, [param('int64_t', 'handle'), param('int8_t', 'value')])
mod.add_function('Slice_rune_CTor', retval('int64_t'), [])
mod.add_function('Slice_rune_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_rune_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_rune_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_rune_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_rune_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_string_CTor', retval('int64_t'), [])
mod.add_function('Slice_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_string_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_string_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_string_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_string_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_uint_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint16_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint16_elem', retval('uint16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint16_t', 'value')])
mod.add_function('Slice_uint16_append', None, [param('int64_t', 'handle'), param('uint16_t', 'value')])
mod.add_function('Slice_uint32_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint32_elem', retval('uint32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint32_t', 'value')])
mod.add_function('Slice_uint32_append', None, [param('int64_t', 'handle'), param('uint32_t', 'value')])
mod.add_function('Slice_uint64_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint64_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint64_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint8_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint8_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_uint8_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Array_2_uintptr_CTor', retval('int64_t'), [])
mod.add_function('Array_2_uintptr_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Array_2_uintptr_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Array_2_uintptr_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_interface__CTor', retval('int64_t'), [])
mod.add_function('Slice_interface__len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_interface__elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_interface__subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_interface__set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_interface__append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_reflect_Value_CTor', retval('int64_t'), [])
mod.add_function('Slice_reflect_Value_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_reflect_Value_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_reflect_Value_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_reflect_Value_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_reflect_Value_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Map_interface__interface__CTor', retval('int64_t'), [])
mod.add_function('Map_interface__interface__len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_interface__interface__elem', retval('char*'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_interface__interface__contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_interface__interface__set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('char*', 'value')])
mod.add_function('Map_interface__interface__delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_interface__interface__keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_int_CTor', retval('int64_t'), [])
mod.add_function('Map_string_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_int_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_int_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('int64_t', 'value')])
mod.add_function('Map_string_int_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_int_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_interface__CTor', retval('int64_t'), [])
mod.add_function('Map_string_interface__len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_interface__elem', retval('char*'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_interface__contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_interface__set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('char*', 'value')])
mod.add_function('Map_string_interface__delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_interface__keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_string_CTor', retval('int64_t'), [])
mod.add_function('Map_string_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_string_elem', retval('char*'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_string_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_string_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('char*', 'value')])
mod.add_function('Map_string_string_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_string_keys', retval('int64_t'), [param('int64_t', 'handle')])
add_checked_string_function(mod, 'ghid_KeyV1_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_KeyV1_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_KeyV1NoOrg_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_KeyV1NoOrg_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_KeyV1NoOrg_WithOrgV2', retval('int64_t'), [param('int64_t', '_handle'), param('uint64_t', 'org')])
add_checked_string_function(mod, 'ghid_KeyV1NoRepo_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_KeyV1NoRepo_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_KeyV1NoRepo_WithRepoV2', retval('int64_t'), [param('int64_t', '_handle'), param('uint64_t', 'repo')])
add_checked_function(mod, 'ghid_KeyV2_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_KeyV2_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_Key_Type', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('ghid_ReleaseKeyV1_CTor', retval('int64_t'), [])
mod.add_function('ghid_ReleaseKeyV1_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_ReleaseKeyV1_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_ReleaseKeyV1_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_ReleaseKeyV1_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_ReleaseKeyV1_WithRepoV2', retval('int64_t'), [param('int64_t', '_handle'), param('uint64_t', 'repo')])
mod.add_function('ghid_TagKey_CTor', retval('int64_t'), [])
mod.add_function('ghid_TagKey_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_TagKey_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_TagKey_SHA_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('ghid_TagKey_SHA_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
add_checked_string_function(mod, 'ghid_TagKey_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_TagKey_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_TagKey_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_CommitKey_CTor', retval('int64_t'), [])
mod.add_function('ghid_CommitKey_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_CommitKey_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_CommitKey_SHA_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('ghid_CommitKey_SHA_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
add_checked_string_function(mod, 'ghid_CommitKey_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_CommitKey_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_CommitKey_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_IssueKeyV1_CTor', retval('int64_t'), [])
mod.add_function('ghid_IssueKeyV1_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_IssueKeyV1_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_IssueKeyV1_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_IssueKeyV1_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_IssueKeyV1_WithRepoV2', retval('int64_t'), [param('int64_t', '_handle'), param('uint64_t', 'repo')])
mod.add_function('ghid_PRCommitKeyV2_CTor', retval('int64_t'), [])
mod.add_function('ghid_PRCommitKeyV2_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRCommitKeyV2_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_PRCommitKeyV2_PR_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRCommitKeyV2_PR_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_PRCommitKeyV2_SHA_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRCommitKeyV2_SHA_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
add_checked_string_function(mod, 'ghid_PRCommitKeyV2_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_PRCommitKeyV2_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_PRCommitKeyV2_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_ReleaseKeyV2_CTor', retval('int64_t'), [])
mod.add_function('ghid_ReleaseKeyV2_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_ReleaseKeyV2_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_ReleaseKeyV2_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_ReleaseKeyV2_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_ReleaseKeyV2_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_ReleaseKeyV2_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_ReleaseKeyV2_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_UpgradeOpts_CTor', retval('int64_t'), [])
mod.add_function('ghid_UpgradeOpts_OrgID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_UpgradeOpts_OrgID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_UpgradeOpts_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_UpgradeOpts_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_IssueCommentKeyV1_CTor', retval('int64_t'), [])
mod.add_function('ghid_IssueCommentKeyV1_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_IssueCommentKeyV1_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_IssueCommentKeyV1_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_IssueCommentKeyV1_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_IssueCommentKeyV1_WithRepoV2', retval('int64_t'), [param('int64_t', '_handle'), param('uint64_t', 'repo')])
mod.add_function('ghid_LicenseKeyV2_CTor', retval('int64_t'), [])
mod.add_function('ghid_LicenseKeyV2_SpdxID_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('ghid_LicenseKeyV2_SpdxID_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
add_checked_string_function(mod, 'ghid_LicenseKeyV2_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_LicenseKeyV2_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_OrgKey_CTor', retval('int64_t'), [])
mod.add_function('ghid_OrgKey_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_OrgKey_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_OrgKey_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_OrgKey_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_OrgKey_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_PRReviewCommentKeyV1_CTor', retval('int64_t'), [])
mod.add_function('ghid_PRReviewCommentKeyV1_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRReviewCommentKeyV1_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_PRReviewCommentKeyV1_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_PRReviewCommentKeyV1_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_PRReviewCommentKeyV1_WithRepoV2', retval('int64_t'), [param('int64_t', '_handle'), param('uint64_t', 'repo')])
mod.add_function('ghid_RepoKey_CTor', retval('int64_t'), [])
mod.add_function('ghid_RepoKey_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_RepoKey_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_RepoKey_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_RepoKey_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_RepoKey_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_BotKey_CTor', retval('int64_t'), [])
mod.add_function('ghid_BotKey_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_BotKey_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_BotKey_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_BotKey_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_BotKey_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_MannequinKey_CTor', retval('int64_t'), [])
mod.add_function('ghid_MannequinKey_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_MannequinKey_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_MannequinKey_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_MannequinKey_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_MannequinKey_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_TeamKeyV1_CTor', retval('int64_t'), [])
mod.add_function('ghid_TeamKeyV1_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_TeamKeyV1_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_TeamKeyV1_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_TeamKeyV1_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_TeamKeyV1_WithOrgV2', retval('int64_t'), [param('int64_t', '_handle'), param('uint64_t', 'org')])
mod.add_function('ghid_LicenseKeyV1_CTor', retval('int64_t'), [])
mod.add_function('ghid_LicenseKeyV1_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_LicenseKeyV1_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_LicenseKeyV1_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_LicenseKeyV1_KeyV1', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('ghid_PRReviewCommentKeyV2_CTor', retval('int64_t'), [])
mod.add_function('ghid_PRReviewCommentKeyV2_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRReviewCommentKeyV2_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_PRReviewCommentKeyV2_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRReviewCommentKeyV2_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_PRReviewCommentKeyV2_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_PRReviewCommentKeyV2_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_PRReviewCommentKeyV2_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_PRReviewThreadKeyV2_CTor', retval('int64_t'), [])
mod.add_function('ghid_PRReviewThreadKeyV2_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRReviewThreadKeyV2_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_PRReviewThreadKeyV2_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRReviewThreadKeyV2_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_PRReviewThreadKeyV2_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_PRReviewThreadKeyV2_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_UserKey_CTor', retval('int64_t'), [])
mod.add_function('ghid_UserKey_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_UserKey_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_UserKey_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_UserKey_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_UserKey_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_IssueKeyV2_CTor', retval('int64_t'), [])
mod.add_function('ghid_IssueKeyV2_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_IssueKeyV2_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_IssueKeyV2_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_IssueKeyV2_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_IssueKeyV2_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_IssueKeyV2_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_IssueKeyV2_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_LabelKeyV1_CTor', retval('int64_t'), [])
mod.add_function('ghid_LabelKeyV1_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_LabelKeyV1_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_LabelKeyV1_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_LabelKeyV1_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_LabelKeyV1_WithRepoV2', retval('int64_t'), [param('int64_t', '_handle'), param('uint64_t', 'repo')])
mod.add_function('ghid_LangKey_CTor', retval('int64_t'), [])
mod.add_function('ghid_LangKey_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_LangKey_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_LangKey_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_LangKey_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_LangKey_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_ProjectKeyV2_CTor', retval('int64_t'), [])
mod.add_function('ghid_ProjectKeyV2_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_ProjectKeyV2_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_ProjectKeyV2_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_ProjectKeyV2_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_ProjectKeyV2_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_ProjectKeyV2_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_ProjectKeyV2_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_PRCommitKeyV1_CTor', retval('int64_t'), [])
mod.add_function('ghid_PRCommitKeyV1_PR_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRCommitKeyV1_PR_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_PRCommitKeyV1_SHA_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRCommitKeyV1_SHA_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
add_checked_string_function(mod, 'ghid_PRCommitKeyV1_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_PRCommitKeyV1_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_PRCommitKeyV1_WithRepoV2', retval('int64_t'), [param('int64_t', '_handle'), param('uint64_t', 'repo')])
mod.add_function('ghid_PRReviewKeyV2_CTor', retval('int64_t'), [])
mod.add_function('ghid_PRReviewKeyV2_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRReviewKeyV2_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_PRReviewKeyV2_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRReviewKeyV2_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_PRReviewKeyV2_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_PRReviewKeyV2_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_PRReviewKeyV2_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_ProjectKeyV1_CTor', retval('int64_t'), [])
mod.add_function('ghid_ProjectKeyV1_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_ProjectKeyV1_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_ProjectKeyV1_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_ProjectKeyV1_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_ProjectKeyV1_WithRepoV2', retval('int64_t'), [param('int64_t', '_handle'), param('uint64_t', 'repo')])
mod.add_function('ghid_IssueCommentKeyV2_CTor', retval('int64_t'), [])
mod.add_function('ghid_IssueCommentKeyV2_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_IssueCommentKeyV2_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_IssueCommentKeyV2_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_IssueCommentKeyV2_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_IssueCommentKeyV2_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_IssueCommentKeyV2_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_IssueCommentKeyV2_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_PRKeyV1_CTor', retval('int64_t'), [])
mod.add_function('ghid_PRKeyV1_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRKeyV1_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_PRKeyV1_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_PRKeyV1_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_PRKeyV1_WithRepoV2', retval('int64_t'), [param('int64_t', '_handle'), param('uint64_t', 'repo')])
mod.add_function('ghid_PRReviewThreadKeyV1_CTor', retval('int64_t'), [])
mod.add_function('ghid_PRReviewThreadKeyV1_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRReviewThreadKeyV1_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_PRReviewThreadKeyV1_Vers_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRReviewThreadKeyV1_Vers_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
add_checked_string_function(mod, 'ghid_PRReviewThreadKeyV1_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_PRReviewThreadKeyV1_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_PRReviewThreadKeyV1_WithRepoV2', retval('int64_t'), [param('int64_t', '_handle'), param('uint64_t', 'repo')])
mod.add_function('ghid_RefKey_CTor', retval('int64_t'), [])
mod.add_function('ghid_RefKey_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_RefKey_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_RefKey_RefName_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('ghid_RefKey_RefName_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
add_checked_string_function(mod, 'ghid_RefKey_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_RefKey_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_RefKey_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_TeamKeyV2_CTor', retval('int64_t'), [])
mod.add_function('ghid_TeamKeyV2_OrgID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_TeamKeyV2_OrgID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_TeamKeyV2_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_TeamKeyV2_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_TeamKeyV2_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_TeamKeyV2_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_TeamKeyV2_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_LabelKeyV2_CTor', retval('int64_t'), [])
mod.add_function('ghid_LabelKeyV2_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_LabelKeyV2_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_LabelKeyV2_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_LabelKeyV2_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_LabelKeyV2_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_LabelKeyV2_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_LabelKeyV2_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_PRKeyV2_CTor', retval('int64_t'), [])
mod.add_function('ghid_PRKeyV2_RepoID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRKeyV2_RepoID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
mod.add_function('ghid_PRKeyV2_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRKeyV2_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_PRKeyV2_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_PRKeyV2_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_PRKeyV2_KeyV2', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('ghid_PRReviewKeyV1_CTor', retval('int64_t'), [])
mod.add_function('ghid_PRReviewKeyV1_ID_Get', retval('uint64_t'), [param('int64_t', 'handle')])
mod.add_function('ghid_PRReviewKeyV1_ID_Set', None, [param('int64_t', 'handle'), param('uint64_t', 'val')])
add_checked_string_function(mod, 'ghid_PRReviewKeyV1_Type', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'ghid_PRReviewKeyV1_KeyV1', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ghid_PRReviewKeyV1_WithRepoV2', retval('int64_t'), [param('int64_t', '_handle'), param('uint64_t', 'repo')])
add_checked_function(mod, 'ghid_Decode', retval('int64_t'), [param('char*', 'id')])
add_checked_function(mod, 'ghid_NewKeyV1', retval('int64_t'), [param('char*', 'typ'), param('char*', 'key')])
add_checked_string_function(mod, 'ghid_EncodeV2Obj', retval('char*'), [param('char*', 'typePref'), param('int64_t', 'key')])
add_checked_string_function(mod, 'ghid_Upgrade', retval('char*'), [param('char*', 'id'), param('int64_t', 'opts')])
add_checked_function(mod, 'ghid_UpgradeKey', retval('int64_t'), [param('int64_t', 'key'), param('int64_t', 'opts')])
add_checked_string_function(mod, 'ghid_EncodeV1', retval('char*'), [param('int64_t', 'key')])
add_checked_string_function(mod, 'ghid_EncodeV1Raw', retval('char*'), [param('char*', 'typ'), param('char*', 'key')])
add_checked_string_function(mod, 'ghid_EncodeV2Raw', retval('char*'), [param('char*', 'typePref'), param('int64_t', 'key')])
add_checked_function(mod, 'ghid_DecodeV1', retval('int64_t'), [param('char*', 'id')])
add_checked_function(mod, 'ghid_DecodeV2', retval('int64_t'), [param('char*', 'id')])
add_checked_string_function(mod, 'ghid_EncodeV2', retval('char*'), [param('int64_t', 'key')])
add_checked_function(mod, 'ghid_NewKeyV2', retval('int64_t'), [param('char*', 'typ'), param('int64_t', 'key')])
add_checked_function(mod, 'ghid_PrefixesV2', retval('int64_t'), [])
add_checked_string_function(mod, 'ghid_Type', retval('char*'), [param('char*', 'id')])

mod.generate(open('ghid.c', 'w'))

