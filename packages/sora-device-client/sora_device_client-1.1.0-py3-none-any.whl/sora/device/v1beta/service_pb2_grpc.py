# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sora.device.v1beta import service_pb2 as sora_dot_device_dot_v1beta_dot_service__pb2


class DeviceServiceStub(object):
    """Device <-> Server API
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StreamDeviceState = channel.stream_unary(
                '/sora.device.v1beta.DeviceService/StreamDeviceState',
                request_serializer=sora_dot_device_dot_v1beta_dot_service__pb2.StreamDeviceStateRequest.SerializeToString,
                response_deserializer=sora_dot_device_dot_v1beta_dot_service__pb2.StreamDeviceStateResponse.FromString,
                )
        self.StreamEvent = channel.stream_unary(
                '/sora.device.v1beta.DeviceService/StreamEvent',
                request_serializer=sora_dot_device_dot_v1beta_dot_service__pb2.StreamEventRequest.SerializeToString,
                response_deserializer=sora_dot_device_dot_v1beta_dot_service__pb2.StreamEventResponse.FromString,
                )
        self.SetDeviceState = channel.unary_unary(
                '/sora.device.v1beta.DeviceService/SetDeviceState',
                request_serializer=sora_dot_device_dot_v1beta_dot_service__pb2.SetDeviceStateRequest.SerializeToString,
                response_deserializer=sora_dot_device_dot_v1beta_dot_service__pb2.SetDeviceStateResponse.FromString,
                )
        self.AddEvent = channel.unary_unary(
                '/sora.device.v1beta.DeviceService/AddEvent',
                request_serializer=sora_dot_device_dot_v1beta_dot_service__pb2.AddEventRequest.SerializeToString,
                response_deserializer=sora_dot_device_dot_v1beta_dot_service__pb2.AddEventResponse.FromString,
                )
        self.AuthServerInfo = channel.unary_unary(
                '/sora.device.v1beta.DeviceService/AuthServerInfo',
                request_serializer=sora_dot_device_dot_v1beta_dot_service__pb2.AuthServerInfoRequest.SerializeToString,
                response_deserializer=sora_dot_device_dot_v1beta_dot_service__pb2.AuthServerInfoResponse.FromString,
                )


class DeviceServiceServicer(object):
    """Device <-> Server API
    """

    def StreamDeviceState(self, request_iterator, context):
        """Stream device state updates to server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamEvent(self, request_iterator, context):
        """Stream events to server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeviceState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthServerInfo(self, request, context):
        """Obtain information about the Auth Server

        The Auth Server may be used to initiate a OAuth 2.0 Device Authoriztaion Flow per RFC8628
        to give a device client access to this DeviceService. The credentials to be used are those
        for the AppService, and users will be able to associate a device to a project on the browser
        component of the Authorization Flow
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StreamDeviceState': grpc.stream_unary_rpc_method_handler(
                    servicer.StreamDeviceState,
                    request_deserializer=sora_dot_device_dot_v1beta_dot_service__pb2.StreamDeviceStateRequest.FromString,
                    response_serializer=sora_dot_device_dot_v1beta_dot_service__pb2.StreamDeviceStateResponse.SerializeToString,
            ),
            'StreamEvent': grpc.stream_unary_rpc_method_handler(
                    servicer.StreamEvent,
                    request_deserializer=sora_dot_device_dot_v1beta_dot_service__pb2.StreamEventRequest.FromString,
                    response_serializer=sora_dot_device_dot_v1beta_dot_service__pb2.StreamEventResponse.SerializeToString,
            ),
            'SetDeviceState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeviceState,
                    request_deserializer=sora_dot_device_dot_v1beta_dot_service__pb2.SetDeviceStateRequest.FromString,
                    response_serializer=sora_dot_device_dot_v1beta_dot_service__pb2.SetDeviceStateResponse.SerializeToString,
            ),
            'AddEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.AddEvent,
                    request_deserializer=sora_dot_device_dot_v1beta_dot_service__pb2.AddEventRequest.FromString,
                    response_serializer=sora_dot_device_dot_v1beta_dot_service__pb2.AddEventResponse.SerializeToString,
            ),
            'AuthServerInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthServerInfo,
                    request_deserializer=sora_dot_device_dot_v1beta_dot_service__pb2.AuthServerInfoRequest.FromString,
                    response_serializer=sora_dot_device_dot_v1beta_dot_service__pb2.AuthServerInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sora.device.v1beta.DeviceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeviceService(object):
    """Device <-> Server API
    """

    @staticmethod
    def StreamDeviceState(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/sora.device.v1beta.DeviceService/StreamDeviceState',
            sora_dot_device_dot_v1beta_dot_service__pb2.StreamDeviceStateRequest.SerializeToString,
            sora_dot_device_dot_v1beta_dot_service__pb2.StreamDeviceStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamEvent(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/sora.device.v1beta.DeviceService/StreamEvent',
            sora_dot_device_dot_v1beta_dot_service__pb2.StreamEventRequest.SerializeToString,
            sora_dot_device_dot_v1beta_dot_service__pb2.StreamEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeviceState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sora.device.v1beta.DeviceService/SetDeviceState',
            sora_dot_device_dot_v1beta_dot_service__pb2.SetDeviceStateRequest.SerializeToString,
            sora_dot_device_dot_v1beta_dot_service__pb2.SetDeviceStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sora.device.v1beta.DeviceService/AddEvent',
            sora_dot_device_dot_v1beta_dot_service__pb2.AddEventRequest.SerializeToString,
            sora_dot_device_dot_v1beta_dot_service__pb2.AddEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthServerInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sora.device.v1beta.DeviceService/AuthServerInfo',
            sora_dot_device_dot_v1beta_dot_service__pb2.AuthServerInfoRequest.SerializeToString,
            sora_dot_device_dot_v1beta_dot_service__pb2.AuthServerInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
