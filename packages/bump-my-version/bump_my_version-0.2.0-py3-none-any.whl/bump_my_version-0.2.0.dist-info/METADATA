Metadata-Version: 2.1
Name: bump-my-version
Version: 0.2.0
Summary: Version bump your Python project
Home-page: https://github.com/callowayproject/bump-my-version
Author: Corey Oordt
Author-email: coreyoordt@gmail.com
Keywords: bumpversion
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click
Requires-Dist: pydantic
Requires-Dist: rich-click
Requires-Dist: rich
Requires-Dist: tomlkit
Provides-Extra: dev
Requires-Dist: attrs (==22.2.0) ; extra == 'dev'
Requires-Dist: cfgv (==3.3.1) ; extra == 'dev'
Requires-Dist: click (==8.1.3) ; extra == 'dev'
Requires-Dist: coverage[toml] (==7.2.2) ; extra == 'dev'
Requires-Dist: distlib (==0.3.6) ; extra == 'dev'
Requires-Dist: filelock (==3.10.7) ; extra == 'dev'
Requires-Dist: identify (==2.5.22) ; extra == 'dev'
Requires-Dist: iniconfig (==2.0.0) ; extra == 'dev'
Requires-Dist: markdown-it-py (==2.2.0) ; extra == 'dev'
Requires-Dist: mdurl (==0.1.2) ; extra == 'dev'
Requires-Dist: nodeenv (==1.7.0) ; extra == 'dev'
Requires-Dist: packaging (==23.0) ; extra == 'dev'
Requires-Dist: platformdirs (==3.2.0) ; extra == 'dev'
Requires-Dist: pluggy (==1.0.0) ; extra == 'dev'
Requires-Dist: pre-commit (==3.2.1) ; extra == 'dev'
Requires-Dist: pydantic (==1.10.7) ; extra == 'dev'
Requires-Dist: pygments (==2.14.0) ; extra == 'dev'
Requires-Dist: pytest (==7.2.2) ; extra == 'dev'
Requires-Dist: pytest-cov (==4.0.0) ; extra == 'dev'
Requires-Dist: pytest-mock (==3.10.0) ; extra == 'dev'
Requires-Dist: pyyaml (==6.0) ; extra == 'dev'
Requires-Dist: rich (==13.3.3) ; extra == 'dev'
Requires-Dist: rich-click (==1.6.1) ; extra == 'dev'
Requires-Dist: tomlkit (==0.11.7) ; extra == 'dev'
Requires-Dist: typing-extensions (==4.5.0) ; extra == 'dev'
Requires-Dist: virtualenv (==20.21.0) ; extra == 'dev'
Requires-Dist: alabaster (==0.7.13) ; extra == 'dev'
Requires-Dist: babel (==2.12.1) ; extra == 'dev'
Requires-Dist: beautifulsoup4 (==4.12.0) ; extra == 'dev'
Requires-Dist: certifi (==2022.12.7) ; extra == 'dev'
Requires-Dist: charset-normalizer (==3.1.0) ; extra == 'dev'
Requires-Dist: docutils (==0.19) ; extra == 'dev'
Requires-Dist: furo (==2023.3.27) ; extra == 'dev'
Requires-Dist: ghp-import (==2.1.0) ; extra == 'dev'
Requires-Dist: idna (==3.4) ; extra == 'dev'
Requires-Dist: imagesize (==1.4.1) ; extra == 'dev'
Requires-Dist: jinja2 (==3.1.2) ; extra == 'dev'
Requires-Dist: linkify-it-py (==2.0.0) ; extra == 'dev'
Requires-Dist: markupsafe (==2.1.2) ; extra == 'dev'
Requires-Dist: mdit-py-plugins (==0.3.5) ; extra == 'dev'
Requires-Dist: myst-parser (==1.0.0) ; extra == 'dev'
Requires-Dist: python-dateutil (==2.8.2) ; extra == 'dev'
Requires-Dist: requests (==2.28.2) ; extra == 'dev'
Requires-Dist: six (==1.16.0) ; extra == 'dev'
Requires-Dist: snowballstemmer (==2.2.0) ; extra == 'dev'
Requires-Dist: soupsieve (==2.4) ; extra == 'dev'
Requires-Dist: sphinx (==6.1.3) ; extra == 'dev'
Requires-Dist: sphinx-autodoc-typehints (==1.22) ; extra == 'dev'
Requires-Dist: sphinx-basic-ng (==1.0.0b1) ; extra == 'dev'
Requires-Dist: sphinx-click (==4.4.0) ; extra == 'dev'
Requires-Dist: sphinx-copybutton (==0.5.1) ; extra == 'dev'
Requires-Dist: sphinxcontrib-applehelp (==1.0.4) ; extra == 'dev'
Requires-Dist: sphinxcontrib-devhelp (==1.0.2) ; extra == 'dev'
Requires-Dist: sphinxcontrib-htmlhelp (==2.0.1) ; extra == 'dev'
Requires-Dist: sphinxcontrib-jsmath (==1.0.1) ; extra == 'dev'
Requires-Dist: sphinxcontrib-qthelp (==1.0.3) ; extra == 'dev'
Requires-Dist: sphinxcontrib-serializinghtml (==1.1.5) ; extra == 'dev'
Requires-Dist: uc-micro-py (==1.0.1) ; extra == 'dev'
Requires-Dist: urllib3 (==1.26.15) ; extra == 'dev'
Requires-Dist: git-fame (>=1.12.2) ; extra == 'dev'
Requires-Dist: generate-changelog (>=0.7.6) ; extra == 'dev'
Requires-Dist: pip-tools ; extra == 'dev'
Provides-Extra: test
Requires-Dist: click (==8.1.3) ; extra == 'test'
Requires-Dist: markdown-it-py (==2.2.0) ; extra == 'test'
Requires-Dist: mdurl (==0.1.2) ; extra == 'test'
Requires-Dist: pydantic (==1.10.7) ; extra == 'test'
Requires-Dist: pygments (==2.14.0) ; extra == 'test'
Requires-Dist: rich (==13.3.3) ; extra == 'test'
Requires-Dist: rich-click (==1.6.1) ; extra == 'test'
Requires-Dist: tomlkit (==0.11.7) ; extra == 'test'
Requires-Dist: typing-extensions (==4.5.0) ; extra == 'test'
Requires-Dist: coverage ; extra == 'test'
Requires-Dist: pre-commit ; extra == 'test'
Requires-Dist: pytest-cov ; extra == 'test'
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: pytest-mock ; extra == 'test'

# Bump My Version

[![image](https://img.shields.io/pypi/v/bump-my-version.svg)](https://pypi.org/project/bump-my-version/)
[![image](https://img.shields.io/pypi/l/bump-my-version.svg)](https://pypi.org/project/bump-my-version/)
[![image](https://img.shields.io/pypi/pyversions/bump-my-version.svg)](https://pypi.org/project/bump-my-version/)
[![GitHub Actions](https://github.com/callowayproject/bump-my-version/workflows/CI/badge.svg)](https://github.com/callowayproject/bump-my-version/actions)

> **NOTE**
>
> This is a maintained refactor of the [bump2version fork of](https://github.com/c4urself/bump2version) the excellent [bumpversion project](https://github.com/peritus/bumpversion). The main goals of this refactor were:
>
> - Add support for `pyproject.toml` configuration files.
> - Convert to [click](https://click.palletsprojects.com/en/8.1.x/) for and [rich](https://rich.readthedocs.io/en/stable/index.html) for the CLI interface
> - Add better configuration validation using [Pydantic](https://docs.pydantic.dev)
> - Make the code and tests easier to read and maintain


## Overview

Version-bump your software with a single command!

A small command line tool to simplify releasing software by updating all
version strings in your source code by the correct increment. Also creates
commits and tags:

* version formats are highly configurable
* works without any source code manager, but happily reads tag information from and writes
  commits and tags to Git and Mercurial if available
* just handles text files, so it's not specific to any programming language
* supports Python 3.8+ and PyPy3. Python 3.7 should work but isn't actively tested.

## Future Direction

- Make it easier to get the current version
- Switch having both the version part and files to change as arguments on the command line.
- Make the version part argument _truly_ optional when `--new-version` is specified
- Allow for multiple tags, including one that moves for having a `v2` that always points to the latest version of version 2.
- https://github.com/c4urself/bump2version/issues/253 Have an always increment configuration
- Better UI with [Rich](https://rich.readthedocs.io/en/stable/index.html)

**Potential bugs to verify**

- https://github.com/c4urself/bump2version/issues/267 Ignore-missing error in files flag
- https://github.com/c4urself/bump2version/issues/260 Incorrect behavior when new version == current version
- https://github.com/c4urself/bump2version/issues/248 Potential bug/test case
- https://github.com/c4urself/bump2version/issues/246 Release inconsistency
- https://github.com/c4urself/bump2version/issues/233 How are relative configured file paths resolved?
- https://github.com/c4urself/bump2version/issues/225 Properly resolve configuration file through parent directories when in a git or mercurial repo
- https://github.com/c4urself/bump2version/issues/224 Verify tag doesn't exist

**Documentation opportunities**

- https://github.com/c4urself/bump2version/issues/252 
- https://github.com/c4urself/bump2version/issues/247
- https://github.com/c4urself/bump2version/issues/243
- https://github.com/c4urself/bump2version/issues/240
- https://github.com/c4urself/bump2version/issues/239
- Add dates to releases in changelog
- https://github.com/c4urself/bump2version/issues/200 Add CalVer examples

## Installation

You can download and install the latest version of this software from the Python package index (PyPI) as follows:

```console
pip install --upgrade bump-my-version
```

## Changelog

Please find the changelog here: [CHANGELOG.md](CHANGELOG.md)

## Usage

> **NOTE:** 
>
> Throughout this document, you can use `bumpversion` or `bump-my-version` interchangeably.

There are two modes of operation: On the command line for single-file operation and using a configuration file for more complex multi-file operations.

    bump-my-version [options] part [file]

### `part`

_**required**_

The part of the version to increase, e.g. `minor`.

Valid values include the named groups defined in the `parse` configuration.

Example bumping 0.5.1 to 0.6.0:

    bump-my-version --current-version 0.5.1 minor

### `file`

_**[optional]**_<br />
**default**: none

Additional files to modify.

These files are added to the list of files specified in your configuration file. If you want to rewrite only files specified on the command line, also use `--no-configured-files`.

Example bumping 1.1.9 to 2.0.0:

    bump-my-version --current-version 1.1.9 major setup.py

## Configuration file

`bump-my-version` looks in four places for the configuration file to parse (in order of precedence):

1. `--config-file <FILE>` _(command line argument)_
2. `BUMPVERSION_CONFIG_FILE=file` _(environment variable)_
3. `.bumpversion.cfg` _(legacy)_
4. `.bumpversion.toml`
5. `setup.cfg` _(legacy)_
6. `pyproject.toml`

`.toml` files are recommended due to their type handling. We will likely drop support for `ini`-style formats in the future due to issues with formatting and parsing. You should add your configuration file to your source code management system.

By using a configuration file, you no longer need to specify those options on the command line. The configuration file also allows greater flexibility in specifying how files are modified.

## Command-line Options

Most of the configuration values above can also be given as an option on the command line.
Additionally, the following options are available:

`--dry-run, -n`
Don't touch any files, just pretend. Best used with `--verbose`.

`--no-configured-files`
Will not update/check files specified in the configuration file.

Similar to dry-run, but will also avoid checking the files. Also useful when you want to update just one file with e.g., `bump-my-version --no-configured-files major my-file.txt`

`--verbose, -v`
Print useful information to stderr. If specified more than once, it will output more information.

`--list`
List machine-readable information to stdout for consumption by other programs.

Example output:

    current_version=0.0.18
    new_version=0.0.19

`-h, --help`
Print help and exit

## Using bumpversion in a script

If you need to use the version generated by bumpversion in a script, you can make use of the `--list` option combined with `grep` and `sed`.

Say, for example, that you are using git-flow to manage your project and want to automatically create a release. When you issue `git flow release start` you need to know the new version before applying the change.

The standard way to get it in a bash script is

    bump-my-version --dry-run --list <part> | grep <field name> | sed -r s,"^.*=",,

where `part` is the part of the version number you are updating. You need to specify `--dry-run` to avoid bumpversion acting.

For example, if you are updating the minor number and looking for the new version number, this becomes

    bump-my-version --dry-run --list minor | grep new_version | sed -r s,"^.*=",,

## Development & Contributing

Thank you, contributors! You can find a full list here: https://github.com/callowayproject/bump-my-version/graphs/contributors

See also our [CONTRIBUTING.md](CONTRIBUTING.md)

Development of this happens on GitHub, patches including tests, and documentation
are very welcome, as well as bug reports! Also please open an issue if this
tool does not support every aspect of bumping versions in your development
workflow, as it is intended to be very versatile.

## License

bump-my-version is licensed under the MIT License - see the [LICENSE](LICENSE) file for details
