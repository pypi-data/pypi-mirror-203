# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from common.api.services.common import common_pb2 as services_dot_common_dot_common__pb2
from common.api.services.stats import stats_pb2 as services_dot_stats_dot_stats__pb2


class StatsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/social.stats.StatsService/Ping',
                request_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Pong.FromString,
                )
        self.Increment = channel.unary_unary(
                '/social.stats.StatsService/Increment',
                request_serializer=services_dot_stats_dot_stats__pb2.Stat.SerializeToString,
                response_deserializer=services_dot_stats_dot_stats__pb2.IncrementResponse.FromString,
                )
        self.Decrement = channel.unary_unary(
                '/social.stats.StatsService/Decrement',
                request_serializer=services_dot_stats_dot_stats__pb2.Stat.SerializeToString,
                response_deserializer=services_dot_stats_dot_stats__pb2.DecrementResponse.FromString,
                )
        self.Count = channel.unary_unary(
                '/social.stats.StatsService/Count',
                request_serializer=services_dot_stats_dot_stats__pb2.Stat.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Int64Value.FromString,
                )
        self.GetActors = channel.unary_unary(
                '/social.stats.StatsService/GetActors',
                request_serializer=services_dot_stats_dot_stats__pb2.GetActorsRequest.SerializeToString,
                response_deserializer=services_dot_stats_dot_stats__pb2.GetActorsResponse.FromString,
                )


class StatsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Increment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Decrement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Count(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StatsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Pong.SerializeToString,
            ),
            'Increment': grpc.unary_unary_rpc_method_handler(
                    servicer.Increment,
                    request_deserializer=services_dot_stats_dot_stats__pb2.Stat.FromString,
                    response_serializer=services_dot_stats_dot_stats__pb2.IncrementResponse.SerializeToString,
            ),
            'Decrement': grpc.unary_unary_rpc_method_handler(
                    servicer.Decrement,
                    request_deserializer=services_dot_stats_dot_stats__pb2.Stat.FromString,
                    response_serializer=services_dot_stats_dot_stats__pb2.DecrementResponse.SerializeToString,
            ),
            'Count': grpc.unary_unary_rpc_method_handler(
                    servicer.Count,
                    request_deserializer=services_dot_stats_dot_stats__pb2.Stat.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Int64Value.SerializeToString,
            ),
            'GetActors': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActors,
                    request_deserializer=services_dot_stats_dot_stats__pb2.GetActorsRequest.FromString,
                    response_serializer=services_dot_stats_dot_stats__pb2.GetActorsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'social.stats.StatsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StatsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.stats.StatsService/Ping',
            services_dot_common_dot_common__pb2.Empty.SerializeToString,
            services_dot_common_dot_common__pb2.Pong.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Increment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.stats.StatsService/Increment',
            services_dot_stats_dot_stats__pb2.Stat.SerializeToString,
            services_dot_stats_dot_stats__pb2.IncrementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Decrement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.stats.StatsService/Decrement',
            services_dot_stats_dot_stats__pb2.Stat.SerializeToString,
            services_dot_stats_dot_stats__pb2.DecrementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Count(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.stats.StatsService/Count',
            services_dot_stats_dot_stats__pb2.Stat.SerializeToString,
            services_dot_common_dot_common__pb2.Int64Value.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.stats.StatsService/GetActors',
            services_dot_stats_dot_stats__pb2.GetActorsRequest.SerializeToString,
            services_dot_stats_dot_stats__pb2.GetActorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
