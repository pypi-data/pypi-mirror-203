# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from common.api.services.common import common_pb2 as services_dot_common_dot_common__pb2
from common.api.services.story import story_pb2 as services_dot_story_dot_story__pb2


class StoryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/social.story.StoryService/Ping',
                request_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Pong.FromString,
                )
        self.UploadStoryMedia = channel.unary_unary(
                '/social.story.StoryService/UploadStoryMedia',
                request_serializer=services_dot_common_dot_common__pb2.UploadMediaRequest.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.UploadMediaResponse.FromString,
                )
        self.PublishStory = channel.unary_unary(
                '/social.story.StoryService/PublishStory',
                request_serializer=services_dot_story_dot_story__pb2.Story.SerializeToString,
                response_deserializer=services_dot_story_dot_story__pb2.Story.FromString,
                )
        self.DeleteStory = channel.unary_unary(
                '/social.story.StoryService/DeleteStory',
                request_serializer=services_dot_story_dot_story__pb2.Story.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.GetStory = channel.unary_unary(
                '/social.story.StoryService/GetStory',
                request_serializer=services_dot_story_dot_story__pb2.Story.SerializeToString,
                response_deserializer=services_dot_story_dot_story__pb2.Story.FromString,
                )
        self.GetStories = channel.unary_unary(
                '/social.story.StoryService/GetStories',
                request_serializer=services_dot_story_dot_story__pb2.GetStoryRequest.SerializeToString,
                response_deserializer=services_dot_story_dot_story__pb2.StoryListResponse.FromString,
                )
        self.GetFeed = channel.unary_unary(
                '/social.story.StoryService/GetFeed',
                request_serializer=services_dot_story_dot_story__pb2.GetStoryFeedRequest.SerializeToString,
                response_deserializer=services_dot_story_dot_story__pb2.StoryFeedResponse.FromString,
                )
        self.GetArchives = channel.unary_unary(
                '/social.story.StoryService/GetArchives',
                request_serializer=services_dot_common_dot_common__pb2.Pagination.SerializeToString,
                response_deserializer=services_dot_story_dot_story__pb2.StoryListResponse.FromString,
                )
        self.AdminStoryDelete = channel.unary_unary(
                '/social.story.StoryService/AdminStoryDelete',
                request_serializer=services_dot_story_dot_story__pb2.ToggleStory.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )


class StoryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadStoryMedia(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishStory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteStory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStories(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetArchives(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminStoryDelete(self, request, context):
        """Admin Section. All admin services starts with `AdminSERVICE_NAME`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Pong.SerializeToString,
            ),
            'UploadStoryMedia': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadStoryMedia,
                    request_deserializer=services_dot_common_dot_common__pb2.UploadMediaRequest.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.UploadMediaResponse.SerializeToString,
            ),
            'PublishStory': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishStory,
                    request_deserializer=services_dot_story_dot_story__pb2.Story.FromString,
                    response_serializer=services_dot_story_dot_story__pb2.Story.SerializeToString,
            ),
            'DeleteStory': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteStory,
                    request_deserializer=services_dot_story_dot_story__pb2.Story.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetStory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStory,
                    request_deserializer=services_dot_story_dot_story__pb2.Story.FromString,
                    response_serializer=services_dot_story_dot_story__pb2.Story.SerializeToString,
            ),
            'GetStories': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStories,
                    request_deserializer=services_dot_story_dot_story__pb2.GetStoryRequest.FromString,
                    response_serializer=services_dot_story_dot_story__pb2.StoryListResponse.SerializeToString,
            ),
            'GetFeed': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeed,
                    request_deserializer=services_dot_story_dot_story__pb2.GetStoryFeedRequest.FromString,
                    response_serializer=services_dot_story_dot_story__pb2.StoryFeedResponse.SerializeToString,
            ),
            'GetArchives': grpc.unary_unary_rpc_method_handler(
                    servicer.GetArchives,
                    request_deserializer=services_dot_common_dot_common__pb2.Pagination.FromString,
                    response_serializer=services_dot_story_dot_story__pb2.StoryListResponse.SerializeToString,
            ),
            'AdminStoryDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminStoryDelete,
                    request_deserializer=services_dot_story_dot_story__pb2.ToggleStory.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'social.story.StoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StoryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.story.StoryService/Ping',
            services_dot_common_dot_common__pb2.Empty.SerializeToString,
            services_dot_common_dot_common__pb2.Pong.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadStoryMedia(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.story.StoryService/UploadStoryMedia',
            services_dot_common_dot_common__pb2.UploadMediaRequest.SerializeToString,
            services_dot_common_dot_common__pb2.UploadMediaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PublishStory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.story.StoryService/PublishStory',
            services_dot_story_dot_story__pb2.Story.SerializeToString,
            services_dot_story_dot_story__pb2.Story.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteStory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.story.StoryService/DeleteStory',
            services_dot_story_dot_story__pb2.Story.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.story.StoryService/GetStory',
            services_dot_story_dot_story__pb2.Story.SerializeToString,
            services_dot_story_dot_story__pb2.Story.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.story.StoryService/GetStories',
            services_dot_story_dot_story__pb2.GetStoryRequest.SerializeToString,
            services_dot_story_dot_story__pb2.StoryListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.story.StoryService/GetFeed',
            services_dot_story_dot_story__pb2.GetStoryFeedRequest.SerializeToString,
            services_dot_story_dot_story__pb2.StoryFeedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetArchives(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.story.StoryService/GetArchives',
            services_dot_common_dot_common__pb2.Pagination.SerializeToString,
            services_dot_story_dot_story__pb2.StoryListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminStoryDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.story.StoryService/AdminStoryDelete',
            services_dot_story_dot_story__pb2.ToggleStory.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
