# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from common.api.services.account import account_pb2 as services_dot_account_dot_account__pb2
from common.api.services.common import common_pb2 as services_dot_common_dot_common__pb2


class AccountServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendOtp = channel.unary_unary(
                '/social.account.AccountService/SendOtp',
                request_serializer=services_dot_account_dot_account__pb2.SendOtpRequest.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.SendOtpResponse.FromString,
                )
        self.VerifyOtp = channel.unary_unary(
                '/social.account.AccountService/VerifyOtp',
                request_serializer=services_dot_account_dot_account__pb2.VerifyOtpRequest.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.VerifyOtpResponse.FromString,
                )
        self.Register = channel.unary_unary(
                '/social.account.AccountService/Register',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.VerifyOtpResponse.FromString,
                )
        self.LogOut = channel.unary_unary(
                '/social.account.AccountService/LogOut',
                request_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.GetProfile = channel.unary_unary(
                '/social.account.AccountService/GetProfile',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                )
        self.GetProfiles = channel.unary_unary(
                '/social.account.AccountService/GetProfiles',
                request_serializer=services_dot_account_dot_account__pb2.Accounts.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.Accounts.FromString,
                )
        self.UpdateProfile = channel.unary_unary(
                '/social.account.AccountService/UpdateProfile',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                )
        self.GetNotificationSetting = channel.unary_unary(
                '/social.account.AccountService/GetNotificationSetting',
                request_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.Notification.FromString,
                )
        self.UpdateNotificationSetting = channel.unary_unary(
                '/social.account.AccountService/UpdateNotificationSetting',
                request_serializer=services_dot_account_dot_account__pb2.Notification.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.Find = channel.unary_unary(
                '/social.account.AccountService/Find',
                request_serializer=services_dot_common_dot_common__pb2.FindRequest.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.AccountListResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/social.account.AccountService/Delete',
                request_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.SendOtpResponse.FromString,
                )
        self.DeleteVerify = channel.unary_unary(
                '/social.account.AccountService/DeleteVerify',
                request_serializer=services_dot_account_dot_account__pb2.VerifyOtpRequest.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.Ping = channel.unary_unary(
                '/social.account.AccountService/Ping',
                request_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Pong.FromString,
                )
        self.Follow = channel.unary_unary(
                '/social.account.AccountService/Follow',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.Unfollow = channel.unary_unary(
                '/social.account.AccountService/Unfollow',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.Block = channel.unary_unary(
                '/social.account.AccountService/Block',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.Unblock = channel.unary_unary(
                '/social.account.AccountService/Unblock',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.GetBlockList = channel.unary_unary(
                '/social.account.AccountService/GetBlockList',
                request_serializer=services_dot_account_dot_account__pb2.GetBlackListRequest.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.AccountListResponse.FromString,
                )
        self.GetFollowers = channel.unary_unary(
                '/social.account.AccountService/GetFollowers',
                request_serializer=services_dot_account_dot_account__pb2.AccountListRequest.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.AccountListResponse.FromString,
                )
        self.GetFollowing = channel.unary_unary(
                '/social.account.AccountService/GetFollowing',
                request_serializer=services_dot_account_dot_account__pb2.AccountListRequest.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.GetFollowingResponse.FromString,
                )
        self.GetFollowRequests = channel.unary_unary(
                '/social.account.AccountService/GetFollowRequests',
                request_serializer=services_dot_account_dot_account__pb2.AccountListRequest.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.AccountListResponse.FromString,
                )
        self.RefreshToken = channel.unary_unary(
                '/social.account.AccountService/RefreshToken',
                request_serializer=services_dot_account_dot_account__pb2.RefreshTokenRequest.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.RefreshTokenResponse.FromString,
                )
        self.UploadProfilePhoto = channel.unary_unary(
                '/social.account.AccountService/UploadProfilePhoto',
                request_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.UploadMediaResponse.FromString,
                )
        self.AcceptFollowRequest = channel.unary_unary(
                '/social.account.AccountService/AcceptFollowRequest',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.RejectFollowRequest = channel.unary_unary(
                '/social.account.AccountService/RejectFollowRequest',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.SetVisibility = channel.unary_unary(
                '/social.account.AccountService/SetVisibility',
                request_serializer=services_dot_account_dot_account__pb2.SetVisibilityRequest.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.GetPendingFollowRequests = channel.unary_unary(
                '/social.account.AccountService/GetPendingFollowRequests',
                request_serializer=services_dot_common_dot_common__pb2.Pagination.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.AccountListResponse.FromString,
                )
        self.isFollowing = channel.unary_unary(
                '/social.account.AccountService/isFollowing',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.BooleanValue.FromString,
                )
        self.isFollower = channel.unary_unary(
                '/social.account.AccountService/isFollower',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.BooleanValue.FromString,
                )
        self.isUsernameAvailable = channel.unary_unary(
                '/social.account.AccountService/isUsernameAvailable',
                request_serializer=services_dot_account_dot_account__pb2.CheckUsernameRequest.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.BooleanValue.FromString,
                )
        self.isVerified = channel.unary_unary(
                '/social.account.AccountService/isVerified',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.BooleanValue.FromString,
                )
        self.ToggleAccountVerification = channel.unary_unary(
                '/social.account.AccountService/ToggleAccountVerification',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.ToggleAccountType = channel.unary_unary(
                '/social.account.AccountService/ToggleAccountType',
                request_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.SetPushToken = channel.unary_unary(
                '/social.account.AccountService/SetPushToken',
                request_serializer=services_dot_account_dot_account__pb2.Session.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.SyncContacts = channel.unary_unary(
                '/social.account.AccountService/SyncContacts',
                request_serializer=services_dot_account_dot_account__pb2.SyncContactsRequest.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.Suggestions = channel.unary_unary(
                '/social.account.AccountService/Suggestions',
                request_serializer=services_dot_common_dot_common__pb2.Pagination.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.AccountListResponse.FromString,
                )
        self.AddAddress = channel.unary_unary(
                '/social.account.AccountService/AddAddress',
                request_serializer=services_dot_account_dot_account__pb2.AccountAddress.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.UpdateAddress = channel.unary_unary(
                '/social.account.AccountService/UpdateAddress',
                request_serializer=services_dot_account_dot_account__pb2.AccountAddress.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.DeleteAddress = channel.unary_unary(
                '/social.account.AccountService/DeleteAddress',
                request_serializer=services_dot_account_dot_account__pb2.AccountAddress.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.GetAllAddresses = channel.unary_unary(
                '/social.account.AccountService/GetAllAddresses',
                request_serializer=services_dot_common_dot_common__pb2.Pagination.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.AddressListResponse.FromString,
                )
        self.SetDefaultAddress = channel.unary_unary(
                '/social.account.AccountService/SetDefaultAddress',
                request_serializer=services_dot_account_dot_account__pb2.AccountAddress.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.AddCreditCard = channel.unary_unary(
                '/social.account.AccountService/AddCreditCard',
                request_serializer=services_dot_account_dot_account__pb2.CreditCard.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.UpdateCreditCard = channel.unary_unary(
                '/social.account.AccountService/UpdateCreditCard',
                request_serializer=services_dot_account_dot_account__pb2.CreditCard.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.DeleteCreditCard = channel.unary_unary(
                '/social.account.AccountService/DeleteCreditCard',
                request_serializer=services_dot_account_dot_account__pb2.CreditCard.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.GetAllCreditCards = channel.unary_unary(
                '/social.account.AccountService/GetAllCreditCards',
                request_serializer=services_dot_common_dot_common__pb2.Pagination.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.CreditCardListResponse.FromString,
                )
        self.AdminAccountApproveCreditCard = channel.unary_unary(
                '/social.account.AccountService/AdminAccountApproveCreditCard',
                request_serializer=services_dot_account_dot_account__pb2.CartPublishStatusRequest.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.AdminAccountRejectCreditCard = channel.unary_unary(
                '/social.account.AccountService/AdminAccountRejectCreditCard',
                request_serializer=services_dot_account_dot_account__pb2.CartPublishStatusRequest.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.GetSessions = channel.unary_unary(
                '/social.account.AccountService/GetSessions',
                request_serializer=services_dot_common_dot_common__pb2.Pagination.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.SessionListResponse.FromString,
                )
        self.isSessionActive = channel.unary_unary(
                '/social.account.AccountService/isSessionActive',
                request_serializer=services_dot_account_dot_account__pb2.Session.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.BooleanValue.FromString,
                )
        self.DeleteSession = channel.unary_unary(
                '/social.account.AccountService/DeleteSession',
                request_serializer=services_dot_account_dot_account__pb2.Session.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.AdminAccountDisable = channel.unary_unary(
                '/social.account.AccountService/AdminAccountDisable',
                request_serializer=services_dot_account_dot_account__pb2.ToggleAccount.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.AdminAccountDelete = channel.unary_unary(
                '/social.account.AccountService/AdminAccountDelete',
                request_serializer=services_dot_account_dot_account__pb2.ToggleAccount.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.AdminAccountVerify = channel.unary_unary(
                '/social.account.AccountService/AdminAccountVerify',
                request_serializer=services_dot_account_dot_account__pb2.ToggleAccount.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.AdminAccountBan = channel.unary_unary(
                '/social.account.AccountService/AdminAccountBan',
                request_serializer=services_dot_account_dot_account__pb2.ToggleAccount.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.AdminAccountUpdate = channel.unary_unary(
                '/social.account.AccountService/AdminAccountUpdate',
                request_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                )
        self.AdminAccountAll = channel.unary_unary(
                '/social.account.AccountService/AdminAccountAll',
                request_serializer=services_dot_common_dot_common__pb2.Pagination.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.AccountListResponse.FromString,
                )
        self.AdminSendOTP = channel.unary_unary(
                '/social.account.AccountService/AdminSendOTP',
                request_serializer=services_dot_account_dot_account__pb2.SendOtpRequest.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.SendOtpResponse.FromString,
                )
        self.RootCreateRole = channel.unary_unary(
                '/social.account.AccountService/RootCreateRole',
                request_serializer=services_dot_account_dot_account__pb2.Role.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.Role.FromString,
                )
        self.RootUpdateRole = channel.unary_unary(
                '/social.account.AccountService/RootUpdateRole',
                request_serializer=services_dot_account_dot_account__pb2.Role.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.RootDeleteRole = channel.unary_unary(
                '/social.account.AccountService/RootDeleteRole',
                request_serializer=services_dot_account_dot_account__pb2.Role.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.RootGetAllRoles = channel.unary_unary(
                '/social.account.AccountService/RootGetAllRoles',
                request_serializer=services_dot_common_dot_common__pb2.Pagination.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.RoleListResponse.FromString,
                )
        self.RootAddPermissionToRole = channel.unary_unary(
                '/social.account.AccountService/RootAddPermissionToRole',
                request_serializer=services_dot_account_dot_account__pb2.RolePermission.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.RootRemovePermissionFromRole = channel.unary_unary(
                '/social.account.AccountService/RootRemovePermissionFromRole',
                request_serializer=services_dot_account_dot_account__pb2.RolePermission.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.RootAssignRole = channel.unary_unary(
                '/social.account.AccountService/RootAssignRole',
                request_serializer=services_dot_account_dot_account__pb2.AssignRoleRequest.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.RootUnassignRole = channel.unary_unary(
                '/social.account.AccountService/RootUnassignRole',
                request_serializer=services_dot_account_dot_account__pb2.AssignRoleRequest.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.RootGetAllPermissions = channel.unary_unary(
                '/social.account.AccountService/RootGetAllPermissions',
                request_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.PermissionListResponse.FromString,
                )
        self.RootGetAllAccountsInRole = channel.unary_unary(
                '/social.account.AccountService/RootGetAllAccountsInRole',
                request_serializer=services_dot_account_dot_account__pb2.RoleAccountRequest.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.AccountListResponse.FromString,
                )
        self.RootGetAccountRoles = channel.unary_unary(
                '/social.account.AccountService/RootGetAccountRoles',
                request_serializer=services_dot_account_dot_account__pb2.AccountRoleRequest.SerializeToString,
                response_deserializer=services_dot_account_dot_account__pb2.RoleListResponse.FromString,
                )


class AccountServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendOtp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyOtp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """Register
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LogOut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProfiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNotificationSetting(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNotificationSetting(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Find(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteVerify(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Follow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unfollow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Block(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unblock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFollowers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFollowing(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFollowRequests(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadProfilePhoto(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptFollowRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RejectFollowRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVisibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPendingFollowRequests(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isFollowing(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isFollower(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isUsernameAvailable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isVerified(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ToggleAccountVerification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ToggleAccountType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPushToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncContacts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Suggestions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddAddress(self, request, context):
        """Address
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllAddresses(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDefaultAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCreditCard(self, request, context):
        """Credit Card
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCreditCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCreditCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllCreditCards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminAccountApproveCreditCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminAccountRejectCreditCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSessions(self, request, context):
        """Session
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isSessionActive(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminAccountDisable(self, request, context):
        """Admin Section. All admin services starts with `AdminSERVICE_NAME`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminAccountDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminAccountVerify(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminAccountBan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminAccountUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminAccountAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminSendOTP(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RootCreateRole(self, request, context):
        """root
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RootUpdateRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RootDeleteRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RootGetAllRoles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RootAddPermissionToRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RootRemovePermissionFromRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RootAssignRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RootUnassignRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RootGetAllPermissions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RootGetAllAccountsInRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RootGetAccountRoles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AccountServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendOtp': grpc.unary_unary_rpc_method_handler(
                    servicer.SendOtp,
                    request_deserializer=services_dot_account_dot_account__pb2.SendOtpRequest.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.SendOtpResponse.SerializeToString,
            ),
            'VerifyOtp': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyOtp,
                    request_deserializer=services_dot_account_dot_account__pb2.VerifyOtpRequest.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.VerifyOtpResponse.SerializeToString,
            ),
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.VerifyOtpResponse.SerializeToString,
            ),
            'LogOut': grpc.unary_unary_rpc_method_handler(
                    servicer.LogOut,
                    request_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProfile,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
            ),
            'GetProfiles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProfiles,
                    request_deserializer=services_dot_account_dot_account__pb2.Accounts.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.Accounts.SerializeToString,
            ),
            'UpdateProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfile,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
            ),
            'GetNotificationSetting': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNotificationSetting,
                    request_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.Notification.SerializeToString,
            ),
            'UpdateNotificationSetting': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNotificationSetting,
                    request_deserializer=services_dot_account_dot_account__pb2.Notification.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'Find': grpc.unary_unary_rpc_method_handler(
                    servicer.Find,
                    request_deserializer=services_dot_common_dot_common__pb2.FindRequest.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.AccountListResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.SendOtpResponse.SerializeToString,
            ),
            'DeleteVerify': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteVerify,
                    request_deserializer=services_dot_account_dot_account__pb2.VerifyOtpRequest.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Pong.SerializeToString,
            ),
            'Follow': grpc.unary_unary_rpc_method_handler(
                    servicer.Follow,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'Unfollow': grpc.unary_unary_rpc_method_handler(
                    servicer.Unfollow,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'Block': grpc.unary_unary_rpc_method_handler(
                    servicer.Block,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'Unblock': grpc.unary_unary_rpc_method_handler(
                    servicer.Unblock,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetBlockList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockList,
                    request_deserializer=services_dot_account_dot_account__pb2.GetBlackListRequest.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.AccountListResponse.SerializeToString,
            ),
            'GetFollowers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFollowers,
                    request_deserializer=services_dot_account_dot_account__pb2.AccountListRequest.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.AccountListResponse.SerializeToString,
            ),
            'GetFollowing': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFollowing,
                    request_deserializer=services_dot_account_dot_account__pb2.AccountListRequest.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.GetFollowingResponse.SerializeToString,
            ),
            'GetFollowRequests': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFollowRequests,
                    request_deserializer=services_dot_account_dot_account__pb2.AccountListRequest.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.AccountListResponse.SerializeToString,
            ),
            'RefreshToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshToken,
                    request_deserializer=services_dot_account_dot_account__pb2.RefreshTokenRequest.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.RefreshTokenResponse.SerializeToString,
            ),
            'UploadProfilePhoto': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadProfilePhoto,
                    request_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.UploadMediaResponse.SerializeToString,
            ),
            'AcceptFollowRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptFollowRequest,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'RejectFollowRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.RejectFollowRequest,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'SetVisibility': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVisibility,
                    request_deserializer=services_dot_account_dot_account__pb2.SetVisibilityRequest.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetPendingFollowRequests': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPendingFollowRequests,
                    request_deserializer=services_dot_common_dot_common__pb2.Pagination.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.AccountListResponse.SerializeToString,
            ),
            'isFollowing': grpc.unary_unary_rpc_method_handler(
                    servicer.isFollowing,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.BooleanValue.SerializeToString,
            ),
            'isFollower': grpc.unary_unary_rpc_method_handler(
                    servicer.isFollower,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.BooleanValue.SerializeToString,
            ),
            'isUsernameAvailable': grpc.unary_unary_rpc_method_handler(
                    servicer.isUsernameAvailable,
                    request_deserializer=services_dot_account_dot_account__pb2.CheckUsernameRequest.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.BooleanValue.SerializeToString,
            ),
            'isVerified': grpc.unary_unary_rpc_method_handler(
                    servicer.isVerified,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.BooleanValue.SerializeToString,
            ),
            'ToggleAccountVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.ToggleAccountVerification,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'ToggleAccountType': grpc.unary_unary_rpc_method_handler(
                    servicer.ToggleAccountType,
                    request_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'SetPushToken': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPushToken,
                    request_deserializer=services_dot_account_dot_account__pb2.Session.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'SyncContacts': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncContacts,
                    request_deserializer=services_dot_account_dot_account__pb2.SyncContactsRequest.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'Suggestions': grpc.unary_unary_rpc_method_handler(
                    servicer.Suggestions,
                    request_deserializer=services_dot_common_dot_common__pb2.Pagination.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.AccountListResponse.SerializeToString,
            ),
            'AddAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.AddAddress,
                    request_deserializer=services_dot_account_dot_account__pb2.AccountAddress.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'UpdateAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAddress,
                    request_deserializer=services_dot_account_dot_account__pb2.AccountAddress.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'DeleteAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAddress,
                    request_deserializer=services_dot_account_dot_account__pb2.AccountAddress.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetAllAddresses': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllAddresses,
                    request_deserializer=services_dot_common_dot_common__pb2.Pagination.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.AddressListResponse.SerializeToString,
            ),
            'SetDefaultAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDefaultAddress,
                    request_deserializer=services_dot_account_dot_account__pb2.AccountAddress.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'AddCreditCard': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCreditCard,
                    request_deserializer=services_dot_account_dot_account__pb2.CreditCard.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'UpdateCreditCard': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCreditCard,
                    request_deserializer=services_dot_account_dot_account__pb2.CreditCard.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'DeleteCreditCard': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCreditCard,
                    request_deserializer=services_dot_account_dot_account__pb2.CreditCard.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetAllCreditCards': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllCreditCards,
                    request_deserializer=services_dot_common_dot_common__pb2.Pagination.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.CreditCardListResponse.SerializeToString,
            ),
            'AdminAccountApproveCreditCard': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminAccountApproveCreditCard,
                    request_deserializer=services_dot_account_dot_account__pb2.CartPublishStatusRequest.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'AdminAccountRejectCreditCard': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminAccountRejectCreditCard,
                    request_deserializer=services_dot_account_dot_account__pb2.CartPublishStatusRequest.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetSessions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSessions,
                    request_deserializer=services_dot_common_dot_common__pb2.Pagination.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.SessionListResponse.SerializeToString,
            ),
            'isSessionActive': grpc.unary_unary_rpc_method_handler(
                    servicer.isSessionActive,
                    request_deserializer=services_dot_account_dot_account__pb2.Session.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.BooleanValue.SerializeToString,
            ),
            'DeleteSession': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSession,
                    request_deserializer=services_dot_account_dot_account__pb2.Session.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'AdminAccountDisable': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminAccountDisable,
                    request_deserializer=services_dot_account_dot_account__pb2.ToggleAccount.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'AdminAccountDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminAccountDelete,
                    request_deserializer=services_dot_account_dot_account__pb2.ToggleAccount.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'AdminAccountVerify': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminAccountVerify,
                    request_deserializer=services_dot_account_dot_account__pb2.ToggleAccount.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'AdminAccountBan': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminAccountBan,
                    request_deserializer=services_dot_account_dot_account__pb2.ToggleAccount.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'AdminAccountUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminAccountUpdate,
                    request_deserializer=services_dot_account_dot_account__pb2.Account.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.Account.SerializeToString,
            ),
            'AdminAccountAll': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminAccountAll,
                    request_deserializer=services_dot_common_dot_common__pb2.Pagination.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.AccountListResponse.SerializeToString,
            ),
            'AdminSendOTP': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminSendOTP,
                    request_deserializer=services_dot_account_dot_account__pb2.SendOtpRequest.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.SendOtpResponse.SerializeToString,
            ),
            'RootCreateRole': grpc.unary_unary_rpc_method_handler(
                    servicer.RootCreateRole,
                    request_deserializer=services_dot_account_dot_account__pb2.Role.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.Role.SerializeToString,
            ),
            'RootUpdateRole': grpc.unary_unary_rpc_method_handler(
                    servicer.RootUpdateRole,
                    request_deserializer=services_dot_account_dot_account__pb2.Role.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'RootDeleteRole': grpc.unary_unary_rpc_method_handler(
                    servicer.RootDeleteRole,
                    request_deserializer=services_dot_account_dot_account__pb2.Role.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'RootGetAllRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.RootGetAllRoles,
                    request_deserializer=services_dot_common_dot_common__pb2.Pagination.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.RoleListResponse.SerializeToString,
            ),
            'RootAddPermissionToRole': grpc.unary_unary_rpc_method_handler(
                    servicer.RootAddPermissionToRole,
                    request_deserializer=services_dot_account_dot_account__pb2.RolePermission.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'RootRemovePermissionFromRole': grpc.unary_unary_rpc_method_handler(
                    servicer.RootRemovePermissionFromRole,
                    request_deserializer=services_dot_account_dot_account__pb2.RolePermission.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'RootAssignRole': grpc.unary_unary_rpc_method_handler(
                    servicer.RootAssignRole,
                    request_deserializer=services_dot_account_dot_account__pb2.AssignRoleRequest.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'RootUnassignRole': grpc.unary_unary_rpc_method_handler(
                    servicer.RootUnassignRole,
                    request_deserializer=services_dot_account_dot_account__pb2.AssignRoleRequest.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'RootGetAllPermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.RootGetAllPermissions,
                    request_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.PermissionListResponse.SerializeToString,
            ),
            'RootGetAllAccountsInRole': grpc.unary_unary_rpc_method_handler(
                    servicer.RootGetAllAccountsInRole,
                    request_deserializer=services_dot_account_dot_account__pb2.RoleAccountRequest.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.AccountListResponse.SerializeToString,
            ),
            'RootGetAccountRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.RootGetAccountRoles,
                    request_deserializer=services_dot_account_dot_account__pb2.AccountRoleRequest.FromString,
                    response_serializer=services_dot_account_dot_account__pb2.RoleListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'social.account.AccountService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AccountService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendOtp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/SendOtp',
            services_dot_account_dot_account__pb2.SendOtpRequest.SerializeToString,
            services_dot_account_dot_account__pb2.SendOtpResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyOtp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/VerifyOtp',
            services_dot_account_dot_account__pb2.VerifyOtpRequest.SerializeToString,
            services_dot_account_dot_account__pb2.VerifyOtpResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/Register',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_account_dot_account__pb2.VerifyOtpResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LogOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/LogOut',
            services_dot_common_dot_common__pb2.Empty.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/GetProfile',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_account_dot_account__pb2.Account.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProfiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/GetProfiles',
            services_dot_account_dot_account__pb2.Accounts.SerializeToString,
            services_dot_account_dot_account__pb2.Accounts.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/UpdateProfile',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_account_dot_account__pb2.Account.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNotificationSetting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/GetNotificationSetting',
            services_dot_common_dot_common__pb2.Empty.SerializeToString,
            services_dot_account_dot_account__pb2.Notification.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateNotificationSetting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/UpdateNotificationSetting',
            services_dot_account_dot_account__pb2.Notification.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Find(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/Find',
            services_dot_common_dot_common__pb2.FindRequest.SerializeToString,
            services_dot_account_dot_account__pb2.AccountListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/Delete',
            services_dot_common_dot_common__pb2.Empty.SerializeToString,
            services_dot_account_dot_account__pb2.SendOtpResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteVerify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/DeleteVerify',
            services_dot_account_dot_account__pb2.VerifyOtpRequest.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/Ping',
            services_dot_common_dot_common__pb2.Empty.SerializeToString,
            services_dot_common_dot_common__pb2.Pong.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Follow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/Follow',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unfollow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/Unfollow',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Block(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/Block',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unblock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/Unblock',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/GetBlockList',
            services_dot_account_dot_account__pb2.GetBlackListRequest.SerializeToString,
            services_dot_account_dot_account__pb2.AccountListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFollowers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/GetFollowers',
            services_dot_account_dot_account__pb2.AccountListRequest.SerializeToString,
            services_dot_account_dot_account__pb2.AccountListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFollowing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/GetFollowing',
            services_dot_account_dot_account__pb2.AccountListRequest.SerializeToString,
            services_dot_account_dot_account__pb2.GetFollowingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFollowRequests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/GetFollowRequests',
            services_dot_account_dot_account__pb2.AccountListRequest.SerializeToString,
            services_dot_account_dot_account__pb2.AccountListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefreshToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/RefreshToken',
            services_dot_account_dot_account__pb2.RefreshTokenRequest.SerializeToString,
            services_dot_account_dot_account__pb2.RefreshTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadProfilePhoto(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/UploadProfilePhoto',
            services_dot_common_dot_common__pb2.Empty.SerializeToString,
            services_dot_common_dot_common__pb2.UploadMediaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcceptFollowRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/AcceptFollowRequest',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RejectFollowRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/RejectFollowRequest',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVisibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/SetVisibility',
            services_dot_account_dot_account__pb2.SetVisibilityRequest.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPendingFollowRequests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/GetPendingFollowRequests',
            services_dot_common_dot_common__pb2.Pagination.SerializeToString,
            services_dot_account_dot_account__pb2.AccountListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def isFollowing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/isFollowing',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_common_dot_common__pb2.BooleanValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def isFollower(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/isFollower',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_common_dot_common__pb2.BooleanValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def isUsernameAvailable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/isUsernameAvailable',
            services_dot_account_dot_account__pb2.CheckUsernameRequest.SerializeToString,
            services_dot_common_dot_common__pb2.BooleanValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def isVerified(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/isVerified',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_common_dot_common__pb2.BooleanValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ToggleAccountVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/ToggleAccountVerification',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ToggleAccountType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/ToggleAccountType',
            services_dot_common_dot_common__pb2.Empty.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPushToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/SetPushToken',
            services_dot_account_dot_account__pb2.Session.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncContacts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/SyncContacts',
            services_dot_account_dot_account__pb2.SyncContactsRequest.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Suggestions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/Suggestions',
            services_dot_common_dot_common__pb2.Pagination.SerializeToString,
            services_dot_account_dot_account__pb2.AccountListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/AddAddress',
            services_dot_account_dot_account__pb2.AccountAddress.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/UpdateAddress',
            services_dot_account_dot_account__pb2.AccountAddress.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/DeleteAddress',
            services_dot_account_dot_account__pb2.AccountAddress.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllAddresses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/GetAllAddresses',
            services_dot_common_dot_common__pb2.Pagination.SerializeToString,
            services_dot_account_dot_account__pb2.AddressListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDefaultAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/SetDefaultAddress',
            services_dot_account_dot_account__pb2.AccountAddress.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddCreditCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/AddCreditCard',
            services_dot_account_dot_account__pb2.CreditCard.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCreditCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/UpdateCreditCard',
            services_dot_account_dot_account__pb2.CreditCard.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCreditCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/DeleteCreditCard',
            services_dot_account_dot_account__pb2.CreditCard.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllCreditCards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/GetAllCreditCards',
            services_dot_common_dot_common__pb2.Pagination.SerializeToString,
            services_dot_account_dot_account__pb2.CreditCardListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminAccountApproveCreditCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/AdminAccountApproveCreditCard',
            services_dot_account_dot_account__pb2.CartPublishStatusRequest.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminAccountRejectCreditCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/AdminAccountRejectCreditCard',
            services_dot_account_dot_account__pb2.CartPublishStatusRequest.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSessions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/GetSessions',
            services_dot_common_dot_common__pb2.Pagination.SerializeToString,
            services_dot_account_dot_account__pb2.SessionListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def isSessionActive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/isSessionActive',
            services_dot_account_dot_account__pb2.Session.SerializeToString,
            services_dot_common_dot_common__pb2.BooleanValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/DeleteSession',
            services_dot_account_dot_account__pb2.Session.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminAccountDisable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/AdminAccountDisable',
            services_dot_account_dot_account__pb2.ToggleAccount.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminAccountDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/AdminAccountDelete',
            services_dot_account_dot_account__pb2.ToggleAccount.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminAccountVerify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/AdminAccountVerify',
            services_dot_account_dot_account__pb2.ToggleAccount.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminAccountBan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/AdminAccountBan',
            services_dot_account_dot_account__pb2.ToggleAccount.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminAccountUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/AdminAccountUpdate',
            services_dot_account_dot_account__pb2.Account.SerializeToString,
            services_dot_account_dot_account__pb2.Account.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminAccountAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/AdminAccountAll',
            services_dot_common_dot_common__pb2.Pagination.SerializeToString,
            services_dot_account_dot_account__pb2.AccountListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminSendOTP(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/AdminSendOTP',
            services_dot_account_dot_account__pb2.SendOtpRequest.SerializeToString,
            services_dot_account_dot_account__pb2.SendOtpResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RootCreateRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/RootCreateRole',
            services_dot_account_dot_account__pb2.Role.SerializeToString,
            services_dot_account_dot_account__pb2.Role.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RootUpdateRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/RootUpdateRole',
            services_dot_account_dot_account__pb2.Role.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RootDeleteRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/RootDeleteRole',
            services_dot_account_dot_account__pb2.Role.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RootGetAllRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/RootGetAllRoles',
            services_dot_common_dot_common__pb2.Pagination.SerializeToString,
            services_dot_account_dot_account__pb2.RoleListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RootAddPermissionToRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/RootAddPermissionToRole',
            services_dot_account_dot_account__pb2.RolePermission.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RootRemovePermissionFromRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/RootRemovePermissionFromRole',
            services_dot_account_dot_account__pb2.RolePermission.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RootAssignRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/RootAssignRole',
            services_dot_account_dot_account__pb2.AssignRoleRequest.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RootUnassignRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/RootUnassignRole',
            services_dot_account_dot_account__pb2.AssignRoleRequest.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RootGetAllPermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/RootGetAllPermissions',
            services_dot_common_dot_common__pb2.Empty.SerializeToString,
            services_dot_account_dot_account__pb2.PermissionListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RootGetAllAccountsInRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/RootGetAllAccountsInRole',
            services_dot_account_dot_account__pb2.RoleAccountRequest.SerializeToString,
            services_dot_account_dot_account__pb2.AccountListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RootGetAccountRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.account.AccountService/RootGetAccountRoles',
            services_dot_account_dot_account__pb2.AccountRoleRequest.SerializeToString,
            services_dot_account_dot_account__pb2.RoleListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
