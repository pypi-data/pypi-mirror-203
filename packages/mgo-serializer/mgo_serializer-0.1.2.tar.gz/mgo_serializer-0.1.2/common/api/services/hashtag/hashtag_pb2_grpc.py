# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from common.api.services.account import account_pb2 as services_dot_account_dot_account__pb2
from common.api.services.common import common_pb2 as services_dot_common_dot_common__pb2
from common.api.services.hashtag import hashtag_pb2 as services_dot_hashtag_dot_hashtag__pb2


class HashtagServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/social.hashtag.HashtagService/Ping',
                request_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Pong.FromString,
                )
        self.Find = channel.unary_unary(
                '/social.hashtag.HashtagService/Find',
                request_serializer=services_dot_common_dot_common__pb2.FindRequest.SerializeToString,
                response_deserializer=services_dot_hashtag_dot_hashtag__pb2.FindResponse.FromString,
                )
        self.Follow = channel.unary_unary(
                '/social.hashtag.HashtagService/Follow',
                request_serializer=services_dot_hashtag_dot_hashtag__pb2.Hashtag.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.Unfollow = channel.unary_unary(
                '/social.hashtag.HashtagService/Unfollow',
                request_serializer=services_dot_hashtag_dot_hashtag__pb2.Hashtag.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.GetFeed = channel.unary_unary(
                '/social.hashtag.HashtagService/GetFeed',
                request_serializer=services_dot_hashtag_dot_hashtag__pb2.GetFeedRequest.SerializeToString,
                response_deserializer=services_dot_hashtag_dot_hashtag__pb2.GetFeedResponse.FromString,
                )
        self.GetHashtagFollowing = channel.unary_unary(
                '/social.hashtag.HashtagService/GetHashtagFollowing',
                request_serializer=services_dot_account_dot_account__pb2.AccountListRequest.SerializeToString,
                response_deserializer=services_dot_hashtag_dot_hashtag__pb2.GetHashtagFollowingResponse.FromString,
                )
        self.AdminHashtagDelete = channel.unary_unary(
                '/social.hashtag.HashtagService/AdminHashtagDelete',
                request_serializer=services_dot_hashtag_dot_hashtag__pb2.ToggleHashtag.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )
        self.AdminHashtagBan = channel.unary_unary(
                '/social.hashtag.HashtagService/AdminHashtagBan',
                request_serializer=services_dot_hashtag_dot_hashtag__pb2.ToggleHashtag.SerializeToString,
                response_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                )


class HashtagServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Find(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Follow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unfollow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHashtagFollowing(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminHashtagDelete(self, request, context):
        """Admin Section. All admin services starts with `AdminSERVICE_NAME`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminHashtagBan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HashtagServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=services_dot_common_dot_common__pb2.Empty.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Pong.SerializeToString,
            ),
            'Find': grpc.unary_unary_rpc_method_handler(
                    servicer.Find,
                    request_deserializer=services_dot_common_dot_common__pb2.FindRequest.FromString,
                    response_serializer=services_dot_hashtag_dot_hashtag__pb2.FindResponse.SerializeToString,
            ),
            'Follow': grpc.unary_unary_rpc_method_handler(
                    servicer.Follow,
                    request_deserializer=services_dot_hashtag_dot_hashtag__pb2.Hashtag.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'Unfollow': grpc.unary_unary_rpc_method_handler(
                    servicer.Unfollow,
                    request_deserializer=services_dot_hashtag_dot_hashtag__pb2.Hashtag.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetFeed': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeed,
                    request_deserializer=services_dot_hashtag_dot_hashtag__pb2.GetFeedRequest.FromString,
                    response_serializer=services_dot_hashtag_dot_hashtag__pb2.GetFeedResponse.SerializeToString,
            ),
            'GetHashtagFollowing': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHashtagFollowing,
                    request_deserializer=services_dot_account_dot_account__pb2.AccountListRequest.FromString,
                    response_serializer=services_dot_hashtag_dot_hashtag__pb2.GetHashtagFollowingResponse.SerializeToString,
            ),
            'AdminHashtagDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminHashtagDelete,
                    request_deserializer=services_dot_hashtag_dot_hashtag__pb2.ToggleHashtag.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
            'AdminHashtagBan': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminHashtagBan,
                    request_deserializer=services_dot_hashtag_dot_hashtag__pb2.ToggleHashtag.FromString,
                    response_serializer=services_dot_common_dot_common__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'social.hashtag.HashtagService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HashtagService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.hashtag.HashtagService/Ping',
            services_dot_common_dot_common__pb2.Empty.SerializeToString,
            services_dot_common_dot_common__pb2.Pong.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Find(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.hashtag.HashtagService/Find',
            services_dot_common_dot_common__pb2.FindRequest.SerializeToString,
            services_dot_hashtag_dot_hashtag__pb2.FindResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Follow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.hashtag.HashtagService/Follow',
            services_dot_hashtag_dot_hashtag__pb2.Hashtag.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unfollow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.hashtag.HashtagService/Unfollow',
            services_dot_hashtag_dot_hashtag__pb2.Hashtag.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.hashtag.HashtagService/GetFeed',
            services_dot_hashtag_dot_hashtag__pb2.GetFeedRequest.SerializeToString,
            services_dot_hashtag_dot_hashtag__pb2.GetFeedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHashtagFollowing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.hashtag.HashtagService/GetHashtagFollowing',
            services_dot_account_dot_account__pb2.AccountListRequest.SerializeToString,
            services_dot_hashtag_dot_hashtag__pb2.GetHashtagFollowingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminHashtagDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.hashtag.HashtagService/AdminHashtagDelete',
            services_dot_hashtag_dot_hashtag__pb2.ToggleHashtag.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminHashtagBan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/social.hashtag.HashtagService/AdminHashtagBan',
            services_dot_hashtag_dot_hashtag__pb2.ToggleHashtag.SerializeToString,
            services_dot_common_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
